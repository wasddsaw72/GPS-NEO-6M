
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000063c4  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004b0  08006598  08006598  00007598  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006a48  08006a48  000081ec  2**0
                  CONTENTS
  4 .ARM          00000008  08006a48  08006a48  00007a48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08006a50  08006a50  000081ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006a50  08006a50  00007a50  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006a54  08006a54  00007a54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001ec  20000000  08006a58  00008000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000590  200001ec  08006c44  000081ec  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000077c  08006c44  0000877c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000081ec  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002639  00000000  00000000  0000821c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000a92  00000000  00000000  0000a855  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000002e0  00000000  00000000  0000b2e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000211  00000000  00000000  0000b5c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00003e23  00000000  00000000  0000b7d9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003f09  00000000  00000000  0000f5fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000ca9f  00000000  00000000  00013505  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0001ffa4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002010  00000000  00000000  0001ffe8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000064  00000000  00000000  00021ff8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001ec 	.word	0x200001ec
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800657c 	.word	0x0800657c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001f0 	.word	0x200001f0
 800020c:	0800657c 	.word	0x0800657c

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	@ 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2uiz>:
 8000be8:	004a      	lsls	r2, r1, #1
 8000bea:	d211      	bcs.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bec:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bf0:	d211      	bcs.n	8000c16 <__aeabi_d2uiz+0x2e>
 8000bf2:	d50d      	bpl.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bf4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bf8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bfc:	d40e      	bmi.n	8000c1c <__aeabi_d2uiz+0x34>
 8000bfe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c02:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000c06:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c0a:	fa23 f002 	lsr.w	r0, r3, r2
 8000c0e:	4770      	bx	lr
 8000c10:	f04f 0000 	mov.w	r0, #0
 8000c14:	4770      	bx	lr
 8000c16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c1a:	d102      	bne.n	8000c22 <__aeabi_d2uiz+0x3a>
 8000c1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c20:	4770      	bx	lr
 8000c22:	f04f 0000 	mov.w	r0, #0
 8000c26:	4770      	bx	lr

08000c28 <__aeabi_d2f>:
 8000c28:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c2c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000c30:	bf24      	itt	cs
 8000c32:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000c36:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000c3a:	d90d      	bls.n	8000c58 <__aeabi_d2f+0x30>
 8000c3c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c40:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c44:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c48:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c4c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c50:	bf08      	it	eq
 8000c52:	f020 0001 	biceq.w	r0, r0, #1
 8000c56:	4770      	bx	lr
 8000c58:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c5c:	d121      	bne.n	8000ca2 <__aeabi_d2f+0x7a>
 8000c5e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c62:	bfbc      	itt	lt
 8000c64:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c68:	4770      	bxlt	lr
 8000c6a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c6e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c72:	f1c2 0218 	rsb	r2, r2, #24
 8000c76:	f1c2 0c20 	rsb	ip, r2, #32
 8000c7a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c7e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c82:	bf18      	it	ne
 8000c84:	f040 0001 	orrne.w	r0, r0, #1
 8000c88:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c8c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c90:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c94:	ea40 000c 	orr.w	r0, r0, ip
 8000c98:	fa23 f302 	lsr.w	r3, r3, r2
 8000c9c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ca0:	e7cc      	b.n	8000c3c <__aeabi_d2f+0x14>
 8000ca2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000ca6:	d107      	bne.n	8000cb8 <__aeabi_d2f+0x90>
 8000ca8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cac:	bf1e      	ittt	ne
 8000cae:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000cb2:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000cb6:	4770      	bxne	lr
 8000cb8:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000cbc:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000cc0:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_d2lz>:
 8000cc8:	b538      	push	{r3, r4, r5, lr}
 8000cca:	2200      	movs	r2, #0
 8000ccc:	2300      	movs	r3, #0
 8000cce:	4604      	mov	r4, r0
 8000cd0:	460d      	mov	r5, r1
 8000cd2:	f7ff ff23 	bl	8000b1c <__aeabi_dcmplt>
 8000cd6:	b928      	cbnz	r0, 8000ce4 <__aeabi_d2lz+0x1c>
 8000cd8:	4620      	mov	r0, r4
 8000cda:	4629      	mov	r1, r5
 8000cdc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ce0:	f000 b80a 	b.w	8000cf8 <__aeabi_d2ulz>
 8000ce4:	4620      	mov	r0, r4
 8000ce6:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000cea:	f000 f805 	bl	8000cf8 <__aeabi_d2ulz>
 8000cee:	4240      	negs	r0, r0
 8000cf0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cf4:	bd38      	pop	{r3, r4, r5, pc}
 8000cf6:	bf00      	nop

08000cf8 <__aeabi_d2ulz>:
 8000cf8:	b5d0      	push	{r4, r6, r7, lr}
 8000cfa:	4b0c      	ldr	r3, [pc, #48]	@ (8000d2c <__aeabi_d2ulz+0x34>)
 8000cfc:	2200      	movs	r2, #0
 8000cfe:	4606      	mov	r6, r0
 8000d00:	460f      	mov	r7, r1
 8000d02:	f7ff fc99 	bl	8000638 <__aeabi_dmul>
 8000d06:	f7ff ff6f 	bl	8000be8 <__aeabi_d2uiz>
 8000d0a:	4604      	mov	r4, r0
 8000d0c:	f7ff fc1a 	bl	8000544 <__aeabi_ui2d>
 8000d10:	4b07      	ldr	r3, [pc, #28]	@ (8000d30 <__aeabi_d2ulz+0x38>)
 8000d12:	2200      	movs	r2, #0
 8000d14:	f7ff fc90 	bl	8000638 <__aeabi_dmul>
 8000d18:	4602      	mov	r2, r0
 8000d1a:	460b      	mov	r3, r1
 8000d1c:	4630      	mov	r0, r6
 8000d1e:	4639      	mov	r1, r7
 8000d20:	f7ff fad2 	bl	80002c8 <__aeabi_dsub>
 8000d24:	f7ff ff60 	bl	8000be8 <__aeabi_d2uiz>
 8000d28:	4621      	mov	r1, r4
 8000d2a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d2c:	3df00000 	.word	0x3df00000
 8000d30:	41f00000 	.word	0x41f00000

08000d34 <lcd_send_command>:
static void lcd_enable(void);
static void lcd_disable(void);


void lcd_send_command(uint8_t cmd)
{
 8000d34:	b580      	push	{r7, lr}
 8000d36:	b082      	sub	sp, #8
 8000d38:	af00      	add	r7, sp, #0
 8000d3a:	4603      	mov	r3, r0
 8000d3c:	71fb      	strb	r3, [r7, #7]


	GPIO_WriteToOutputPin(LCD_GPIO_PORTA, LCD_GPIO_RS, RESET);
 8000d3e:	2200      	movs	r2, #0
 8000d40:	2109      	movs	r1, #9
 8000d42:	480e      	ldr	r0, [pc, #56]	@ (8000d7c <lcd_send_command+0x48>)
 8000d44:	f000 fb92 	bl	800146c <GPIO_WriteToOutputPin>
	udelay(50);
 8000d48:	2032      	movs	r0, #50	@ 0x32
 8000d4a:	f000 f97a 	bl	8001042 <udelay>

	write_4_bits(cmd >> 4);
 8000d4e:	79fb      	ldrb	r3, [r7, #7]
 8000d50:	091b      	lsrs	r3, r3, #4
 8000d52:	b2db      	uxtb	r3, r3
 8000d54:	4618      	mov	r0, r3
 8000d56:	f000 f8e7 	bl	8000f28 <write_4_bits>
	write_4_bits(cmd & 0x0F);
 8000d5a:	79fb      	ldrb	r3, [r7, #7]
 8000d5c:	f003 030f 	and.w	r3, r3, #15
 8000d60:	b2db      	uxtb	r3, r3
 8000d62:	4618      	mov	r0, r3
 8000d64:	f000 f8e0 	bl	8000f28 <write_4_bits>

	GPIO_WriteToOutputPin(LCD_GPIO_PORTA, LCD_GPIO_RS, SET);
 8000d68:	2201      	movs	r2, #1
 8000d6a:	2109      	movs	r1, #9
 8000d6c:	4803      	ldr	r0, [pc, #12]	@ (8000d7c <lcd_send_command+0x48>)
 8000d6e:	f000 fb7d 	bl	800146c <GPIO_WriteToOutputPin>
}
 8000d72:	bf00      	nop
 8000d74:	3708      	adds	r7, #8
 8000d76:	46bd      	mov	sp, r7
 8000d78:	bd80      	pop	{r7, pc}
 8000d7a:	bf00      	nop
 8000d7c:	40020000 	.word	0x40020000

08000d80 <lcd_init>:



void lcd_init(void)
{
 8000d80:	b580      	push	{r7, lr}
 8000d82:	b084      	sub	sp, #16
 8000d84:	af00      	add	r7, sp, #0

	GPIO_Handle_t lcd_signal;

	lcd_signal.pGPIOx = LCD_GPIO_PORTC;
 8000d86:	4b41      	ldr	r3, [pc, #260]	@ (8000e8c <lcd_init+0x10c>)
 8000d88:	607b      	str	r3, [r7, #4]
	lcd_signal.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000d8a:	2301      	movs	r3, #1
 8000d8c:	727b      	strb	r3, [r7, #9]
	lcd_signal.GPIO_PinConfig.GPIO_PinNumber = LCD_GPIO_EN ;
 8000d8e:	2307      	movs	r3, #7
 8000d90:	723b      	strb	r3, [r7, #8]
	lcd_signal.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000d92:	2300      	movs	r3, #0
 8000d94:	733b      	strb	r3, [r7, #12]
	lcd_signal.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_SPEED_FAST;
 8000d96:	2302      	movs	r3, #2
 8000d98:	72fb      	strb	r3, [r7, #11]
	lcd_signal.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000d9a:	2300      	movs	r3, #0
 8000d9c:	72fb      	strb	r3, [r7, #11]

	GPIO_Inint(&lcd_signal);                                               //E
 8000d9e:	1d3b      	adds	r3, r7, #4
 8000da0:	4618      	mov	r0, r3
 8000da2:	f000 f9cf 	bl	8001144 <GPIO_Inint>

	lcd_signal.pGPIOx = LCD_GPIO_PORTA;
 8000da6:	4b3a      	ldr	r3, [pc, #232]	@ (8000e90 <lcd_init+0x110>)
 8000da8:	607b      	str	r3, [r7, #4]
	lcd_signal.GPIO_PinConfig.GPIO_PinNumber = LCD_GPIO_RS;
 8000daa:	2309      	movs	r3, #9
 8000dac:	723b      	strb	r3, [r7, #8]
	GPIO_Inint(&lcd_signal);                                               //RS
 8000dae:	1d3b      	adds	r3, r7, #4
 8000db0:	4618      	mov	r0, r3
 8000db2:	f000 f9c7 	bl	8001144 <GPIO_Inint>

	lcd_signal.pGPIOx = LCD_GPIO_PORTA;
 8000db6:	4b36      	ldr	r3, [pc, #216]	@ (8000e90 <lcd_init+0x110>)
 8000db8:	607b      	str	r3, [r7, #4]
	lcd_signal.GPIO_PinConfig.GPIO_PinNumber = LCD_GPIO_D7;
 8000dba:	2308      	movs	r3, #8
 8000dbc:	723b      	strb	r3, [r7, #8]
	GPIO_Inint(&lcd_signal);                                               //D7
 8000dbe:	1d3b      	adds	r3, r7, #4
 8000dc0:	4618      	mov	r0, r3
 8000dc2:	f000 f9bf 	bl	8001144 <GPIO_Inint>

	lcd_signal.pGPIOx = LCD_GPIO_PORTB;
 8000dc6:	4b33      	ldr	r3, [pc, #204]	@ (8000e94 <lcd_init+0x114>)
 8000dc8:	607b      	str	r3, [r7, #4]
	lcd_signal.GPIO_PinConfig.GPIO_PinNumber = LCD_GPIO_D6;
 8000dca:	230a      	movs	r3, #10
 8000dcc:	723b      	strb	r3, [r7, #8]
	GPIO_Inint(&lcd_signal);                                               //D6
 8000dce:	1d3b      	adds	r3, r7, #4
 8000dd0:	4618      	mov	r0, r3
 8000dd2:	f000 f9b7 	bl	8001144 <GPIO_Inint>

	lcd_signal.pGPIOx = LCD_GPIO_PORTB;
 8000dd6:	4b2f      	ldr	r3, [pc, #188]	@ (8000e94 <lcd_init+0x114>)
 8000dd8:	607b      	str	r3, [r7, #4]
	lcd_signal.GPIO_PinConfig.GPIO_PinNumber = LCD_GPIO_D5;                //D5
 8000dda:	2304      	movs	r3, #4
 8000ddc:	723b      	strb	r3, [r7, #8]
	GPIO_Inint(&lcd_signal);
 8000dde:	1d3b      	adds	r3, r7, #4
 8000de0:	4618      	mov	r0, r3
 8000de2:	f000 f9af 	bl	8001144 <GPIO_Inint>

	lcd_signal.pGPIOx = LCD_GPIO_PORTB;
 8000de6:	4b2b      	ldr	r3, [pc, #172]	@ (8000e94 <lcd_init+0x114>)
 8000de8:	607b      	str	r3, [r7, #4]
	lcd_signal.GPIO_PinConfig.GPIO_PinNumber = LCD_GPIO_D4;                //D4
 8000dea:	2305      	movs	r3, #5
 8000dec:	723b      	strb	r3, [r7, #8]
	GPIO_Inint(&lcd_signal);
 8000dee:	1d3b      	adds	r3, r7, #4
 8000df0:	4618      	mov	r0, r3
 8000df2:	f000 f9a7 	bl	8001144 <GPIO_Inint>


	GPIO_WriteToOutputPin(LCD_GPIO_PORTC, LCD_GPIO_EN, RESET);
 8000df6:	2200      	movs	r2, #0
 8000df8:	2107      	movs	r1, #7
 8000dfa:	4824      	ldr	r0, [pc, #144]	@ (8000e8c <lcd_init+0x10c>)
 8000dfc:	f000 fb36 	bl	800146c <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(LCD_GPIO_PORTA, LCD_GPIO_RS, RESET);
 8000e00:	2200      	movs	r2, #0
 8000e02:	2109      	movs	r1, #9
 8000e04:	4822      	ldr	r0, [pc, #136]	@ (8000e90 <lcd_init+0x110>)
 8000e06:	f000 fb31 	bl	800146c <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(LCD_GPIO_PORTC, LCD_GPIO_D7, RESET);
 8000e0a:	2200      	movs	r2, #0
 8000e0c:	2108      	movs	r1, #8
 8000e0e:	481f      	ldr	r0, [pc, #124]	@ (8000e8c <lcd_init+0x10c>)
 8000e10:	f000 fb2c 	bl	800146c <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(LCD_GPIO_PORTB, LCD_GPIO_D6, RESET);
 8000e14:	2200      	movs	r2, #0
 8000e16:	210a      	movs	r1, #10
 8000e18:	481e      	ldr	r0, [pc, #120]	@ (8000e94 <lcd_init+0x114>)
 8000e1a:	f000 fb27 	bl	800146c <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(LCD_GPIO_PORTC, LCD_GPIO_D5, RESET);
 8000e1e:	2200      	movs	r2, #0
 8000e20:	2104      	movs	r1, #4
 8000e22:	481a      	ldr	r0, [pc, #104]	@ (8000e8c <lcd_init+0x10c>)
 8000e24:	f000 fb22 	bl	800146c <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(LCD_GPIO_PORTC, LCD_GPIO_D4, RESET);
 8000e28:	2200      	movs	r2, #0
 8000e2a:	2105      	movs	r1, #5
 8000e2c:	4817      	ldr	r0, [pc, #92]	@ (8000e8c <lcd_init+0x10c>)
 8000e2e:	f000 fb1d 	bl	800146c <GPIO_WriteToOutputPin>


	mdelay(40);
 8000e32:	2028      	movs	r0, #40	@ 0x28
 8000e34:	f000 f8ec 	bl	8001010 <mdelay>

	GPIO_WriteToOutputPin(LCD_GPIO_PORTA, LCD_GPIO_RS, RESET);
 8000e38:	2200      	movs	r2, #0
 8000e3a:	2109      	movs	r1, #9
 8000e3c:	4814      	ldr	r0, [pc, #80]	@ (8000e90 <lcd_init+0x110>)
 8000e3e:	f000 fb15 	bl	800146c <GPIO_WriteToOutputPin>

	write_4_bits(0x3);
 8000e42:	2003      	movs	r0, #3
 8000e44:	f000 f870 	bl	8000f28 <write_4_bits>

	mdelay(5);
 8000e48:	2005      	movs	r0, #5
 8000e4a:	f000 f8e1 	bl	8001010 <mdelay>

	write_4_bits(0x3);
 8000e4e:	2003      	movs	r0, #3
 8000e50:	f000 f86a 	bl	8000f28 <write_4_bits>

	udelay(100);
 8000e54:	2064      	movs	r0, #100	@ 0x64
 8000e56:	f000 f8f4 	bl	8001042 <udelay>

	write_4_bits(0x3);
 8000e5a:	2003      	movs	r0, #3
 8000e5c:	f000 f864 	bl	8000f28 <write_4_bits>
	write_4_bits(0x2);
 8000e60:	2002      	movs	r0, #2
 8000e62:	f000 f861 	bl	8000f28 <write_4_bits>


	//function set command
		lcd_send_command(LCD_CMD_4DL_2N_5X8F);
 8000e66:	2028      	movs	r0, #40	@ 0x28
 8000e68:	f7ff ff64 	bl	8000d34 <lcd_send_command>

		//disply ON and cursor ON
		lcd_send_command(LCD_CMD_DON_CURON);
 8000e6c:	200e      	movs	r0, #14
 8000e6e:	f7ff ff61 	bl	8000d34 <lcd_send_command>

		lcd_display_clear();
 8000e72:	f000 f851 	bl	8000f18 <lcd_display_clear>

		//entry mode set
		lcd_send_command(LCD_CMD_INCADD);
 8000e76:	2006      	movs	r0, #6
 8000e78:	f7ff ff5c 	bl	8000d34 <lcd_send_command>

		lcd_send_command(LCD_CMD_CURS_RECT);
 8000e7c:	200d      	movs	r0, #13
 8000e7e:	f7ff ff59 	bl	8000d34 <lcd_send_command>



}
 8000e82:	bf00      	nop
 8000e84:	3710      	adds	r7, #16
 8000e86:	46bd      	mov	sp, r7
 8000e88:	bd80      	pop	{r7, pc}
 8000e8a:	bf00      	nop
 8000e8c:	40020800 	.word	0x40020800
 8000e90:	40020000 	.word	0x40020000
 8000e94:	40020400 	.word	0x40020400

08000e98 <lcd_print_char>:

void lcd_print_char(uint8_t data)
{
 8000e98:	b580      	push	{r7, lr}
 8000e9a:	b082      	sub	sp, #8
 8000e9c:	af00      	add	r7, sp, #0
 8000e9e:	4603      	mov	r3, r0
 8000ea0:	71fb      	strb	r3, [r7, #7]


	GPIO_WriteToOutputPin(LCD_GPIO_PORTA, LCD_GPIO_RS, SET);
 8000ea2:	2201      	movs	r2, #1
 8000ea4:	2109      	movs	r1, #9
 8000ea6:	480b      	ldr	r0, [pc, #44]	@ (8000ed4 <lcd_print_char+0x3c>)
 8000ea8:	f000 fae0 	bl	800146c <GPIO_WriteToOutputPin>
	udelay(40);
 8000eac:	2028      	movs	r0, #40	@ 0x28
 8000eae:	f000 f8c8 	bl	8001042 <udelay>
	write_4_bits(data >> 4);
 8000eb2:	79fb      	ldrb	r3, [r7, #7]
 8000eb4:	091b      	lsrs	r3, r3, #4
 8000eb6:	b2db      	uxtb	r3, r3
 8000eb8:	4618      	mov	r0, r3
 8000eba:	f000 f835 	bl	8000f28 <write_4_bits>
	write_4_bits(data & 0x0F);
 8000ebe:	79fb      	ldrb	r3, [r7, #7]
 8000ec0:	f003 030f 	and.w	r3, r3, #15
 8000ec4:	b2db      	uxtb	r3, r3
 8000ec6:	4618      	mov	r0, r3
 8000ec8:	f000 f82e 	bl	8000f28 <write_4_bits>

}
 8000ecc:	bf00      	nop
 8000ece:	3708      	adds	r7, #8
 8000ed0:	46bd      	mov	sp, r7
 8000ed2:	bd80      	pop	{r7, pc}
 8000ed4:	40020000 	.word	0x40020000

08000ed8 <lcd_print_string>:

void lcd_print_string(char *message)
{
 8000ed8:	b580      	push	{r7, lr}
 8000eda:	b084      	sub	sp, #16
 8000edc:	af00      	add	r7, sp, #0
 8000ede:	6078      	str	r0, [r7, #4]
	 while (*message != '\0')
      {
          lcd_print_char((uint8_t)*message++);
      }
	 */
	uint32_t i = 0;
 8000ee0:	2300      	movs	r3, #0
 8000ee2:	60bb      	str	r3, [r7, #8]

	i = strlen(message);
 8000ee4:	6878      	ldr	r0, [r7, #4]
 8000ee6:	f7ff f9e3 	bl	80002b0 <strlen>
 8000eea:	60b8      	str	r0, [r7, #8]


	 for(uint8_t t = 0; t < i  ; t++)
 8000eec:	2300      	movs	r3, #0
 8000eee:	73fb      	strb	r3, [r7, #15]
 8000ef0:	e009      	b.n	8000f06 <lcd_print_string+0x2e>
	 {
		 lcd_print_char((uint8_t) message[t]);
 8000ef2:	7bfb      	ldrb	r3, [r7, #15]
 8000ef4:	687a      	ldr	r2, [r7, #4]
 8000ef6:	4413      	add	r3, r2
 8000ef8:	781b      	ldrb	r3, [r3, #0]
 8000efa:	4618      	mov	r0, r3
 8000efc:	f7ff ffcc 	bl	8000e98 <lcd_print_char>
	 for(uint8_t t = 0; t < i  ; t++)
 8000f00:	7bfb      	ldrb	r3, [r7, #15]
 8000f02:	3301      	adds	r3, #1
 8000f04:	73fb      	strb	r3, [r7, #15]
 8000f06:	7bfb      	ldrb	r3, [r7, #15]
 8000f08:	68ba      	ldr	r2, [r7, #8]
 8000f0a:	429a      	cmp	r2, r3
 8000f0c:	d8f1      	bhi.n	8000ef2 <lcd_print_string+0x1a>
	 }


}
 8000f0e:	bf00      	nop
 8000f10:	bf00      	nop
 8000f12:	3710      	adds	r7, #16
 8000f14:	46bd      	mov	sp, r7
 8000f16:	bd80      	pop	{r7, pc}

08000f18 <lcd_display_clear>:


void lcd_display_clear(void)
{
 8000f18:	b580      	push	{r7, lr}
 8000f1a:	af00      	add	r7, sp, #0

	lcd_send_command(LCD_CMD_DIS_CLEAR);
 8000f1c:	2001      	movs	r0, #1
 8000f1e:	f7ff ff09 	bl	8000d34 <lcd_send_command>

}
 8000f22:	bf00      	nop
 8000f24:	bd80      	pop	{r7, pc}
	...

08000f28 <write_4_bits>:
	 */
	mdelay(2);
}

static void write_4_bits(uint8_t value)
{
 8000f28:	b580      	push	{r7, lr}
 8000f2a:	b082      	sub	sp, #8
 8000f2c:	af00      	add	r7, sp, #0
 8000f2e:	4603      	mov	r3, r0
 8000f30:	71fb      	strb	r3, [r7, #7]
	lcd_enable();
 8000f32:	f000 f855 	bl	8000fe0 <lcd_enable>

	udelay(250);
 8000f36:	20fa      	movs	r0, #250	@ 0xfa
 8000f38:	f000 f883 	bl	8001042 <udelay>

	GPIO_WriteToOutputPin(LCD_GPIO_PORTB, LCD_GPIO_D4, ((value >> 0) & 0x1));
 8000f3c:	79fb      	ldrb	r3, [r7, #7]
 8000f3e:	f003 0301 	and.w	r3, r3, #1
 8000f42:	b2db      	uxtb	r3, r3
 8000f44:	461a      	mov	r2, r3
 8000f46:	2105      	movs	r1, #5
 8000f48:	4823      	ldr	r0, [pc, #140]	@ (8000fd8 <write_4_bits+0xb0>)
 8000f4a:	f000 fa8f 	bl	800146c <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(LCD_GPIO_PORTB, LCD_GPIO_D5, ((value >> 1) & 0x1));
 8000f4e:	79fb      	ldrb	r3, [r7, #7]
 8000f50:	085b      	lsrs	r3, r3, #1
 8000f52:	b2db      	uxtb	r3, r3
 8000f54:	f003 0301 	and.w	r3, r3, #1
 8000f58:	b2db      	uxtb	r3, r3
 8000f5a:	461a      	mov	r2, r3
 8000f5c:	2104      	movs	r1, #4
 8000f5e:	481e      	ldr	r0, [pc, #120]	@ (8000fd8 <write_4_bits+0xb0>)
 8000f60:	f000 fa84 	bl	800146c <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(LCD_GPIO_PORTB, LCD_GPIO_D6, ((value >> 2) & 0x1));
 8000f64:	79fb      	ldrb	r3, [r7, #7]
 8000f66:	089b      	lsrs	r3, r3, #2
 8000f68:	b2db      	uxtb	r3, r3
 8000f6a:	f003 0301 	and.w	r3, r3, #1
 8000f6e:	b2db      	uxtb	r3, r3
 8000f70:	461a      	mov	r2, r3
 8000f72:	210a      	movs	r1, #10
 8000f74:	4818      	ldr	r0, [pc, #96]	@ (8000fd8 <write_4_bits+0xb0>)
 8000f76:	f000 fa79 	bl	800146c <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(LCD_GPIO_PORTA, LCD_GPIO_D7, ((value >> 3) & 0x1));
 8000f7a:	79fb      	ldrb	r3, [r7, #7]
 8000f7c:	08db      	lsrs	r3, r3, #3
 8000f7e:	b2db      	uxtb	r3, r3
 8000f80:	f003 0301 	and.w	r3, r3, #1
 8000f84:	b2db      	uxtb	r3, r3
 8000f86:	461a      	mov	r2, r3
 8000f88:	2108      	movs	r1, #8
 8000f8a:	4814      	ldr	r0, [pc, #80]	@ (8000fdc <write_4_bits+0xb4>)
 8000f8c:	f000 fa6e 	bl	800146c <GPIO_WriteToOutputPin>

	udelay(100);
 8000f90:	2064      	movs	r0, #100	@ 0x64
 8000f92:	f000 f856 	bl	8001042 <udelay>

	lcd_disable();
 8000f96:	f000 f82f 	bl	8000ff8 <lcd_disable>

	udelay(20);
 8000f9a:	2014      	movs	r0, #20
 8000f9c:	f000 f851 	bl	8001042 <udelay>

	GPIO_WriteToOutputPin(LCD_GPIO_PORTB, LCD_GPIO_D4, RESET);
 8000fa0:	2200      	movs	r2, #0
 8000fa2:	2105      	movs	r1, #5
 8000fa4:	480c      	ldr	r0, [pc, #48]	@ (8000fd8 <write_4_bits+0xb0>)
 8000fa6:	f000 fa61 	bl	800146c <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(LCD_GPIO_PORTB, LCD_GPIO_D5, RESET);
 8000faa:	2200      	movs	r2, #0
 8000fac:	2104      	movs	r1, #4
 8000fae:	480a      	ldr	r0, [pc, #40]	@ (8000fd8 <write_4_bits+0xb0>)
 8000fb0:	f000 fa5c 	bl	800146c <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(LCD_GPIO_PORTB, LCD_GPIO_D6, RESET);
 8000fb4:	2200      	movs	r2, #0
 8000fb6:	210a      	movs	r1, #10
 8000fb8:	4807      	ldr	r0, [pc, #28]	@ (8000fd8 <write_4_bits+0xb0>)
 8000fba:	f000 fa57 	bl	800146c <GPIO_WriteToOutputPin>
	GPIO_WriteToOutputPin(LCD_GPIO_PORTA, LCD_GPIO_D7, RESET);
 8000fbe:	2200      	movs	r2, #0
 8000fc0:	2108      	movs	r1, #8
 8000fc2:	4806      	ldr	r0, [pc, #24]	@ (8000fdc <write_4_bits+0xb4>)
 8000fc4:	f000 fa52 	bl	800146c <GPIO_WriteToOutputPin>

	udelay(200);
 8000fc8:	20c8      	movs	r0, #200	@ 0xc8
 8000fca:	f000 f83a 	bl	8001042 <udelay>

}
 8000fce:	bf00      	nop
 8000fd0:	3708      	adds	r7, #8
 8000fd2:	46bd      	mov	sp, r7
 8000fd4:	bd80      	pop	{r7, pc}
 8000fd6:	bf00      	nop
 8000fd8:	40020400 	.word	0x40020400
 8000fdc:	40020000 	.word	0x40020000

08000fe0 <lcd_enable>:
      break;
  }
}

static void lcd_enable(void)
{
 8000fe0:	b580      	push	{r7, lr}
 8000fe2:	af00      	add	r7, sp, #0

	    GPIO_WriteToOutputPin(LCD_GPIO_PORTC, LCD_GPIO_EN, GPIO_PIN_SET);
 8000fe4:	2201      	movs	r2, #1
 8000fe6:	2107      	movs	r1, #7
 8000fe8:	4802      	ldr	r0, [pc, #8]	@ (8000ff4 <lcd_enable+0x14>)
 8000fea:	f000 fa3f 	bl	800146c <GPIO_WriteToOutputPin>

}
 8000fee:	bf00      	nop
 8000ff0:	bd80      	pop	{r7, pc}
 8000ff2:	bf00      	nop
 8000ff4:	40020800 	.word	0x40020800

08000ff8 <lcd_disable>:


static void lcd_disable(void)
{
 8000ff8:	b580      	push	{r7, lr}
 8000ffa:	af00      	add	r7, sp, #0

		GPIO_WriteToOutputPin(LCD_GPIO_PORTC, LCD_GPIO_EN, GPIO_PIN_RESET);
 8000ffc:	2200      	movs	r2, #0
 8000ffe:	2107      	movs	r1, #7
 8001000:	4802      	ldr	r0, [pc, #8]	@ (800100c <lcd_disable+0x14>)
 8001002:	f000 fa33 	bl	800146c <GPIO_WriteToOutputPin>

}
 8001006:	bf00      	nop
 8001008:	bd80      	pop	{r7, pc}
 800100a:	bf00      	nop
 800100c:	40020800 	.word	0x40020800

08001010 <mdelay>:



static void mdelay(uint32_t cnt)
{
 8001010:	b480      	push	{r7}
 8001012:	b085      	sub	sp, #20
 8001014:	af00      	add	r7, sp, #0
 8001016:	6078      	str	r0, [r7, #4]
	for(uint32_t i=0 ; i < (cnt * 1000); i++);
 8001018:	2300      	movs	r3, #0
 800101a:	60fb      	str	r3, [r7, #12]
 800101c:	e002      	b.n	8001024 <mdelay+0x14>
 800101e:	68fb      	ldr	r3, [r7, #12]
 8001020:	3301      	adds	r3, #1
 8001022:	60fb      	str	r3, [r7, #12]
 8001024:	687b      	ldr	r3, [r7, #4]
 8001026:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800102a:	fb02 f303 	mul.w	r3, r2, r3
 800102e:	68fa      	ldr	r2, [r7, #12]
 8001030:	429a      	cmp	r2, r3
 8001032:	d3f4      	bcc.n	800101e <mdelay+0xe>
}
 8001034:	bf00      	nop
 8001036:	bf00      	nop
 8001038:	3714      	adds	r7, #20
 800103a:	46bd      	mov	sp, r7
 800103c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001040:	4770      	bx	lr

08001042 <udelay>:

static void udelay(uint32_t cnt)
{
 8001042:	b480      	push	{r7}
 8001044:	b085      	sub	sp, #20
 8001046:	af00      	add	r7, sp, #0
 8001048:	6078      	str	r0, [r7, #4]
	for(uint32_t i=0 ; i < (cnt * 1); i++);
 800104a:	2300      	movs	r3, #0
 800104c:	60fb      	str	r3, [r7, #12]
 800104e:	e002      	b.n	8001056 <udelay+0x14>
 8001050:	68fb      	ldr	r3, [r7, #12]
 8001052:	3301      	adds	r3, #1
 8001054:	60fb      	str	r3, [r7, #12]
 8001056:	68fa      	ldr	r2, [r7, #12]
 8001058:	687b      	ldr	r3, [r7, #4]
 800105a:	429a      	cmp	r2, r3
 800105c:	d3f8      	bcc.n	8001050 <udelay+0xe>
}
 800105e:	bf00      	nop
 8001060:	bf00      	nop
 8001062:	3714      	adds	r7, #20
 8001064:	46bd      	mov	sp, r7
 8001066:	f85d 7b04 	ldr.w	r7, [sp], #4
 800106a:	4770      	bx	lr

0800106c <GPIO_PeriClockControl>:
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 800106c:	b480      	push	{r7}
 800106e:	b083      	sub	sp, #12
 8001070:	af00      	add	r7, sp, #0
 8001072:	6078      	str	r0, [r7, #4]
 8001074:	460b      	mov	r3, r1
 8001076:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8001078:	78fb      	ldrb	r3, [r7, #3]
 800107a:	2b01      	cmp	r3, #1
 800107c:	d14b      	bne.n	8001116 <GPIO_PeriClockControl+0xaa>
	{
		if(pGPIOx == GPIOA)
 800107e:	687b      	ldr	r3, [r7, #4]
 8001080:	4a28      	ldr	r2, [pc, #160]	@ (8001124 <GPIO_PeriClockControl+0xb8>)
 8001082:	4293      	cmp	r3, r2
 8001084:	d106      	bne.n	8001094 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8001086:	4b28      	ldr	r3, [pc, #160]	@ (8001128 <GPIO_PeriClockControl+0xbc>)
 8001088:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800108a:	4a27      	ldr	r2, [pc, #156]	@ (8001128 <GPIO_PeriClockControl+0xbc>)
 800108c:	f043 0301 	orr.w	r3, r3, #1
 8001090:	6313      	str	r3, [r2, #48]	@ 0x30
		{
			GPIOH_PCLK_EN();
	    }
	}

}
 8001092:	e040      	b.n	8001116 <GPIO_PeriClockControl+0xaa>
		} else if(pGPIOx == GPIOB)
 8001094:	687b      	ldr	r3, [r7, #4]
 8001096:	4a25      	ldr	r2, [pc, #148]	@ (800112c <GPIO_PeriClockControl+0xc0>)
 8001098:	4293      	cmp	r3, r2
 800109a:	d106      	bne.n	80010aa <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 800109c:	4b22      	ldr	r3, [pc, #136]	@ (8001128 <GPIO_PeriClockControl+0xbc>)
 800109e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010a0:	4a21      	ldr	r2, [pc, #132]	@ (8001128 <GPIO_PeriClockControl+0xbc>)
 80010a2:	f043 0302 	orr.w	r3, r3, #2
 80010a6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80010a8:	e035      	b.n	8001116 <GPIO_PeriClockControl+0xaa>
	    }else if(pGPIOx == GPIOC)
 80010aa:	687b      	ldr	r3, [r7, #4]
 80010ac:	4a20      	ldr	r2, [pc, #128]	@ (8001130 <GPIO_PeriClockControl+0xc4>)
 80010ae:	4293      	cmp	r3, r2
 80010b0:	d106      	bne.n	80010c0 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80010b2:	4b1d      	ldr	r3, [pc, #116]	@ (8001128 <GPIO_PeriClockControl+0xbc>)
 80010b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010b6:	4a1c      	ldr	r2, [pc, #112]	@ (8001128 <GPIO_PeriClockControl+0xbc>)
 80010b8:	f043 0304 	orr.w	r3, r3, #4
 80010bc:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80010be:	e02a      	b.n	8001116 <GPIO_PeriClockControl+0xaa>
	    }else if(pGPIOx == GPIOD)
 80010c0:	687b      	ldr	r3, [r7, #4]
 80010c2:	4a1c      	ldr	r2, [pc, #112]	@ (8001134 <GPIO_PeriClockControl+0xc8>)
 80010c4:	4293      	cmp	r3, r2
 80010c6:	d106      	bne.n	80010d6 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80010c8:	4b17      	ldr	r3, [pc, #92]	@ (8001128 <GPIO_PeriClockControl+0xbc>)
 80010ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010cc:	4a16      	ldr	r2, [pc, #88]	@ (8001128 <GPIO_PeriClockControl+0xbc>)
 80010ce:	f043 0308 	orr.w	r3, r3, #8
 80010d2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80010d4:	e01f      	b.n	8001116 <GPIO_PeriClockControl+0xaa>
	    }else if(pGPIOx == GPIOE)
 80010d6:	687b      	ldr	r3, [r7, #4]
 80010d8:	4a17      	ldr	r2, [pc, #92]	@ (8001138 <GPIO_PeriClockControl+0xcc>)
 80010da:	4293      	cmp	r3, r2
 80010dc:	d106      	bne.n	80010ec <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80010de:	4b12      	ldr	r3, [pc, #72]	@ (8001128 <GPIO_PeriClockControl+0xbc>)
 80010e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010e2:	4a11      	ldr	r2, [pc, #68]	@ (8001128 <GPIO_PeriClockControl+0xbc>)
 80010e4:	f043 0310 	orr.w	r3, r3, #16
 80010e8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80010ea:	e014      	b.n	8001116 <GPIO_PeriClockControl+0xaa>
	    }else if(pGPIOx == GPIOF)
 80010ec:	687b      	ldr	r3, [r7, #4]
 80010ee:	4a13      	ldr	r2, [pc, #76]	@ (800113c <GPIO_PeriClockControl+0xd0>)
 80010f0:	4293      	cmp	r3, r2
 80010f2:	d106      	bne.n	8001102 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80010f4:	4b0c      	ldr	r3, [pc, #48]	@ (8001128 <GPIO_PeriClockControl+0xbc>)
 80010f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80010f8:	4a0b      	ldr	r2, [pc, #44]	@ (8001128 <GPIO_PeriClockControl+0xbc>)
 80010fa:	f043 0320 	orr.w	r3, r3, #32
 80010fe:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001100:	e009      	b.n	8001116 <GPIO_PeriClockControl+0xaa>
	    }else if(pGPIOx == GPIOH)
 8001102:	687b      	ldr	r3, [r7, #4]
 8001104:	4a0e      	ldr	r2, [pc, #56]	@ (8001140 <GPIO_PeriClockControl+0xd4>)
 8001106:	4293      	cmp	r3, r2
 8001108:	d105      	bne.n	8001116 <GPIO_PeriClockControl+0xaa>
			GPIOH_PCLK_EN();
 800110a:	4b07      	ldr	r3, [pc, #28]	@ (8001128 <GPIO_PeriClockControl+0xbc>)
 800110c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800110e:	4a06      	ldr	r2, [pc, #24]	@ (8001128 <GPIO_PeriClockControl+0xbc>)
 8001110:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001114:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8001116:	bf00      	nop
 8001118:	370c      	adds	r7, #12
 800111a:	46bd      	mov	sp, r7
 800111c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001120:	4770      	bx	lr
 8001122:	bf00      	nop
 8001124:	40020000 	.word	0x40020000
 8001128:	40023800 	.word	0x40023800
 800112c:	40020400 	.word	0x40020400
 8001130:	40020800 	.word	0x40020800
 8001134:	40020c00 	.word	0x40020c00
 8001138:	40021000 	.word	0x40021000
 800113c:	40021400 	.word	0x40021400
 8001140:	40021c00 	.word	0x40021c00

08001144 <GPIO_Inint>:



void GPIO_Inint(GPIO_Handle_t *pGPIOHandle)
{
 8001144:	b480      	push	{r7}
 8001146:	b087      	sub	sp, #28
 8001148:	af00      	add	r7, sp, #0
 800114a:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 800114c:	2300      	movs	r3, #0
 800114e:	617b      	str	r3, [r7, #20]

	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8001150:	687b      	ldr	r3, [r7, #4]
 8001152:	795b      	ldrb	r3, [r3, #5]
 8001154:	2b03      	cmp	r3, #3
 8001156:	d820      	bhi.n	800119a <GPIO_Inint+0x56>
	{

		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8001158:	687b      	ldr	r3, [r7, #4]
 800115a:	795b      	ldrb	r3, [r3, #5]
 800115c:	461a      	mov	r2, r3
 800115e:	687b      	ldr	r3, [r7, #4]
 8001160:	791b      	ldrb	r3, [r3, #4]
 8001162:	005b      	lsls	r3, r3, #1
 8001164:	fa02 f303 	lsl.w	r3, r2, r3
 8001168:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800116a:	687b      	ldr	r3, [r7, #4]
 800116c:	681b      	ldr	r3, [r3, #0]
 800116e:	681a      	ldr	r2, [r3, #0]
 8001170:	687b      	ldr	r3, [r7, #4]
 8001172:	791b      	ldrb	r3, [r3, #4]
 8001174:	005b      	lsls	r3, r3, #1
 8001176:	2103      	movs	r1, #3
 8001178:	fa01 f303 	lsl.w	r3, r1, r3
 800117c:	43db      	mvns	r3, r3
 800117e:	4619      	mov	r1, r3
 8001180:	687b      	ldr	r3, [r7, #4]
 8001182:	681b      	ldr	r3, [r3, #0]
 8001184:	400a      	ands	r2, r1
 8001186:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8001188:	687b      	ldr	r3, [r7, #4]
 800118a:	681b      	ldr	r3, [r3, #0]
 800118c:	6819      	ldr	r1, [r3, #0]
 800118e:	687b      	ldr	r3, [r7, #4]
 8001190:	681b      	ldr	r3, [r3, #0]
 8001192:	697a      	ldr	r2, [r7, #20]
 8001194:	430a      	orrs	r2, r1
 8001196:	601a      	str	r2, [r3, #0]
 8001198:	e0c1      	b.n	800131e <GPIO_Inint+0x1da>

	}else{

		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_FT)// This code will later (interrups)
 800119a:	687b      	ldr	r3, [r7, #4]
 800119c:	795b      	ldrb	r3, [r3, #5]
 800119e:	2b04      	cmp	r3, #4
 80011a0:	d817      	bhi.n	80011d2 <GPIO_Inint+0x8e>
		{
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80011a2:	4b47      	ldr	r3, [pc, #284]	@ (80012c0 <GPIO_Inint+0x17c>)
 80011a4:	68db      	ldr	r3, [r3, #12]
 80011a6:	687a      	ldr	r2, [r7, #4]
 80011a8:	7912      	ldrb	r2, [r2, #4]
 80011aa:	4611      	mov	r1, r2
 80011ac:	2201      	movs	r2, #1
 80011ae:	408a      	lsls	r2, r1
 80011b0:	4611      	mov	r1, r2
 80011b2:	4a43      	ldr	r2, [pc, #268]	@ (80012c0 <GPIO_Inint+0x17c>)
 80011b4:	430b      	orrs	r3, r1
 80011b6:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80011b8:	4b41      	ldr	r3, [pc, #260]	@ (80012c0 <GPIO_Inint+0x17c>)
 80011ba:	689b      	ldr	r3, [r3, #8]
 80011bc:	687a      	ldr	r2, [r7, #4]
 80011be:	7912      	ldrb	r2, [r2, #4]
 80011c0:	4611      	mov	r1, r2
 80011c2:	2201      	movs	r2, #1
 80011c4:	408a      	lsls	r2, r1
 80011c6:	43d2      	mvns	r2, r2
 80011c8:	4611      	mov	r1, r2
 80011ca:	4a3d      	ldr	r2, [pc, #244]	@ (80012c0 <GPIO_Inint+0x17c>)
 80011cc:	400b      	ands	r3, r1
 80011ce:	6093      	str	r3, [r2, #8]
 80011d0:	e035      	b.n	800123e <GPIO_Inint+0xfa>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RT){
 80011d2:	687b      	ldr	r3, [r7, #4]
 80011d4:	795b      	ldrb	r3, [r3, #5]
 80011d6:	2b05      	cmp	r3, #5
 80011d8:	d817      	bhi.n	800120a <GPIO_Inint+0xc6>

			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80011da:	4b39      	ldr	r3, [pc, #228]	@ (80012c0 <GPIO_Inint+0x17c>)
 80011dc:	689b      	ldr	r3, [r3, #8]
 80011de:	687a      	ldr	r2, [r7, #4]
 80011e0:	7912      	ldrb	r2, [r2, #4]
 80011e2:	4611      	mov	r1, r2
 80011e4:	2201      	movs	r2, #1
 80011e6:	408a      	lsls	r2, r1
 80011e8:	4611      	mov	r1, r2
 80011ea:	4a35      	ldr	r2, [pc, #212]	@ (80012c0 <GPIO_Inint+0x17c>)
 80011ec:	430b      	orrs	r3, r1
 80011ee:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80011f0:	4b33      	ldr	r3, [pc, #204]	@ (80012c0 <GPIO_Inint+0x17c>)
 80011f2:	68db      	ldr	r3, [r3, #12]
 80011f4:	687a      	ldr	r2, [r7, #4]
 80011f6:	7912      	ldrb	r2, [r2, #4]
 80011f8:	4611      	mov	r1, r2
 80011fa:	2201      	movs	r2, #1
 80011fc:	408a      	lsls	r2, r1
 80011fe:	43d2      	mvns	r2, r2
 8001200:	4611      	mov	r1, r2
 8001202:	4a2f      	ldr	r2, [pc, #188]	@ (80012c0 <GPIO_Inint+0x17c>)
 8001204:	400b      	ands	r3, r1
 8001206:	60d3      	str	r3, [r2, #12]
 8001208:	e019      	b.n	800123e <GPIO_Inint+0xfa>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RFT){
 800120a:	687b      	ldr	r3, [r7, #4]
 800120c:	795b      	ldrb	r3, [r3, #5]
 800120e:	2b06      	cmp	r3, #6
 8001210:	d815      	bhi.n	800123e <GPIO_Inint+0xfa>

			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001212:	4b2b      	ldr	r3, [pc, #172]	@ (80012c0 <GPIO_Inint+0x17c>)
 8001214:	689b      	ldr	r3, [r3, #8]
 8001216:	687a      	ldr	r2, [r7, #4]
 8001218:	7912      	ldrb	r2, [r2, #4]
 800121a:	4611      	mov	r1, r2
 800121c:	2201      	movs	r2, #1
 800121e:	408a      	lsls	r2, r1
 8001220:	4611      	mov	r1, r2
 8001222:	4a27      	ldr	r2, [pc, #156]	@ (80012c0 <GPIO_Inint+0x17c>)
 8001224:	430b      	orrs	r3, r1
 8001226:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001228:	4b25      	ldr	r3, [pc, #148]	@ (80012c0 <GPIO_Inint+0x17c>)
 800122a:	68db      	ldr	r3, [r3, #12]
 800122c:	687a      	ldr	r2, [r7, #4]
 800122e:	7912      	ldrb	r2, [r2, #4]
 8001230:	4611      	mov	r1, r2
 8001232:	2201      	movs	r2, #1
 8001234:	408a      	lsls	r2, r1
 8001236:	4611      	mov	r1, r2
 8001238:	4a21      	ldr	r2, [pc, #132]	@ (80012c0 <GPIO_Inint+0x17c>)
 800123a:	430b      	orrs	r3, r1
 800123c:	60d3      	str	r3, [r2, #12]

		}

		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 800123e:	687b      	ldr	r3, [r7, #4]
 8001240:	791b      	ldrb	r3, [r3, #4]
 8001242:	089b      	lsrs	r3, r3, #2
 8001244:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8001246:	687b      	ldr	r3, [r7, #4]
 8001248:	791b      	ldrb	r3, [r3, #4]
 800124a:	f003 0303 	and.w	r3, r3, #3
 800124e:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8001250:	687b      	ldr	r3, [r7, #4]
 8001252:	681b      	ldr	r3, [r3, #0]
 8001254:	4a1b      	ldr	r2, [pc, #108]	@ (80012c4 <GPIO_Inint+0x180>)
 8001256:	4293      	cmp	r3, r2
 8001258:	d044      	beq.n	80012e4 <GPIO_Inint+0x1a0>
 800125a:	687b      	ldr	r3, [r7, #4]
 800125c:	681b      	ldr	r3, [r3, #0]
 800125e:	4a1a      	ldr	r2, [pc, #104]	@ (80012c8 <GPIO_Inint+0x184>)
 8001260:	4293      	cmp	r3, r2
 8001262:	d02b      	beq.n	80012bc <GPIO_Inint+0x178>
 8001264:	687b      	ldr	r3, [r7, #4]
 8001266:	681b      	ldr	r3, [r3, #0]
 8001268:	4a18      	ldr	r2, [pc, #96]	@ (80012cc <GPIO_Inint+0x188>)
 800126a:	4293      	cmp	r3, r2
 800126c:	d024      	beq.n	80012b8 <GPIO_Inint+0x174>
 800126e:	687b      	ldr	r3, [r7, #4]
 8001270:	681b      	ldr	r3, [r3, #0]
 8001272:	4a17      	ldr	r2, [pc, #92]	@ (80012d0 <GPIO_Inint+0x18c>)
 8001274:	4293      	cmp	r3, r2
 8001276:	d01d      	beq.n	80012b4 <GPIO_Inint+0x170>
 8001278:	687b      	ldr	r3, [r7, #4]
 800127a:	681b      	ldr	r3, [r3, #0]
 800127c:	4a15      	ldr	r2, [pc, #84]	@ (80012d4 <GPIO_Inint+0x190>)
 800127e:	4293      	cmp	r3, r2
 8001280:	d016      	beq.n	80012b0 <GPIO_Inint+0x16c>
 8001282:	687b      	ldr	r3, [r7, #4]
 8001284:	681b      	ldr	r3, [r3, #0]
 8001286:	4a14      	ldr	r2, [pc, #80]	@ (80012d8 <GPIO_Inint+0x194>)
 8001288:	4293      	cmp	r3, r2
 800128a:	d00f      	beq.n	80012ac <GPIO_Inint+0x168>
 800128c:	687b      	ldr	r3, [r7, #4]
 800128e:	681b      	ldr	r3, [r3, #0]
 8001290:	4a12      	ldr	r2, [pc, #72]	@ (80012dc <GPIO_Inint+0x198>)
 8001292:	4293      	cmp	r3, r2
 8001294:	d008      	beq.n	80012a8 <GPIO_Inint+0x164>
 8001296:	687b      	ldr	r3, [r7, #4]
 8001298:	681b      	ldr	r3, [r3, #0]
 800129a:	4a11      	ldr	r2, [pc, #68]	@ (80012e0 <GPIO_Inint+0x19c>)
 800129c:	4293      	cmp	r3, r2
 800129e:	d101      	bne.n	80012a4 <GPIO_Inint+0x160>
 80012a0:	2307      	movs	r3, #7
 80012a2:	e020      	b.n	80012e6 <GPIO_Inint+0x1a2>
 80012a4:	2300      	movs	r3, #0
 80012a6:	e01e      	b.n	80012e6 <GPIO_Inint+0x1a2>
 80012a8:	2306      	movs	r3, #6
 80012aa:	e01c      	b.n	80012e6 <GPIO_Inint+0x1a2>
 80012ac:	2305      	movs	r3, #5
 80012ae:	e01a      	b.n	80012e6 <GPIO_Inint+0x1a2>
 80012b0:	2304      	movs	r3, #4
 80012b2:	e018      	b.n	80012e6 <GPIO_Inint+0x1a2>
 80012b4:	2303      	movs	r3, #3
 80012b6:	e016      	b.n	80012e6 <GPIO_Inint+0x1a2>
 80012b8:	2302      	movs	r3, #2
 80012ba:	e014      	b.n	80012e6 <GPIO_Inint+0x1a2>
 80012bc:	2301      	movs	r3, #1
 80012be:	e012      	b.n	80012e6 <GPIO_Inint+0x1a2>
 80012c0:	40013c00 	.word	0x40013c00
 80012c4:	40020000 	.word	0x40020000
 80012c8:	40020400 	.word	0x40020400
 80012cc:	40020800 	.word	0x40020800
 80012d0:	40020c00 	.word	0x40020c00
 80012d4:	40021000 	.word	0x40021000
 80012d8:	40021400 	.word	0x40021400
 80012dc:	40021800 	.word	0x40021800
 80012e0:	40021c00 	.word	0x40021c00
 80012e4:	2300      	movs	r3, #0
 80012e6:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 80012e8:	4b5d      	ldr	r3, [pc, #372]	@ (8001460 <GPIO_Inint+0x31c>)
 80012ea:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80012ec:	4a5c      	ldr	r2, [pc, #368]	@ (8001460 <GPIO_Inint+0x31c>)
 80012ee:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80012f2:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] = portcode << ( temp2 * 4);
 80012f4:	7c7a      	ldrb	r2, [r7, #17]
 80012f6:	7cbb      	ldrb	r3, [r7, #18]
 80012f8:	009b      	lsls	r3, r3, #2
 80012fa:	fa02 f103 	lsl.w	r1, r2, r3
 80012fe:	4a59      	ldr	r2, [pc, #356]	@ (8001464 <GPIO_Inint+0x320>)
 8001300:	7cfb      	ldrb	r3, [r7, #19]
 8001302:	3302      	adds	r3, #2
 8001304:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8001308:	4b57      	ldr	r3, [pc, #348]	@ (8001468 <GPIO_Inint+0x324>)
 800130a:	681b      	ldr	r3, [r3, #0]
 800130c:	687a      	ldr	r2, [r7, #4]
 800130e:	7912      	ldrb	r2, [r2, #4]
 8001310:	4611      	mov	r1, r2
 8001312:	2201      	movs	r2, #1
 8001314:	408a      	lsls	r2, r1
 8001316:	4611      	mov	r1, r2
 8001318:	4a53      	ldr	r2, [pc, #332]	@ (8001468 <GPIO_Inint+0x324>)
 800131a:	430b      	orrs	r3, r1
 800131c:	6013      	str	r3, [r2, #0]

	}

	temp = 0;
 800131e:	2300      	movs	r3, #0
 8001320:	617b      	str	r3, [r7, #20]


	// SPEED

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8001322:	687b      	ldr	r3, [r7, #4]
 8001324:	799b      	ldrb	r3, [r3, #6]
 8001326:	461a      	mov	r2, r3
 8001328:	687b      	ldr	r3, [r7, #4]
 800132a:	791b      	ldrb	r3, [r3, #4]
 800132c:	005b      	lsls	r3, r3, #1
 800132e:	fa02 f303 	lsl.w	r3, r2, r3
 8001332:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001334:	687b      	ldr	r3, [r7, #4]
 8001336:	681b      	ldr	r3, [r3, #0]
 8001338:	689a      	ldr	r2, [r3, #8]
 800133a:	687b      	ldr	r3, [r7, #4]
 800133c:	791b      	ldrb	r3, [r3, #4]
 800133e:	4619      	mov	r1, r3
 8001340:	2303      	movs	r3, #3
 8001342:	408b      	lsls	r3, r1
 8001344:	43db      	mvns	r3, r3
 8001346:	4619      	mov	r1, r3
 8001348:	687b      	ldr	r3, [r7, #4]
 800134a:	681b      	ldr	r3, [r3, #0]
 800134c:	400a      	ands	r2, r1
 800134e:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDER |= temp;
 8001350:	687b      	ldr	r3, [r7, #4]
 8001352:	681b      	ldr	r3, [r3, #0]
 8001354:	6899      	ldr	r1, [r3, #8]
 8001356:	687b      	ldr	r3, [r7, #4]
 8001358:	681b      	ldr	r3, [r3, #0]
 800135a:	697a      	ldr	r2, [r7, #20]
 800135c:	430a      	orrs	r2, r1
 800135e:	609a      	str	r2, [r3, #8]

	temp = 0;
 8001360:	2300      	movs	r3, #0
 8001362:	617b      	str	r3, [r7, #20]

	//pull-up and pull-down

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 *pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8001364:	687b      	ldr	r3, [r7, #4]
 8001366:	79db      	ldrb	r3, [r3, #7]
 8001368:	461a      	mov	r2, r3
 800136a:	687b      	ldr	r3, [r7, #4]
 800136c:	791b      	ldrb	r3, [r3, #4]
 800136e:	005b      	lsls	r3, r3, #1
 8001370:	fa02 f303 	lsl.w	r3, r2, r3
 8001374:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001376:	687b      	ldr	r3, [r7, #4]
 8001378:	681b      	ldr	r3, [r3, #0]
 800137a:	68da      	ldr	r2, [r3, #12]
 800137c:	687b      	ldr	r3, [r7, #4]
 800137e:	791b      	ldrb	r3, [r3, #4]
 8001380:	4619      	mov	r1, r3
 8001382:	2303      	movs	r3, #3
 8001384:	408b      	lsls	r3, r1
 8001386:	43db      	mvns	r3, r3
 8001388:	4619      	mov	r1, r3
 800138a:	687b      	ldr	r3, [r7, #4]
 800138c:	681b      	ldr	r3, [r3, #0]
 800138e:	400a      	ands	r2, r1
 8001390:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8001392:	687b      	ldr	r3, [r7, #4]
 8001394:	681b      	ldr	r3, [r3, #0]
 8001396:	68d9      	ldr	r1, [r3, #12]
 8001398:	687b      	ldr	r3, [r7, #4]
 800139a:	681b      	ldr	r3, [r3, #0]
 800139c:	697a      	ldr	r2, [r7, #20]
 800139e:	430a      	orrs	r2, r1
 80013a0:	60da      	str	r2, [r3, #12]

	temp = 0;
 80013a2:	2300      	movs	r3, #0
 80013a4:	617b      	str	r3, [r7, #20]

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80013a6:	687b      	ldr	r3, [r7, #4]
 80013a8:	7a1b      	ldrb	r3, [r3, #8]
 80013aa:	461a      	mov	r2, r3
 80013ac:	687b      	ldr	r3, [r7, #4]
 80013ae:	791b      	ldrb	r3, [r3, #4]
 80013b0:	fa02 f303 	lsl.w	r3, r2, r3
 80013b4:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80013b6:	687b      	ldr	r3, [r7, #4]
 80013b8:	681b      	ldr	r3, [r3, #0]
 80013ba:	685a      	ldr	r2, [r3, #4]
 80013bc:	687b      	ldr	r3, [r7, #4]
 80013be:	791b      	ldrb	r3, [r3, #4]
 80013c0:	4619      	mov	r1, r3
 80013c2:	2301      	movs	r3, #1
 80013c4:	408b      	lsls	r3, r1
 80013c6:	43db      	mvns	r3, r3
 80013c8:	4619      	mov	r1, r3
 80013ca:	687b      	ldr	r3, [r7, #4]
 80013cc:	681b      	ldr	r3, [r3, #0]
 80013ce:	400a      	ands	r2, r1
 80013d0:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80013d2:	687b      	ldr	r3, [r7, #4]
 80013d4:	681b      	ldr	r3, [r3, #0]
 80013d6:	6859      	ldr	r1, [r3, #4]
 80013d8:	687b      	ldr	r3, [r7, #4]
 80013da:	681b      	ldr	r3, [r3, #0]
 80013dc:	697a      	ldr	r2, [r7, #20]
 80013de:	430a      	orrs	r2, r1
 80013e0:	605a      	str	r2, [r3, #4]

	temp = 0;
 80013e2:	2300      	movs	r3, #0
 80013e4:	617b      	str	r3, [r7, #20]


	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80013e6:	687b      	ldr	r3, [r7, #4]
 80013e8:	795b      	ldrb	r3, [r3, #5]
 80013ea:	2b02      	cmp	r3, #2
 80013ec:	d132      	bne.n	8001454 <GPIO_Inint+0x310>
	{
		uint32_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80013ee:	687b      	ldr	r3, [r7, #4]
 80013f0:	791b      	ldrb	r3, [r3, #4]
 80013f2:	08db      	lsrs	r3, r3, #3
 80013f4:	b2db      	uxtb	r3, r3
 80013f6:	60fb      	str	r3, [r7, #12]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80013f8:	687b      	ldr	r3, [r7, #4]
 80013fa:	791b      	ldrb	r3, [r3, #4]
 80013fc:	f003 0307 	and.w	r3, r3, #7
 8001400:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4*temp2) );
 8001402:	687b      	ldr	r3, [r7, #4]
 8001404:	681b      	ldr	r3, [r3, #0]
 8001406:	68fa      	ldr	r2, [r7, #12]
 8001408:	3208      	adds	r2, #8
 800140a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800140e:	68bb      	ldr	r3, [r7, #8]
 8001410:	009b      	lsls	r3, r3, #2
 8001412:	210f      	movs	r1, #15
 8001414:	fa01 f303 	lsl.w	r3, r1, r3
 8001418:	43db      	mvns	r3, r3
 800141a:	4619      	mov	r1, r3
 800141c:	687b      	ldr	r3, [r7, #4]
 800141e:	681b      	ldr	r3, [r3, #0]
 8001420:	4011      	ands	r1, r2
 8001422:	68fa      	ldr	r2, [r7, #12]
 8001424:	3208      	adds	r2, #8
 8001426:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFanMode << (4 * temp2) );
 800142a:	687b      	ldr	r3, [r7, #4]
 800142c:	681b      	ldr	r3, [r3, #0]
 800142e:	68fa      	ldr	r2, [r7, #12]
 8001430:	3208      	adds	r2, #8
 8001432:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8001436:	687b      	ldr	r3, [r7, #4]
 8001438:	7a5b      	ldrb	r3, [r3, #9]
 800143a:	4619      	mov	r1, r3
 800143c:	68bb      	ldr	r3, [r7, #8]
 800143e:	009b      	lsls	r3, r3, #2
 8001440:	fa01 f303 	lsl.w	r3, r1, r3
 8001444:	4619      	mov	r1, r3
 8001446:	687b      	ldr	r3, [r7, #4]
 8001448:	681b      	ldr	r3, [r3, #0]
 800144a:	4311      	orrs	r1, r2
 800144c:	68fa      	ldr	r2, [r7, #12]
 800144e:	3208      	adds	r2, #8
 8001450:	f843 1022 	str.w	r1, [r3, r2, lsl #2]


	}

}
 8001454:	bf00      	nop
 8001456:	371c      	adds	r7, #28
 8001458:	46bd      	mov	sp, r7
 800145a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800145e:	4770      	bx	lr
 8001460:	40023800 	.word	0x40023800
 8001464:	40013800 	.word	0x40013800
 8001468:	40013c00 	.word	0x40013c00

0800146c <GPIO_WriteToOutputPin>:
	value =(uint16_t)pGPIOx->IDR;
	return value;

}
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 800146c:	b480      	push	{r7}
 800146e:	b083      	sub	sp, #12
 8001470:	af00      	add	r7, sp, #0
 8001472:	6078      	str	r0, [r7, #4]
 8001474:	460b      	mov	r3, r1
 8001476:	70fb      	strb	r3, [r7, #3]
 8001478:	4613      	mov	r3, r2
 800147a:	70bb      	strb	r3, [r7, #2]
	if(Value == GPIO_PIN_SET)
 800147c:	78bb      	ldrb	r3, [r7, #2]
 800147e:	2b01      	cmp	r3, #1
 8001480:	d109      	bne.n	8001496 <GPIO_WriteToOutputPin+0x2a>
	{
		pGPIOx->ODR |= (1 << PinNumber);
 8001482:	687b      	ldr	r3, [r7, #4]
 8001484:	695b      	ldr	r3, [r3, #20]
 8001486:	78fa      	ldrb	r2, [r7, #3]
 8001488:	2101      	movs	r1, #1
 800148a:	fa01 f202 	lsl.w	r2, r1, r2
 800148e:	431a      	orrs	r2, r3
 8001490:	687b      	ldr	r3, [r7, #4]
 8001492:	615a      	str	r2, [r3, #20]
		pGPIOx->ODR &= ~(1 << PinNumber);

	}


}
 8001494:	e009      	b.n	80014aa <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~(1 << PinNumber);
 8001496:	687b      	ldr	r3, [r7, #4]
 8001498:	695b      	ldr	r3, [r3, #20]
 800149a:	78fa      	ldrb	r2, [r7, #3]
 800149c:	2101      	movs	r1, #1
 800149e:	fa01 f202 	lsl.w	r2, r1, r2
 80014a2:	43d2      	mvns	r2, r2
 80014a4:	401a      	ands	r2, r3
 80014a6:	687b      	ldr	r3, [r7, #4]
 80014a8:	615a      	str	r2, [r3, #20]
}
 80014aa:	bf00      	nop
 80014ac:	370c      	adds	r7, #12
 80014ae:	46bd      	mov	sp, r7
 80014b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014b4:	4770      	bx	lr
	...

080014b8 <RCC_GetPCLK1Value>:
uint8_t APB1_PreScaler[4] = { 2, 4 , 8, 16};



uint32_t RCC_GetPCLK1Value(void)
{
 80014b8:	b580      	push	{r7, lr}
 80014ba:	b084      	sub	sp, #16
 80014bc:	af00      	add	r7, sp, #0
	uint32_t pclk1,SystemClk;

	uint8_t clksrc,temp,ahbp,apb1p;

	clksrc = ((RCC->CFGR >> 2) & 0x3);
 80014be:	4b25      	ldr	r3, [pc, #148]	@ (8001554 <RCC_GetPCLK1Value+0x9c>)
 80014c0:	689b      	ldr	r3, [r3, #8]
 80014c2:	089b      	lsrs	r3, r3, #2
 80014c4:	b2db      	uxtb	r3, r3
 80014c6:	f003 0303 	and.w	r3, r3, #3
 80014ca:	727b      	strb	r3, [r7, #9]

	if(clksrc == 0 )
 80014cc:	7a7b      	ldrb	r3, [r7, #9]
 80014ce:	2b00      	cmp	r3, #0
 80014d0:	d102      	bne.n	80014d8 <RCC_GetPCLK1Value+0x20>
	{
		SystemClk = 16000000;
 80014d2:	4b21      	ldr	r3, [pc, #132]	@ (8001558 <RCC_GetPCLK1Value+0xa0>)
 80014d4:	60fb      	str	r3, [r7, #12]
 80014d6:	e00b      	b.n	80014f0 <RCC_GetPCLK1Value+0x38>
	}else if(clksrc == 1)
 80014d8:	7a7b      	ldrb	r3, [r7, #9]
 80014da:	2b01      	cmp	r3, #1
 80014dc:	d102      	bne.n	80014e4 <RCC_GetPCLK1Value+0x2c>
	{
		SystemClk = 8000000;
 80014de:	4b1f      	ldr	r3, [pc, #124]	@ (800155c <RCC_GetPCLK1Value+0xa4>)
 80014e0:	60fb      	str	r3, [r7, #12]
 80014e2:	e005      	b.n	80014f0 <RCC_GetPCLK1Value+0x38>
	}else if (clksrc == 2)
 80014e4:	7a7b      	ldrb	r3, [r7, #9]
 80014e6:	2b02      	cmp	r3, #2
 80014e8:	d102      	bne.n	80014f0 <RCC_GetPCLK1Value+0x38>
	{
		SystemClk = RCC_GetPLLOutputClock();
 80014ea:	f000 f88d 	bl	8001608 <RCC_GetPLLOutputClock>
 80014ee:	60f8      	str	r0, [r7, #12]
	}

	//for ahb
	temp = ((RCC->CFGR >> 4 ) & 0xF);
 80014f0:	4b18      	ldr	r3, [pc, #96]	@ (8001554 <RCC_GetPCLK1Value+0x9c>)
 80014f2:	689b      	ldr	r3, [r3, #8]
 80014f4:	091b      	lsrs	r3, r3, #4
 80014f6:	b2db      	uxtb	r3, r3
 80014f8:	f003 030f 	and.w	r3, r3, #15
 80014fc:	723b      	strb	r3, [r7, #8]

	if(temp < 8)
 80014fe:	7a3b      	ldrb	r3, [r7, #8]
 8001500:	2b07      	cmp	r3, #7
 8001502:	d802      	bhi.n	800150a <RCC_GetPCLK1Value+0x52>
	{
		ahbp = 1;
 8001504:	2301      	movs	r3, #1
 8001506:	72fb      	strb	r3, [r7, #11]
 8001508:	e005      	b.n	8001516 <RCC_GetPCLK1Value+0x5e>
	}else
	{
		ahbp = AHB_PreScaler[temp-8];
 800150a:	7a3b      	ldrb	r3, [r7, #8]
 800150c:	3b08      	subs	r3, #8
 800150e:	4a14      	ldr	r2, [pc, #80]	@ (8001560 <RCC_GetPCLK1Value+0xa8>)
 8001510:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001514:	72fb      	strb	r3, [r7, #11]
	}



	//apb1
	temp = ((RCC->CFGR >> 10 ) & 0x7);
 8001516:	4b0f      	ldr	r3, [pc, #60]	@ (8001554 <RCC_GetPCLK1Value+0x9c>)
 8001518:	689b      	ldr	r3, [r3, #8]
 800151a:	0a9b      	lsrs	r3, r3, #10
 800151c:	b2db      	uxtb	r3, r3
 800151e:	f003 0307 	and.w	r3, r3, #7
 8001522:	723b      	strb	r3, [r7, #8]

	if(temp < 4)
 8001524:	7a3b      	ldrb	r3, [r7, #8]
 8001526:	2b03      	cmp	r3, #3
 8001528:	d802      	bhi.n	8001530 <RCC_GetPCLK1Value+0x78>
	{
		apb1p = 1;
 800152a:	2301      	movs	r3, #1
 800152c:	72bb      	strb	r3, [r7, #10]
 800152e:	e004      	b.n	800153a <RCC_GetPCLK1Value+0x82>
	}else
	{
		apb1p = APB1_PreScaler[temp-4];
 8001530:	7a3b      	ldrb	r3, [r7, #8]
 8001532:	3b04      	subs	r3, #4
 8001534:	4a0b      	ldr	r2, [pc, #44]	@ (8001564 <RCC_GetPCLK1Value+0xac>)
 8001536:	5cd3      	ldrb	r3, [r2, r3]
 8001538:	72bb      	strb	r3, [r7, #10]
	}

	pclk1 =  (SystemClk / ahbp) /apb1p;
 800153a:	7afb      	ldrb	r3, [r7, #11]
 800153c:	68fa      	ldr	r2, [r7, #12]
 800153e:	fbb2 f2f3 	udiv	r2, r2, r3
 8001542:	7abb      	ldrb	r3, [r7, #10]
 8001544:	fbb2 f3f3 	udiv	r3, r2, r3
 8001548:	607b      	str	r3, [r7, #4]

	return pclk1;
 800154a:	687b      	ldr	r3, [r7, #4]
}
 800154c:	4618      	mov	r0, r3
 800154e:	3710      	adds	r7, #16
 8001550:	46bd      	mov	sp, r7
 8001552:	bd80      	pop	{r7, pc}
 8001554:	40023800 	.word	0x40023800
 8001558:	00f42400 	.word	0x00f42400
 800155c:	007a1200 	.word	0x007a1200
 8001560:	20000000 	.word	0x20000000
 8001564:	20000010 	.word	0x20000010

08001568 <RCC_GetPCLK2Value>:
 *
 * @Note              -

 */
uint32_t RCC_GetPCLK2Value(void)
{
 8001568:	b480      	push	{r7}
 800156a:	b085      	sub	sp, #20
 800156c:	af00      	add	r7, sp, #0
	uint32_t SystemClock=0, tmp, pclk2;
 800156e:	2300      	movs	r3, #0
 8001570:	60fb      	str	r3, [r7, #12]
	uint8_t clk_src = ( RCC->CFGR >> 2) & 0X3;
 8001572:	4b20      	ldr	r3, [pc, #128]	@ (80015f4 <RCC_GetPCLK2Value+0x8c>)
 8001574:	689b      	ldr	r3, [r3, #8]
 8001576:	089b      	lsrs	r3, r3, #2
 8001578:	b2db      	uxtb	r3, r3
 800157a:	f003 0303 	and.w	r3, r3, #3
 800157e:	727b      	strb	r3, [r7, #9]

	uint8_t ahbp, apb2p;

	if(clk_src == 0)
 8001580:	7a7b      	ldrb	r3, [r7, #9]
 8001582:	2b00      	cmp	r3, #0
 8001584:	d102      	bne.n	800158c <RCC_GetPCLK2Value+0x24>
	{
		SystemClock = 16000000;
 8001586:	4b1c      	ldr	r3, [pc, #112]	@ (80015f8 <RCC_GetPCLK2Value+0x90>)
 8001588:	60fb      	str	r3, [r7, #12]
 800158a:	e001      	b.n	8001590 <RCC_GetPCLK2Value+0x28>
	}else
	{
		SystemClock = 8000000;
 800158c:	4b1b      	ldr	r3, [pc, #108]	@ (80015fc <RCC_GetPCLK2Value+0x94>)
 800158e:	60fb      	str	r3, [r7, #12]
	}
	tmp = (RCC->CFGR >> 4 ) & 0xF;
 8001590:	4b18      	ldr	r3, [pc, #96]	@ (80015f4 <RCC_GetPCLK2Value+0x8c>)
 8001592:	689b      	ldr	r3, [r3, #8]
 8001594:	091b      	lsrs	r3, r3, #4
 8001596:	f003 030f 	and.w	r3, r3, #15
 800159a:	607b      	str	r3, [r7, #4]

	if(tmp < 0x08)
 800159c:	687b      	ldr	r3, [r7, #4]
 800159e:	2b07      	cmp	r3, #7
 80015a0:	d802      	bhi.n	80015a8 <RCC_GetPCLK2Value+0x40>
	{
		ahbp = 1;
 80015a2:	2301      	movs	r3, #1
 80015a4:	72fb      	strb	r3, [r7, #11]
 80015a6:	e005      	b.n	80015b4 <RCC_GetPCLK2Value+0x4c>
	}else
	{
       ahbp = AHB_PreScaler[tmp-8];
 80015a8:	687b      	ldr	r3, [r7, #4]
 80015aa:	3b08      	subs	r3, #8
 80015ac:	4a14      	ldr	r2, [pc, #80]	@ (8001600 <RCC_GetPCLK2Value+0x98>)
 80015ae:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80015b2:	72fb      	strb	r3, [r7, #11]
	}

	tmp = (RCC->CFGR >> 13 ) & 0x7;
 80015b4:	4b0f      	ldr	r3, [pc, #60]	@ (80015f4 <RCC_GetPCLK2Value+0x8c>)
 80015b6:	689b      	ldr	r3, [r3, #8]
 80015b8:	0b5b      	lsrs	r3, r3, #13
 80015ba:	f003 0307 	and.w	r3, r3, #7
 80015be:	607b      	str	r3, [r7, #4]
	if(tmp < 0x04)
 80015c0:	687b      	ldr	r3, [r7, #4]
 80015c2:	2b03      	cmp	r3, #3
 80015c4:	d802      	bhi.n	80015cc <RCC_GetPCLK2Value+0x64>
	{
		apb2p = 1;
 80015c6:	2301      	movs	r3, #1
 80015c8:	72bb      	strb	r3, [r7, #10]
 80015ca:	e004      	b.n	80015d6 <RCC_GetPCLK2Value+0x6e>
	}else
	{
		apb2p = APB1_PreScaler[tmp-4];
 80015cc:	687b      	ldr	r3, [r7, #4]
 80015ce:	3b04      	subs	r3, #4
 80015d0:	4a0c      	ldr	r2, [pc, #48]	@ (8001604 <RCC_GetPCLK2Value+0x9c>)
 80015d2:	5cd3      	ldrb	r3, [r2, r3]
 80015d4:	72bb      	strb	r3, [r7, #10]
	}

	pclk2 = (SystemClock / ahbp )/ apb2p;
 80015d6:	7afb      	ldrb	r3, [r7, #11]
 80015d8:	68fa      	ldr	r2, [r7, #12]
 80015da:	fbb2 f2f3 	udiv	r2, r2, r3
 80015de:	7abb      	ldrb	r3, [r7, #10]
 80015e0:	fbb2 f3f3 	udiv	r3, r2, r3
 80015e4:	603b      	str	r3, [r7, #0]

	return pclk2;
 80015e6:	683b      	ldr	r3, [r7, #0]
}
 80015e8:	4618      	mov	r0, r3
 80015ea:	3714      	adds	r7, #20
 80015ec:	46bd      	mov	sp, r7
 80015ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015f2:	4770      	bx	lr
 80015f4:	40023800 	.word	0x40023800
 80015f8:	00f42400 	.word	0x00f42400
 80015fc:	007a1200 	.word	0x007a1200
 8001600:	20000000 	.word	0x20000000
 8001604:	20000010 	.word	0x20000010

08001608 <RCC_GetPLLOutputClock>:

uint32_t  RCC_GetPLLOutputClock()
{
 8001608:	b480      	push	{r7}
 800160a:	af00      	add	r7, sp, #0

	return 0;
 800160c:	2300      	movs	r3, #0
}
 800160e:	4618      	mov	r0, r3
 8001610:	46bd      	mov	sp, r7
 8001612:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001616:	4770      	bx	lr

08001618 <USART_SetBaudRate>:
 *
 * @Note              -

 */
void USART_SetBaudRate(USART_RegDef_t *pUSARTx, uint32_t BaudRate)
{
 8001618:	b580      	push	{r7, lr}
 800161a:	b088      	sub	sp, #32
 800161c:	af00      	add	r7, sp, #0
 800161e:	6078      	str	r0, [r7, #4]
 8001620:	6039      	str	r1, [r7, #0]
	uint32_t usartdiv;

	//variables to hold Mantissa and Fraction values
	uint32_t M_part,F_part;

  uint32_t tempreg=0;
 8001622:	2300      	movs	r3, #0
 8001624:	613b      	str	r3, [r7, #16]

  //Get the value of APB bus clock in to the variable PCLKx
  if(pUSARTx == USART1 || pUSARTx == USART6)
 8001626:	687b      	ldr	r3, [r7, #4]
 8001628:	4a31      	ldr	r2, [pc, #196]	@ (80016f0 <USART_SetBaudRate+0xd8>)
 800162a:	4293      	cmp	r3, r2
 800162c:	d003      	beq.n	8001636 <USART_SetBaudRate+0x1e>
 800162e:	687b      	ldr	r3, [r7, #4]
 8001630:	4a30      	ldr	r2, [pc, #192]	@ (80016f4 <USART_SetBaudRate+0xdc>)
 8001632:	4293      	cmp	r3, r2
 8001634:	d103      	bne.n	800163e <USART_SetBaudRate+0x26>
  {
	   //USART1 and USART6 are hanging on APB2 bus
	   PCLKx = RCC_GetPCLK2Value();
 8001636:	f7ff ff97 	bl	8001568 <RCC_GetPCLK2Value>
 800163a:	61f8      	str	r0, [r7, #28]
 800163c:	e002      	b.n	8001644 <USART_SetBaudRate+0x2c>
  }else
  {
	   PCLKx = RCC_GetPCLK1Value();
 800163e:	f7ff ff3b 	bl	80014b8 <RCC_GetPCLK1Value>
 8001642:	61f8      	str	r0, [r7, #28]
  }

  //Check for OVER8 configuration bit
  if(pUSARTx->CR1 & (1 << USART_CR1_OVER8))
 8001644:	687b      	ldr	r3, [r7, #4]
 8001646:	68db      	ldr	r3, [r3, #12]
 8001648:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800164c:	2b00      	cmp	r3, #0
 800164e:	d00b      	beq.n	8001668 <USART_SetBaudRate+0x50>
  {
	   //OVER8 = 1 , over sampling by 8
	   usartdiv = ((25 * PCLKx) / (2 *BaudRate));
 8001650:	69fa      	ldr	r2, [r7, #28]
 8001652:	4613      	mov	r3, r2
 8001654:	009b      	lsls	r3, r3, #2
 8001656:	4413      	add	r3, r2
 8001658:	009a      	lsls	r2, r3, #2
 800165a:	441a      	add	r2, r3
 800165c:	683b      	ldr	r3, [r7, #0]
 800165e:	005b      	lsls	r3, r3, #1
 8001660:	fbb2 f3f3 	udiv	r3, r2, r3
 8001664:	61bb      	str	r3, [r7, #24]
 8001666:	e00a      	b.n	800167e <USART_SetBaudRate+0x66>
  }else
  {
	   //over sampling by 16
	   usartdiv = ((25 * PCLKx) / (4 *BaudRate));
 8001668:	69fa      	ldr	r2, [r7, #28]
 800166a:	4613      	mov	r3, r2
 800166c:	009b      	lsls	r3, r3, #2
 800166e:	4413      	add	r3, r2
 8001670:	009a      	lsls	r2, r3, #2
 8001672:	441a      	add	r2, r3
 8001674:	683b      	ldr	r3, [r7, #0]
 8001676:	009b      	lsls	r3, r3, #2
 8001678:	fbb2 f3f3 	udiv	r3, r2, r3
 800167c:	61bb      	str	r3, [r7, #24]
  }

  //Calculate the Mantissa part
  M_part = usartdiv/100;
 800167e:	69bb      	ldr	r3, [r7, #24]
 8001680:	4a1d      	ldr	r2, [pc, #116]	@ (80016f8 <USART_SetBaudRate+0xe0>)
 8001682:	fba2 2303 	umull	r2, r3, r2, r3
 8001686:	095b      	lsrs	r3, r3, #5
 8001688:	60fb      	str	r3, [r7, #12]

  //Place the Mantissa part in appropriate bit position . refer USART_BRR
  tempreg |= M_part << 4;
 800168a:	68fb      	ldr	r3, [r7, #12]
 800168c:	011b      	lsls	r3, r3, #4
 800168e:	693a      	ldr	r2, [r7, #16]
 8001690:	4313      	orrs	r3, r2
 8001692:	613b      	str	r3, [r7, #16]

  //Extract the fraction part
  F_part = (usartdiv - (M_part * 100));
 8001694:	68fb      	ldr	r3, [r7, #12]
 8001696:	2264      	movs	r2, #100	@ 0x64
 8001698:	fb02 f303 	mul.w	r3, r2, r3
 800169c:	69ba      	ldr	r2, [r7, #24]
 800169e:	1ad3      	subs	r3, r2, r3
 80016a0:	617b      	str	r3, [r7, #20]

  //Calculate the final fractional
  if(pUSARTx->CR1 & ( 1 << USART_CR1_OVER8))
 80016a2:	687b      	ldr	r3, [r7, #4]
 80016a4:	68db      	ldr	r3, [r3, #12]
 80016a6:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80016aa:	2b00      	cmp	r3, #0
 80016ac:	d00a      	beq.n	80016c4 <USART_SetBaudRate+0xac>
   {
	  //OVER8 = 1 , over sampling by 8
	  F_part = ((( F_part * 8)+ 50) / 100)& ((uint8_t)0x07);
 80016ae:	697b      	ldr	r3, [r7, #20]
 80016b0:	00db      	lsls	r3, r3, #3
 80016b2:	3332      	adds	r3, #50	@ 0x32
 80016b4:	4a10      	ldr	r2, [pc, #64]	@ (80016f8 <USART_SetBaudRate+0xe0>)
 80016b6:	fba2 2303 	umull	r2, r3, r2, r3
 80016ba:	095b      	lsrs	r3, r3, #5
 80016bc:	f003 0307 	and.w	r3, r3, #7
 80016c0:	617b      	str	r3, [r7, #20]
 80016c2:	e009      	b.n	80016d8 <USART_SetBaudRate+0xc0>

   }else
   {
	   //over sampling by 16
	   F_part = ((( F_part * 16)+ 50) / 100) & ((uint8_t)0x0F);
 80016c4:	697b      	ldr	r3, [r7, #20]
 80016c6:	011b      	lsls	r3, r3, #4
 80016c8:	3332      	adds	r3, #50	@ 0x32
 80016ca:	4a0b      	ldr	r2, [pc, #44]	@ (80016f8 <USART_SetBaudRate+0xe0>)
 80016cc:	fba2 2303 	umull	r2, r3, r2, r3
 80016d0:	095b      	lsrs	r3, r3, #5
 80016d2:	f003 030f 	and.w	r3, r3, #15
 80016d6:	617b      	str	r3, [r7, #20]

   }

  //Place the fractional part in appropriate bit position . refer USART_BRR
  tempreg |= F_part;
 80016d8:	693a      	ldr	r2, [r7, #16]
 80016da:	697b      	ldr	r3, [r7, #20]
 80016dc:	4313      	orrs	r3, r2
 80016de:	613b      	str	r3, [r7, #16]

  //copy the value of tempreg in to BRR register
  pUSARTx->BRR = tempreg;
 80016e0:	687b      	ldr	r3, [r7, #4]
 80016e2:	693a      	ldr	r2, [r7, #16]
 80016e4:	609a      	str	r2, [r3, #8]
}
 80016e6:	bf00      	nop
 80016e8:	3720      	adds	r7, #32
 80016ea:	46bd      	mov	sp, r7
 80016ec:	bd80      	pop	{r7, pc}
 80016ee:	bf00      	nop
 80016f0:	40011000 	.word	0x40011000
 80016f4:	40011400 	.word	0x40011400
 80016f8:	51eb851f 	.word	0x51eb851f

080016fc <USART_Init>:
 *
 * @Note              -

 */
void USART_Init(USART_Handle_t *pUSARTHandle)
{
 80016fc:	b580      	push	{r7, lr}
 80016fe:	b084      	sub	sp, #16
 8001700:	af00      	add	r7, sp, #0
 8001702:	6078      	str	r0, [r7, #4]

	//Temporary variable
	uint32_t tempreg=0;
 8001704:	2300      	movs	r3, #0
 8001706:	60fb      	str	r3, [r7, #12]

/******************************** Configuration of CR1******************************************/

	//Implement the code to enable the Clock for given USART peripheral
	 USART_PeriClockControl(pUSARTHandle->pUSARTx, ENABLE);
 8001708:	687b      	ldr	r3, [r7, #4]
 800170a:	681b      	ldr	r3, [r3, #0]
 800170c:	2101      	movs	r1, #1
 800170e:	4618      	mov	r0, r3
 8001710:	f000 f87a 	bl	8001808 <USART_PeriClockControl>

	//Enable USART Tx and Rx engines according to the USART_Mode configuration item
	if ( pUSARTHandle->USART_Config.USART_Mode == USART_MODE_ONLY_RX)
 8001714:	687b      	ldr	r3, [r7, #4]
 8001716:	791b      	ldrb	r3, [r3, #4]
 8001718:	2b01      	cmp	r3, #1
 800171a:	d104      	bne.n	8001726 <USART_Init+0x2a>
	{
		//Implement the code to enable the Receiver bit field
		tempreg|= (1 << USART_CR1_RE);
 800171c:	68fb      	ldr	r3, [r7, #12]
 800171e:	f043 0304 	orr.w	r3, r3, #4
 8001722:	60fb      	str	r3, [r7, #12]
 8001724:	e010      	b.n	8001748 <USART_Init+0x4c>
	}else if (pUSARTHandle->USART_Config.USART_Mode == USART_MODE_ONLY_TX)
 8001726:	687b      	ldr	r3, [r7, #4]
 8001728:	791b      	ldrb	r3, [r3, #4]
 800172a:	2b00      	cmp	r3, #0
 800172c:	d104      	bne.n	8001738 <USART_Init+0x3c>
	{
		//Implement the code to enable the Transmitter bit field
		tempreg |= ( 1 << USART_CR1_TE );
 800172e:	68fb      	ldr	r3, [r7, #12]
 8001730:	f043 0308 	orr.w	r3, r3, #8
 8001734:	60fb      	str	r3, [r7, #12]
 8001736:	e007      	b.n	8001748 <USART_Init+0x4c>

	}else if (pUSARTHandle->USART_Config.USART_Mode == USART_MODE_TXRX)
 8001738:	687b      	ldr	r3, [r7, #4]
 800173a:	791b      	ldrb	r3, [r3, #4]
 800173c:	2b02      	cmp	r3, #2
 800173e:	d103      	bne.n	8001748 <USART_Init+0x4c>
	{
		//Implement the code to enable the both Transmitter and Receiver bit fields
		tempreg |= ( ( 1 << USART_CR1_RE) | ( 1 << USART_CR1_TE) );
 8001740:	68fb      	ldr	r3, [r7, #12]
 8001742:	f043 030c 	orr.w	r3, r3, #12
 8001746:	60fb      	str	r3, [r7, #12]
	}

    //Implement the code to configure the Word length configuration item
	tempreg |= pUSARTHandle->USART_Config.USART_WordLength << USART_CR1_M ;
 8001748:	687b      	ldr	r3, [r7, #4]
 800174a:	7b5b      	ldrb	r3, [r3, #13]
 800174c:	031b      	lsls	r3, r3, #12
 800174e:	68fa      	ldr	r2, [r7, #12]
 8001750:	4313      	orrs	r3, r2
 8001752:	60fb      	str	r3, [r7, #12]


    //Configuration of parity control bit fields
	if ( pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_EN_EVEN)
 8001754:	687b      	ldr	r3, [r7, #4]
 8001756:	7b9b      	ldrb	r3, [r3, #14]
 8001758:	2b01      	cmp	r3, #1
 800175a:	d104      	bne.n	8001766 <USART_Init+0x6a>
	{
		//Implement the code to enable the parity control
		tempreg |= ( 1 << USART_CR1_PCE);
 800175c:	68fb      	ldr	r3, [r7, #12]
 800175e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001762:	60fb      	str	r3, [r7, #12]
 8001764:	e00b      	b.n	800177e <USART_Init+0x82>

		//Implement the code to enable EVEN parity
		//Not required because by default EVEN parity will be selected once you enable the parity control

	}else if (pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_EN_ODD )
 8001766:	687b      	ldr	r3, [r7, #4]
 8001768:	7b9b      	ldrb	r3, [r3, #14]
 800176a:	2b02      	cmp	r3, #2
 800176c:	d107      	bne.n	800177e <USART_Init+0x82>
	{
		//Implement the code to enable the parity control
	    tempreg |= ( 1 << USART_CR1_PCE);
 800176e:	68fb      	ldr	r3, [r7, #12]
 8001770:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001774:	60fb      	str	r3, [r7, #12]

	    //Implement the code to enable ODD parity
	    tempreg |= ( 1 << USART_CR1_PS);
 8001776:	68fb      	ldr	r3, [r7, #12]
 8001778:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800177c:	60fb      	str	r3, [r7, #12]

	}

	tempreg |= (1 << USART_CR1_UE);
 800177e:	68fb      	ldr	r3, [r7, #12]
 8001780:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001784:	60fb      	str	r3, [r7, #12]


   //Program the CR1 register
	pUSARTHandle->pUSARTx->CR1 = tempreg;
 8001786:	687b      	ldr	r3, [r7, #4]
 8001788:	681b      	ldr	r3, [r3, #0]
 800178a:	68fa      	ldr	r2, [r7, #12]
 800178c:	60da      	str	r2, [r3, #12]

/******************************** Configuration of CR2******************************************/

	tempreg=0;
 800178e:	2300      	movs	r3, #0
 8001790:	60fb      	str	r3, [r7, #12]

	//Implement the code to configure the number of stop bits inserted during USART frame transmission
	tempreg |= pUSARTHandle->USART_Config.USART_NoOfStopBits << USART_CR2_STOP;
 8001792:	687b      	ldr	r3, [r7, #4]
 8001794:	7b1b      	ldrb	r3, [r3, #12]
 8001796:	031b      	lsls	r3, r3, #12
 8001798:	68fa      	ldr	r2, [r7, #12]
 800179a:	4313      	orrs	r3, r2
 800179c:	60fb      	str	r3, [r7, #12]

	//Program the CR2 register
	pUSARTHandle->pUSARTx->CR2 = tempreg;
 800179e:	687b      	ldr	r3, [r7, #4]
 80017a0:	681b      	ldr	r3, [r3, #0]
 80017a2:	68fa      	ldr	r2, [r7, #12]
 80017a4:	611a      	str	r2, [r3, #16]

/******************************** Configuration of CR3******************************************/

	tempreg=0;
 80017a6:	2300      	movs	r3, #0
 80017a8:	60fb      	str	r3, [r7, #12]

	//Configuration of USART hardware flow control
	if ( pUSARTHandle->USART_Config.USART_HWFlowControl == USART_HW_FLOW_CTRL_CTS)
 80017aa:	687b      	ldr	r3, [r7, #4]
 80017ac:	7bdb      	ldrb	r3, [r3, #15]
 80017ae:	2b01      	cmp	r3, #1
 80017b0:	d104      	bne.n	80017bc <USART_Init+0xc0>
	{
		//Implement the code to enable CTS flow control
		tempreg |= ( 1 << USART_CR3_CTSE);
 80017b2:	68fb      	ldr	r3, [r7, #12]
 80017b4:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80017b8:	60fb      	str	r3, [r7, #12]
 80017ba:	e014      	b.n	80017e6 <USART_Init+0xea>


	}else if (pUSARTHandle->USART_Config.USART_HWFlowControl == USART_HW_FLOW_CTRL_RTS)
 80017bc:	687b      	ldr	r3, [r7, #4]
 80017be:	7bdb      	ldrb	r3, [r3, #15]
 80017c0:	2b02      	cmp	r3, #2
 80017c2:	d104      	bne.n	80017ce <USART_Init+0xd2>
	{
		//Implement the code to enable RTS flow control
		tempreg |= ( 1 << USART_CR3_RTSE);
 80017c4:	68fb      	ldr	r3, [r7, #12]
 80017c6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80017ca:	60fb      	str	r3, [r7, #12]
 80017cc:	e00b      	b.n	80017e6 <USART_Init+0xea>

	}else if (pUSARTHandle->USART_Config.USART_HWFlowControl == USART_HW_FLOW_CTRL_CTS_RTS)
 80017ce:	687b      	ldr	r3, [r7, #4]
 80017d0:	7bdb      	ldrb	r3, [r3, #15]
 80017d2:	2b03      	cmp	r3, #3
 80017d4:	d107      	bne.n	80017e6 <USART_Init+0xea>
	{
		//Implement the code to enable both CTS and RTS Flow control
		tempreg |= ( 1 << USART_CR3_CTSE);
 80017d6:	68fb      	ldr	r3, [r7, #12]
 80017d8:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80017dc:	60fb      	str	r3, [r7, #12]
		tempreg |= ( 1 << USART_CR3_RTSE);
 80017de:	68fb      	ldr	r3, [r7, #12]
 80017e0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80017e4:	60fb      	str	r3, [r7, #12]
	}


	pUSARTHandle->pUSARTx->CR3 = tempreg;
 80017e6:	687b      	ldr	r3, [r7, #4]
 80017e8:	681b      	ldr	r3, [r3, #0]
 80017ea:	68fa      	ldr	r2, [r7, #12]
 80017ec:	615a      	str	r2, [r3, #20]

/******************************** Configuration of BRR(Baudrate register)******************************************/

	//Implement the code to configure the baud rate
	//We will cover this in the lecture. No action required here
	USART_SetBaudRate(pUSARTHandle->pUSARTx,pUSARTHandle->USART_Config.USART_Baud);
 80017ee:	687b      	ldr	r3, [r7, #4]
 80017f0:	681a      	ldr	r2, [r3, #0]
 80017f2:	687b      	ldr	r3, [r7, #4]
 80017f4:	689b      	ldr	r3, [r3, #8]
 80017f6:	4619      	mov	r1, r3
 80017f8:	4610      	mov	r0, r2
 80017fa:	f7ff ff0d 	bl	8001618 <USART_SetBaudRate>

}
 80017fe:	bf00      	nop
 8001800:	3710      	adds	r7, #16
 8001802:	46bd      	mov	sp, r7
 8001804:	bd80      	pop	{r7, pc}
	...

08001808 <USART_PeriClockControl>:
 *
 * @Note              -

 */
void USART_PeriClockControl(USART_RegDef_t *pUSARTx, uint8_t EnorDi)
{
 8001808:	b480      	push	{r7}
 800180a:	b083      	sub	sp, #12
 800180c:	af00      	add	r7, sp, #0
 800180e:	6078      	str	r0, [r7, #4]
 8001810:	460b      	mov	r3, r1
 8001812:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8001814:	78fb      	ldrb	r3, [r7, #3]
 8001816:	2b01      	cmp	r3, #1
 8001818:	d12a      	bne.n	8001870 <USART_PeriClockControl+0x68>
	{
		if(pUSARTx == USART1)
 800181a:	687b      	ldr	r3, [r7, #4]
 800181c:	4a17      	ldr	r2, [pc, #92]	@ (800187c <USART_PeriClockControl+0x74>)
 800181e:	4293      	cmp	r3, r2
 8001820:	d106      	bne.n	8001830 <USART_PeriClockControl+0x28>
		{
			USART1_PCCK_EN();
 8001822:	4b17      	ldr	r3, [pc, #92]	@ (8001880 <USART_PeriClockControl+0x78>)
 8001824:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001826:	4a16      	ldr	r2, [pc, #88]	@ (8001880 <USART_PeriClockControl+0x78>)
 8001828:	f043 0310 	orr.w	r3, r3, #16
 800182c:	6453      	str	r3, [r2, #68]	@ 0x44
			UART4_PCCK_EN();
		}
	}


}
 800182e:	e01f      	b.n	8001870 <USART_PeriClockControl+0x68>
		}else if (pUSARTx == USART2)
 8001830:	687b      	ldr	r3, [r7, #4]
 8001832:	4a14      	ldr	r2, [pc, #80]	@ (8001884 <USART_PeriClockControl+0x7c>)
 8001834:	4293      	cmp	r3, r2
 8001836:	d106      	bne.n	8001846 <USART_PeriClockControl+0x3e>
			USART2_PCCK_EN();
 8001838:	4b11      	ldr	r3, [pc, #68]	@ (8001880 <USART_PeriClockControl+0x78>)
 800183a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800183c:	4a10      	ldr	r2, [pc, #64]	@ (8001880 <USART_PeriClockControl+0x78>)
 800183e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001842:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001844:	e014      	b.n	8001870 <USART_PeriClockControl+0x68>
		}else if (pUSARTx == USART3)
 8001846:	687b      	ldr	r3, [r7, #4]
 8001848:	4a0f      	ldr	r2, [pc, #60]	@ (8001888 <USART_PeriClockControl+0x80>)
 800184a:	4293      	cmp	r3, r2
 800184c:	d106      	bne.n	800185c <USART_PeriClockControl+0x54>
			USART3_PCCK_EN();
 800184e:	4b0c      	ldr	r3, [pc, #48]	@ (8001880 <USART_PeriClockControl+0x78>)
 8001850:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001852:	4a0b      	ldr	r2, [pc, #44]	@ (8001880 <USART_PeriClockControl+0x78>)
 8001854:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001858:	6413      	str	r3, [r2, #64]	@ 0x40
}
 800185a:	e009      	b.n	8001870 <USART_PeriClockControl+0x68>
		else if (pUSARTx == UART4)
 800185c:	687b      	ldr	r3, [r7, #4]
 800185e:	4a0b      	ldr	r2, [pc, #44]	@ (800188c <USART_PeriClockControl+0x84>)
 8001860:	4293      	cmp	r3, r2
 8001862:	d105      	bne.n	8001870 <USART_PeriClockControl+0x68>
			UART4_PCCK_EN();
 8001864:	4b06      	ldr	r3, [pc, #24]	@ (8001880 <USART_PeriClockControl+0x78>)
 8001866:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001868:	4a05      	ldr	r2, [pc, #20]	@ (8001880 <USART_PeriClockControl+0x78>)
 800186a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 800186e:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8001870:	bf00      	nop
 8001872:	370c      	adds	r7, #12
 8001874:	46bd      	mov	sp, r7
 8001876:	f85d 7b04 	ldr.w	r7, [sp], #4
 800187a:	4770      	bx	lr
 800187c:	40011000 	.word	0x40011000
 8001880:	40023800 	.word	0x40023800
 8001884:	40004400 	.word	0x40004400
 8001888:	40004800 	.word	0x40004800
 800188c:	40004c00 	.word	0x40004c00

08001890 <USART_GetFlagStatus>:
 *
 * @Note              -

 */
uint8_t USART_GetFlagStatus(USART_RegDef_t *pUSARTx, uint8_t StatusFlagName)
{
 8001890:	b480      	push	{r7}
 8001892:	b083      	sub	sp, #12
 8001894:	af00      	add	r7, sp, #0
 8001896:	6078      	str	r0, [r7, #4]
 8001898:	460b      	mov	r3, r1
 800189a:	70fb      	strb	r3, [r7, #3]
    if(pUSARTx->SR & StatusFlagName)
 800189c:	687b      	ldr	r3, [r7, #4]
 800189e:	681a      	ldr	r2, [r3, #0]
 80018a0:	78fb      	ldrb	r3, [r7, #3]
 80018a2:	4013      	ands	r3, r2
 80018a4:	2b00      	cmp	r3, #0
 80018a6:	d001      	beq.n	80018ac <USART_GetFlagStatus+0x1c>
    {
    	return SET;
 80018a8:	2301      	movs	r3, #1
 80018aa:	e000      	b.n	80018ae <USART_GetFlagStatus+0x1e>
    }

   return RESET;
 80018ac:	2300      	movs	r3, #0
}
 80018ae:	4618      	mov	r0, r3
 80018b0:	370c      	adds	r7, #12
 80018b2:	46bd      	mov	sp, r7
 80018b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018b8:	4770      	bx	lr

080018ba <USART_ReceiveData>:
 * @Note              -

 */

void USART_ReceiveData(USART_Handle_t *pUSARTHandle, uint8_t *pRxBuffer, uint32_t Len)
{
 80018ba:	b580      	push	{r7, lr}
 80018bc:	b086      	sub	sp, #24
 80018be:	af00      	add	r7, sp, #0
 80018c0:	60f8      	str	r0, [r7, #12]
 80018c2:	60b9      	str	r1, [r7, #8]
 80018c4:	607a      	str	r2, [r7, #4]
   //Loop over until "Len" number of bytes are transferred
	for(uint32_t i = 0 ; i < Len; i++)
 80018c6:	2300      	movs	r3, #0
 80018c8:	617b      	str	r3, [r7, #20]
 80018ca:	e045      	b.n	8001958 <USART_ReceiveData+0x9e>
	{
		//Implement the code to wait until RXNE flag is set in the SR
		while(! USART_GetFlagStatus(pUSARTHandle->pUSARTx,USART_FLAG_RXNE));
 80018cc:	bf00      	nop
 80018ce:	68fb      	ldr	r3, [r7, #12]
 80018d0:	681b      	ldr	r3, [r3, #0]
 80018d2:	2120      	movs	r1, #32
 80018d4:	4618      	mov	r0, r3
 80018d6:	f7ff ffdb 	bl	8001890 <USART_GetFlagStatus>
 80018da:	4603      	mov	r3, r0
 80018dc:	2b00      	cmp	r3, #0
 80018de:	d0f6      	beq.n	80018ce <USART_ReceiveData+0x14>

		//Check the USART_WordLength to decide whether we are going to receive 9bit of data in a frame or 8 bit
		if(pUSARTHandle->USART_Config.USART_WordLength == USART_WORDLEN_9BITS)
 80018e0:	68fb      	ldr	r3, [r7, #12]
 80018e2:	7b5b      	ldrb	r3, [r3, #13]
 80018e4:	2b01      	cmp	r3, #1
 80018e6:	d11d      	bne.n	8001924 <USART_ReceiveData+0x6a>
		{
			//We are going to receive 9bit data in a frame

			//Now, check are we using USART_ParityControl control or not
			if(pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_DISABLE)
 80018e8:	68fb      	ldr	r3, [r7, #12]
 80018ea:	7b9b      	ldrb	r3, [r3, #14]
 80018ec:	2b00      	cmp	r3, #0
 80018ee:	d10f      	bne.n	8001910 <USART_ReceiveData+0x56>
			{
				//No parity is used , so all 9bits will be of user data

				//read only first 9 bits so mask the DR with 0x01FF
				*((uint16_t*) pRxBuffer) = (pUSARTHandle->pUSARTx->DR  & (uint16_t)0x01FF);
 80018f0:	68fb      	ldr	r3, [r7, #12]
 80018f2:	681b      	ldr	r3, [r3, #0]
 80018f4:	685b      	ldr	r3, [r3, #4]
 80018f6:	b29b      	uxth	r3, r3
 80018f8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80018fc:	b29a      	uxth	r2, r3
 80018fe:	68bb      	ldr	r3, [r7, #8]
 8001900:	801a      	strh	r2, [r3, #0]

				//Now increment the pRxBuffer two times
				pRxBuffer++;
 8001902:	68bb      	ldr	r3, [r7, #8]
 8001904:	3301      	adds	r3, #1
 8001906:	60bb      	str	r3, [r7, #8]
				pRxBuffer++;
 8001908:	68bb      	ldr	r3, [r7, #8]
 800190a:	3301      	adds	r3, #1
 800190c:	60bb      	str	r3, [r7, #8]
 800190e:	e020      	b.n	8001952 <USART_ReceiveData+0x98>
			}
			else
			{
				//Parity is used, so 8bits will be of user data and 1 bit is parity
				 *pRxBuffer = (pUSARTHandle->pUSARTx->DR  & (uint8_t)0xFF);
 8001910:	68fb      	ldr	r3, [r7, #12]
 8001912:	681b      	ldr	r3, [r3, #0]
 8001914:	685b      	ldr	r3, [r3, #4]
 8001916:	b2da      	uxtb	r2, r3
 8001918:	68bb      	ldr	r3, [r7, #8]
 800191a:	701a      	strb	r2, [r3, #0]
				  pRxBuffer++;
 800191c:	68bb      	ldr	r3, [r7, #8]
 800191e:	3301      	adds	r3, #1
 8001920:	60bb      	str	r3, [r7, #8]
 8001922:	e016      	b.n	8001952 <USART_ReceiveData+0x98>
		else
		{
			//We are going to receive 8bit data in a frame

			//Now, check are we using USART_ParityControl control or not
			if(pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_DISABLE)
 8001924:	68fb      	ldr	r3, [r7, #12]
 8001926:	7b9b      	ldrb	r3, [r3, #14]
 8001928:	2b00      	cmp	r3, #0
 800192a:	d106      	bne.n	800193a <USART_ReceiveData+0x80>
			{
				//No parity is used , so all 8bits will be of user data

				//read 8 bits from DR
				 *pRxBuffer = (uint8_t) (pUSARTHandle->pUSARTx->DR  & (uint8_t)0xFF);
 800192c:	68fb      	ldr	r3, [r7, #12]
 800192e:	681b      	ldr	r3, [r3, #0]
 8001930:	685b      	ldr	r3, [r3, #4]
 8001932:	b2da      	uxtb	r2, r3
 8001934:	68bb      	ldr	r3, [r7, #8]
 8001936:	701a      	strb	r2, [r3, #0]
 8001938:	e008      	b.n	800194c <USART_ReceiveData+0x92>
			else
			{
				//Parity is used, so , 7 bits will be of user data and 1 bit is parity

				//read only 7 bits , hence mask the DR with 0X7F
				 *pRxBuffer = (uint8_t) (pUSARTHandle->pUSARTx->DR  & (uint8_t)0x7F);
 800193a:	68fb      	ldr	r3, [r7, #12]
 800193c:	681b      	ldr	r3, [r3, #0]
 800193e:	685b      	ldr	r3, [r3, #4]
 8001940:	b2db      	uxtb	r3, r3
 8001942:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8001946:	b2da      	uxtb	r2, r3
 8001948:	68bb      	ldr	r3, [r7, #8]
 800194a:	701a      	strb	r2, [r3, #0]

			}

			//Now , increment the pRxBuffer
			pRxBuffer++;
 800194c:	68bb      	ldr	r3, [r7, #8]
 800194e:	3301      	adds	r3, #1
 8001950:	60bb      	str	r3, [r7, #8]
	for(uint32_t i = 0 ; i < Len; i++)
 8001952:	697b      	ldr	r3, [r7, #20]
 8001954:	3301      	adds	r3, #1
 8001956:	617b      	str	r3, [r7, #20]
 8001958:	697a      	ldr	r2, [r7, #20]
 800195a:	687b      	ldr	r3, [r7, #4]
 800195c:	429a      	cmp	r2, r3
 800195e:	d3b5      	bcc.n	80018cc <USART_ReceiveData+0x12>
			//pUSARTHandle->pUSARTx->SR &= ~(USART_FLAG_RXNE);
		}
	}

}
 8001960:	bf00      	nop
 8001962:	bf00      	nop
 8001964:	3718      	adds	r7, #24
 8001966:	46bd      	mov	sp, r7
 8001968:	bd80      	pop	{r7, pc}
	...

0800196c <USART3_Init>:
	GPIO_PeriClockControl(GPIOC, ENABLE);

	GPIO_Inint(&GPIObt);
}
void USART3_Init(void)
{
 800196c:	b580      	push	{r7, lr}
 800196e:	af00      	add	r7, sp, #0

	usart3_handle.pUSARTx = USART3;
 8001970:	4b0d      	ldr	r3, [pc, #52]	@ (80019a8 <USART3_Init+0x3c>)
 8001972:	4a0e      	ldr	r2, [pc, #56]	@ (80019ac <USART3_Init+0x40>)
 8001974:	601a      	str	r2, [r3, #0]
	usart3_handle.USART_Config.USART_Baud = USART_STD_BAUD_9600;
 8001976:	4b0c      	ldr	r3, [pc, #48]	@ (80019a8 <USART3_Init+0x3c>)
 8001978:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 800197c:	609a      	str	r2, [r3, #8]
	usart3_handle.USART_Config.USART_HWFlowControl = USART_HW_FLOW_CTRL_NONE;
 800197e:	4b0a      	ldr	r3, [pc, #40]	@ (80019a8 <USART3_Init+0x3c>)
 8001980:	2200      	movs	r2, #0
 8001982:	73da      	strb	r2, [r3, #15]
	usart3_handle.USART_Config.USART_Mode = USART_MODE_TXRX;
 8001984:	4b08      	ldr	r3, [pc, #32]	@ (80019a8 <USART3_Init+0x3c>)
 8001986:	2202      	movs	r2, #2
 8001988:	711a      	strb	r2, [r3, #4]
	usart3_handle.USART_Config.USART_NoOfStopBits = USART_STOPBITS_1;
 800198a:	4b07      	ldr	r3, [pc, #28]	@ (80019a8 <USART3_Init+0x3c>)
 800198c:	2200      	movs	r2, #0
 800198e:	731a      	strb	r2, [r3, #12]
	usart3_handle.USART_Config.USART_WordLength = USART_WORDLEN_8BITS;
 8001990:	4b05      	ldr	r3, [pc, #20]	@ (80019a8 <USART3_Init+0x3c>)
 8001992:	2200      	movs	r2, #0
 8001994:	735a      	strb	r2, [r3, #13]
	usart3_handle.USART_Config.USART_ParityControl = USART_PARITY_DISABLE;
 8001996:	4b04      	ldr	r3, [pc, #16]	@ (80019a8 <USART3_Init+0x3c>)
 8001998:	2200      	movs	r2, #0
 800199a:	739a      	strb	r2, [r3, #14]
	USART_Init(&usart3_handle);
 800199c:	4802      	ldr	r0, [pc, #8]	@ (80019a8 <USART3_Init+0x3c>)
 800199e:	f7ff fead 	bl	80016fc <USART_Init>
}
 80019a2:	bf00      	nop
 80019a4:	bd80      	pop	{r7, pc}
 80019a6:	bf00      	nop
 80019a8:	20000608 	.word	0x20000608
 80019ac:	40004800 	.word	0x40004800

080019b0 <USART3_GPIOInit>:


void USART3_GPIOInit(void)
{
 80019b0:	b580      	push	{r7, lr}
 80019b2:	b084      	sub	sp, #16
 80019b4:	af00      	add	r7, sp, #0
	GPIO_Handle_t usart_gpios;

	usart_gpios.pGPIOx = GPIOC;
 80019b6:	4b0e      	ldr	r3, [pc, #56]	@ (80019f0 <USART3_GPIOInit+0x40>)
 80019b8:	607b      	str	r3, [r7, #4]
	usart_gpios.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 80019ba:	2302      	movs	r3, #2
 80019bc:	727b      	strb	r3, [r7, #9]
	usart_gpios.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80019be:	2302      	movs	r3, #2
 80019c0:	72bb      	strb	r3, [r7, #10]
	usart_gpios.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80019c2:	2300      	movs	r3, #0
 80019c4:	733b      	strb	r3, [r7, #12]
	usart_gpios.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 80019c6:	2301      	movs	r3, #1
 80019c8:	72fb      	strb	r3, [r7, #11]
	usart_gpios.GPIO_PinConfig.GPIO_PinAltFanMode = 7;
 80019ca:	2307      	movs	r3, #7
 80019cc:	737b      	strb	r3, [r7, #13]


	usart_gpios.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_10;  // USART TX
 80019ce:	230a      	movs	r3, #10
 80019d0:	723b      	strb	r3, [r7, #8]

	GPIO_Inint(&usart_gpios);
 80019d2:	1d3b      	adds	r3, r7, #4
 80019d4:	4618      	mov	r0, r3
 80019d6:	f7ff fbb5 	bl	8001144 <GPIO_Inint>


	usart_gpios.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_11;  // USART RX
 80019da:	230b      	movs	r3, #11
 80019dc:	723b      	strb	r3, [r7, #8]

	GPIO_Inint(&usart_gpios);
 80019de:	1d3b      	adds	r3, r7, #4
 80019e0:	4618      	mov	r0, r3
 80019e2:	f7ff fbaf 	bl	8001144 <GPIO_Inint>
}
 80019e6:	bf00      	nop
 80019e8:	3710      	adds	r7, #16
 80019ea:	46bd      	mov	sp, r7
 80019ec:	bd80      	pop	{r7, pc}
 80019ee:	bf00      	nop
 80019f0:	40020800 	.word	0x40020800

080019f4 <main>:

int main(void)
{
 80019f4:	b580      	push	{r7, lr}
 80019f6:	b090      	sub	sp, #64	@ 0x40
 80019f8:	af00      	add	r7, sp, #0

	GPIO_PeriClockControl(GPIOA, ENABLE);
 80019fa:	2101      	movs	r1, #1
 80019fc:	487b      	ldr	r0, [pc, #492]	@ (8001bec <main+0x1f8>)
 80019fe:	f7ff fb35 	bl	800106c <GPIO_PeriClockControl>
	GPIO_PeriClockControl(GPIOB, ENABLE);
 8001a02:	2101      	movs	r1, #1
 8001a04:	487a      	ldr	r0, [pc, #488]	@ (8001bf0 <main+0x1fc>)
 8001a06:	f7ff fb31 	bl	800106c <GPIO_PeriClockControl>
	GPIO_PeriClockControl(GPIOC, ENABLE);
 8001a0a:	2101      	movs	r1, #1
 8001a0c:	4879      	ldr	r0, [pc, #484]	@ (8001bf4 <main+0x200>)
 8001a0e:	f7ff fb2d 	bl	800106c <GPIO_PeriClockControl>

	USART3_GPIOInit();
 8001a12:	f7ff ffcd 	bl	80019b0 <USART3_GPIOInit>

	USART3_Init();
 8001a16:	f7ff ffa9 	bl	800196c <USART3_Init>

	USART_PeriClockControl(USART3, ENABLE);
 8001a1a:	2101      	movs	r1, #1
 8001a1c:	4876      	ldr	r0, [pc, #472]	@ (8001bf8 <main+0x204>)
 8001a1e:	f7ff fef3 	bl	8001808 <USART_PeriClockControl>

	lcd_init();
 8001a22:	f7ff f9ad 	bl	8000d80 <lcd_init>

	lcd_print_string(massege);
 8001a26:	4875      	ldr	r0, [pc, #468]	@ (8001bfc <main+0x208>)
 8001a28:	f7ff fa56 	bl	8000ed8 <lcd_print_string>

	lcd_display_clear();
 8001a2c:	f7ff fa74 	bl	8000f18 <lcd_display_clear>

	lcd_print_string(massege);
 8001a30:	4872      	ldr	r0, [pc, #456]	@ (8001bfc <main+0x208>)
 8001a32:	f7ff fa51 	bl	8000ed8 <lcd_print_string>

	lcd_display_clear();
 8001a36:	f7ff fa6f 	bl	8000f18 <lcd_display_clear>

	lcd_print_char(50);
 8001a3a:	2032      	movs	r0, #50	@ 0x32
 8001a3c:	f7ff fa2c 	bl	8000e98 <lcd_print_char>

	char* start;

	int t = 0;
 8001a40:	2300      	movs	r3, #0
 8001a42:	637b      	str	r3, [r7, #52]	@ 0x34

	int i = 0;
 8001a44:	2300      	movs	r3, #0
 8001a46:	63fb      	str	r3, [r7, #60]	@ 0x3c

	char latitude[21] = "";              //shirota
 8001a48:	2300      	movs	r3, #0
 8001a4a:	61bb      	str	r3, [r7, #24]
 8001a4c:	f107 031c 	add.w	r3, r7, #28
 8001a50:	2200      	movs	r2, #0
 8001a52:	601a      	str	r2, [r3, #0]
 8001a54:	605a      	str	r2, [r3, #4]
 8001a56:	609a      	str	r2, [r3, #8]
 8001a58:	60da      	str	r2, [r3, #12]
 8001a5a:	741a      	strb	r2, [r3, #16]
	char longitude[21] = "";             //dolgota
 8001a5c:	2300      	movs	r3, #0
 8001a5e:	603b      	str	r3, [r7, #0]
 8001a60:	1d3b      	adds	r3, r7, #4
 8001a62:	2200      	movs	r2, #0
 8001a64:	601a      	str	r2, [r3, #0]
 8001a66:	605a      	str	r2, [r3, #4]
 8001a68:	609a      	str	r2, [r3, #8]
 8001a6a:	60da      	str	r2, [r3, #12]
 8001a6c:	741a      	strb	r2, [r3, #16]

	while(1)
	{

        USART_ReceiveData(&usart3_handle, (uint8_t*)rx_buffer, 300);
 8001a6e:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8001a72:	4963      	ldr	r1, [pc, #396]	@ (8001c00 <main+0x20c>)
 8001a74:	4863      	ldr	r0, [pc, #396]	@ (8001c04 <main+0x210>)
 8001a76:	f7ff ff20 	bl	80018ba <USART_ReceiveData>

    //    Coordinates coords = process_NMEA(rx_buffer);

       // printf(" %.5f\n  %.5f\n", coords.latitude, coords.longitude);

        printf("\n rx_buffer : %s\n", rx_buffer);
 8001a7a:	4961      	ldr	r1, [pc, #388]	@ (8001c00 <main+0x20c>)
 8001a7c:	4862      	ldr	r0, [pc, #392]	@ (8001c08 <main+0x214>)
 8001a7e:	f001 f917 	bl	8002cb0 <iprintf>

        start = strstr(rx_buffer, "$GPGLL");
 8001a82:	4962      	ldr	r1, [pc, #392]	@ (8001c0c <main+0x218>)
 8001a84:	485e      	ldr	r0, [pc, #376]	@ (8001c00 <main+0x20c>)
 8001a86:	f001 f990 	bl	8002daa <strstr>
 8001a8a:	6338      	str	r0, [r7, #48]	@ 0x30


        while(rx_buffer[i] != '\0')
 8001a8c:	e05d      	b.n	8001b4a <main+0x156>
         {

        	if((rx_buffer[i] == '$') && (rx_buffer[i+1] == 'G') && (rx_buffer[i+2] == 'P') && (rx_buffer[i+3] == 'G') && (rx_buffer[i+4] == 'L') && (rx_buffer[i+5] == 'L'))
 8001a8e:	4a5c      	ldr	r2, [pc, #368]	@ (8001c00 <main+0x20c>)
 8001a90:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001a92:	4413      	add	r3, r2
 8001a94:	781b      	ldrb	r3, [r3, #0]
 8001a96:	2b24      	cmp	r3, #36	@ 0x24
 8001a98:	d154      	bne.n	8001b44 <main+0x150>
 8001a9a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001a9c:	3301      	adds	r3, #1
 8001a9e:	4a58      	ldr	r2, [pc, #352]	@ (8001c00 <main+0x20c>)
 8001aa0:	5cd3      	ldrb	r3, [r2, r3]
 8001aa2:	2b47      	cmp	r3, #71	@ 0x47
 8001aa4:	d14e      	bne.n	8001b44 <main+0x150>
 8001aa6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001aa8:	3302      	adds	r3, #2
 8001aaa:	4a55      	ldr	r2, [pc, #340]	@ (8001c00 <main+0x20c>)
 8001aac:	5cd3      	ldrb	r3, [r2, r3]
 8001aae:	2b50      	cmp	r3, #80	@ 0x50
 8001ab0:	d148      	bne.n	8001b44 <main+0x150>
 8001ab2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001ab4:	3303      	adds	r3, #3
 8001ab6:	4a52      	ldr	r2, [pc, #328]	@ (8001c00 <main+0x20c>)
 8001ab8:	5cd3      	ldrb	r3, [r2, r3]
 8001aba:	2b47      	cmp	r3, #71	@ 0x47
 8001abc:	d142      	bne.n	8001b44 <main+0x150>
 8001abe:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001ac0:	3304      	adds	r3, #4
 8001ac2:	4a4f      	ldr	r2, [pc, #316]	@ (8001c00 <main+0x20c>)
 8001ac4:	5cd3      	ldrb	r3, [r2, r3]
 8001ac6:	2b4c      	cmp	r3, #76	@ 0x4c
 8001ac8:	d13c      	bne.n	8001b44 <main+0x150>
 8001aca:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001acc:	3305      	adds	r3, #5
 8001ace:	4a4c      	ldr	r2, [pc, #304]	@ (8001c00 <main+0x20c>)
 8001ad0:	5cd3      	ldrb	r3, [r2, r3]
 8001ad2:	2b4c      	cmp	r3, #76	@ 0x4c
 8001ad4:	d136      	bne.n	8001b44 <main+0x150>
        	   {

        		for( uint8_t i = 0; i <= 12 ; i++ )
 8001ad6:	2300      	movs	r3, #0
 8001ad8:	f887 303b 	strb.w	r3, [r7, #59]	@ 0x3b
 8001adc:	e010      	b.n	8001b00 <main+0x10c>
        		{
        			latitude[i] = *(start + (i+7) );
 8001ade:	f897 303b 	ldrb.w	r3, [r7, #59]	@ 0x3b
 8001ae2:	3307      	adds	r3, #7
 8001ae4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8001ae6:	441a      	add	r2, r3
 8001ae8:	f897 303b 	ldrb.w	r3, [r7, #59]	@ 0x3b
 8001aec:	7812      	ldrb	r2, [r2, #0]
 8001aee:	3340      	adds	r3, #64	@ 0x40
 8001af0:	443b      	add	r3, r7
 8001af2:	f803 2c28 	strb.w	r2, [r3, #-40]
        		for( uint8_t i = 0; i <= 12 ; i++ )
 8001af6:	f897 303b 	ldrb.w	r3, [r7, #59]	@ 0x3b
 8001afa:	3301      	adds	r3, #1
 8001afc:	f887 303b 	strb.w	r3, [r7, #59]	@ 0x3b
 8001b00:	f897 303b 	ldrb.w	r3, [r7, #59]	@ 0x3b
 8001b04:	2b0c      	cmp	r3, #12
 8001b06:	d9ea      	bls.n	8001ade <main+0xea>
        		}
        		latitude[13] = '\0';
 8001b08:	2300      	movs	r3, #0
 8001b0a:	f887 3025 	strb.w	r3, [r7, #37]	@ 0x25

        		for( uint8_t i = 0; i <= 14 ; i++)
 8001b0e:	2300      	movs	r3, #0
 8001b10:	f887 303a 	strb.w	r3, [r7, #58]	@ 0x3a
 8001b14:	e010      	b.n	8001b38 <main+0x144>
        		{
        			longitude[i] = *(start + (i+20) );
 8001b16:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 8001b1a:	3314      	adds	r3, #20
 8001b1c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8001b1e:	441a      	add	r2, r3
 8001b20:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 8001b24:	7812      	ldrb	r2, [r2, #0]
 8001b26:	3340      	adds	r3, #64	@ 0x40
 8001b28:	443b      	add	r3, r7
 8001b2a:	f803 2c40 	strb.w	r2, [r3, #-64]
        		for( uint8_t i = 0; i <= 14 ; i++)
 8001b2e:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 8001b32:	3301      	adds	r3, #1
 8001b34:	f887 303a 	strb.w	r3, [r7, #58]	@ 0x3a
 8001b38:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 8001b3c:	2b0e      	cmp	r3, #14
 8001b3e:	d9ea      	bls.n	8001b16 <main+0x122>
        		}
        		longitude[15] = '\0';
 8001b40:	2300      	movs	r3, #0
 8001b42:	73fb      	strb	r3, [r7, #15]

        	  }


        	i++;
 8001b44:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001b46:	3301      	adds	r3, #1
 8001b48:	63fb      	str	r3, [r7, #60]	@ 0x3c
        while(rx_buffer[i] != '\0')
 8001b4a:	4a2d      	ldr	r2, [pc, #180]	@ (8001c00 <main+0x20c>)
 8001b4c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8001b4e:	4413      	add	r3, r2
 8001b50:	781b      	ldrb	r3, [r3, #0]
 8001b52:	2b00      	cmp	r3, #0
 8001b54:	d19b      	bne.n	8001a8e <main+0x9a>
         }

        if ( (isdigit(latitude[1]) ) && ( isdigit(longitude[1]) ) ) {
 8001b56:	7e7b      	ldrb	r3, [r7, #25]
 8001b58:	3301      	adds	r3, #1
 8001b5a:	4a2d      	ldr	r2, [pc, #180]	@ (8001c10 <main+0x21c>)
 8001b5c:	4413      	add	r3, r2
 8001b5e:	781b      	ldrb	r3, [r3, #0]
 8001b60:	f003 0304 	and.w	r3, r3, #4
 8001b64:	2b00      	cmp	r3, #0
 8001b66:	d019      	beq.n	8001b9c <main+0x1a8>
 8001b68:	787b      	ldrb	r3, [r7, #1]
 8001b6a:	3301      	adds	r3, #1
 8001b6c:	4a28      	ldr	r2, [pc, #160]	@ (8001c10 <main+0x21c>)
 8001b6e:	4413      	add	r3, r2
 8001b70:	781b      	ldrb	r3, [r3, #0]
 8001b72:	f003 0304 	and.w	r3, r3, #4
 8001b76:	2b00      	cmp	r3, #0
 8001b78:	d010      	beq.n	8001b9c <main+0x1a8>


    	lcd_display_clear();
 8001b7a:	f7ff f9cd 	bl	8000f18 <lcd_display_clear>

		lcd_send_command(LCD_CMD_DIS_RETURN_HOME);
 8001b7e:	2002      	movs	r0, #2
 8001b80:	f7ff f8d8 	bl	8000d34 <lcd_send_command>

        lcd_print_string(latitude);
 8001b84:	f107 0318 	add.w	r3, r7, #24
 8001b88:	4618      	mov	r0, r3
 8001b8a:	f7ff f9a5 	bl	8000ed8 <lcd_print_string>

        lcd_send_command(LCD_CMD_CURS_SECLINE);
 8001b8e:	20c0      	movs	r0, #192	@ 0xc0
 8001b90:	f7ff f8d0 	bl	8000d34 <lcd_send_command>

        lcd_print_string(longitude);
 8001b94:	463b      	mov	r3, r7
 8001b96:	4618      	mov	r0, r3
 8001b98:	f7ff f99e 	bl	8000ed8 <lcd_print_string>

        }

        printf("\n i(size): %d",i);
 8001b9c:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8001b9e:	481d      	ldr	r0, [pc, #116]	@ (8001c14 <main+0x220>)
 8001ba0:	f001 f886 	bl	8002cb0 <iprintf>

        i = 0;
 8001ba4:	2300      	movs	r3, #0
 8001ba6:	63fb      	str	r3, [r7, #60]	@ 0x3c

        t = strlen(latitude);
 8001ba8:	f107 0318 	add.w	r3, r7, #24
 8001bac:	4618      	mov	r0, r3
 8001bae:	f7fe fb7f 	bl	80002b0 <strlen>
 8001bb2:	4603      	mov	r3, r0
 8001bb4:	637b      	str	r3, [r7, #52]	@ 0x34

        printf("\n latitude : %s\n", latitude);
 8001bb6:	f107 0318 	add.w	r3, r7, #24
 8001bba:	4619      	mov	r1, r3
 8001bbc:	4816      	ldr	r0, [pc, #88]	@ (8001c18 <main+0x224>)
 8001bbe:	f001 f877 	bl	8002cb0 <iprintf>
        printf("\n latitude(size) : %d",t);
 8001bc2:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 8001bc4:	4815      	ldr	r0, [pc, #84]	@ (8001c1c <main+0x228>)
 8001bc6:	f001 f873 	bl	8002cb0 <iprintf>

        t = strlen(longitude);
 8001bca:	463b      	mov	r3, r7
 8001bcc:	4618      	mov	r0, r3
 8001bce:	f7fe fb6f 	bl	80002b0 <strlen>
 8001bd2:	4603      	mov	r3, r0
 8001bd4:	637b      	str	r3, [r7, #52]	@ 0x34

        printf("\n longitude: %s\n", longitude);
 8001bd6:	463b      	mov	r3, r7
 8001bd8:	4619      	mov	r1, r3
 8001bda:	4811      	ldr	r0, [pc, #68]	@ (8001c20 <main+0x22c>)
 8001bdc:	f001 f868 	bl	8002cb0 <iprintf>
        printf("\n longitude(size): %d",t);
 8001be0:	6b79      	ldr	r1, [r7, #52]	@ 0x34
 8001be2:	4810      	ldr	r0, [pc, #64]	@ (8001c24 <main+0x230>)
 8001be4:	f001 f864 	bl	8002cb0 <iprintf>
        USART_ReceiveData(&usart3_handle, (uint8_t*)rx_buffer, 300);
 8001be8:	e741      	b.n	8001a6e <main+0x7a>
 8001bea:	bf00      	nop
 8001bec:	40020000 	.word	0x40020000
 8001bf0:	40020400 	.word	0x40020400
 8001bf4:	40020800 	.word	0x40020800
 8001bf8:	40004800 	.word	0x40004800
 8001bfc:	20000014 	.word	0x20000014
 8001c00:	20000208 	.word	0x20000208
 8001c04:	20000608 	.word	0x20000608
 8001c08:	08006598 	.word	0x08006598
 8001c0c:	080065ac 	.word	0x080065ac
 8001c10:	0800661a 	.word	0x0800661a
 8001c14:	080065b4 	.word	0x080065b4
 8001c18:	080065c4 	.word	0x080065c4
 8001c1c:	080065d8 	.word	0x080065d8
 8001c20:	080065f0 	.word	0x080065f0
 8001c24:	08006604 	.word	0x08006604

08001c28 <ITM_SendChar>:
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )


void ITM_SendChar(uint8_t ch)
{
 8001c28:	b480      	push	{r7}
 8001c2a:	b083      	sub	sp, #12
 8001c2c:	af00      	add	r7, sp, #0
 8001c2e:	4603      	mov	r3, r0
 8001c30:	71fb      	strb	r3, [r7, #7]
	// Enable TRCENA
	DEMCR |= (1<<24);
 8001c32:	4b0f      	ldr	r3, [pc, #60]	@ (8001c70 <ITM_SendChar+0x48>)
 8001c34:	681b      	ldr	r3, [r3, #0]
 8001c36:	4a0e      	ldr	r2, [pc, #56]	@ (8001c70 <ITM_SendChar+0x48>)
 8001c38:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8001c3c:	6013      	str	r3, [r2, #0]

	// Enable Stimulus Port0
	ITM_TRACE_EN |= (1<<0);
 8001c3e:	4b0d      	ldr	r3, [pc, #52]	@ (8001c74 <ITM_SendChar+0x4c>)
 8001c40:	681b      	ldr	r3, [r3, #0]
 8001c42:	4a0c      	ldr	r2, [pc, #48]	@ (8001c74 <ITM_SendChar+0x4c>)
 8001c44:	f043 0301 	orr.w	r3, r3, #1
 8001c48:	6013      	str	r3, [r2, #0]

	// Read FIFO status in bit[0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8001c4a:	bf00      	nop
 8001c4c:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8001c50:	681b      	ldr	r3, [r3, #0]
 8001c52:	f003 0301 	and.w	r3, r3, #1
 8001c56:	2b00      	cmp	r3, #0
 8001c58:	d0f8      	beq.n	8001c4c <ITM_SendChar+0x24>

	// Write to ITM Stimulus Port0
	ITM_STIMULUS_PORT0 = ch;
 8001c5a:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8001c5e:	79fb      	ldrb	r3, [r7, #7]
 8001c60:	6013      	str	r3, [r2, #0]
}
 8001c62:	bf00      	nop
 8001c64:	370c      	adds	r7, #12
 8001c66:	46bd      	mov	sp, r7
 8001c68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c6c:	4770      	bx	lr
 8001c6e:	bf00      	nop
 8001c70:	e000edfc 	.word	0xe000edfc
 8001c74:	e0000e00 	.word	0xe0000e00

08001c78 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001c78:	b480      	push	{r7}
 8001c7a:	af00      	add	r7, sp, #0
  return 1;
 8001c7c:	2301      	movs	r3, #1
}
 8001c7e:	4618      	mov	r0, r3
 8001c80:	46bd      	mov	sp, r7
 8001c82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c86:	4770      	bx	lr

08001c88 <_kill>:

int _kill(int pid, int sig)
{
 8001c88:	b580      	push	{r7, lr}
 8001c8a:	b082      	sub	sp, #8
 8001c8c:	af00      	add	r7, sp, #0
 8001c8e:	6078      	str	r0, [r7, #4]
 8001c90:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001c92:	f001 f8eb 	bl	8002e6c <__errno>
 8001c96:	4603      	mov	r3, r0
 8001c98:	2216      	movs	r2, #22
 8001c9a:	601a      	str	r2, [r3, #0]
  return -1;
 8001c9c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001ca0:	4618      	mov	r0, r3
 8001ca2:	3708      	adds	r7, #8
 8001ca4:	46bd      	mov	sp, r7
 8001ca6:	bd80      	pop	{r7, pc}

08001ca8 <_exit>:

void _exit (int status)
{
 8001ca8:	b580      	push	{r7, lr}
 8001caa:	b082      	sub	sp, #8
 8001cac:	af00      	add	r7, sp, #0
 8001cae:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001cb0:	f04f 31ff 	mov.w	r1, #4294967295
 8001cb4:	6878      	ldr	r0, [r7, #4]
 8001cb6:	f7ff ffe7 	bl	8001c88 <_kill>
  while (1) {}    /* Make sure we hang here */
 8001cba:	bf00      	nop
 8001cbc:	e7fd      	b.n	8001cba <_exit+0x12>

08001cbe <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001cbe:	b580      	push	{r7, lr}
 8001cc0:	b086      	sub	sp, #24
 8001cc2:	af00      	add	r7, sp, #0
 8001cc4:	60f8      	str	r0, [r7, #12]
 8001cc6:	60b9      	str	r1, [r7, #8]
 8001cc8:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001cca:	2300      	movs	r3, #0
 8001ccc:	617b      	str	r3, [r7, #20]
 8001cce:	e00a      	b.n	8001ce6 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001cd0:	f3af 8000 	nop.w
 8001cd4:	4601      	mov	r1, r0
 8001cd6:	68bb      	ldr	r3, [r7, #8]
 8001cd8:	1c5a      	adds	r2, r3, #1
 8001cda:	60ba      	str	r2, [r7, #8]
 8001cdc:	b2ca      	uxtb	r2, r1
 8001cde:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ce0:	697b      	ldr	r3, [r7, #20]
 8001ce2:	3301      	adds	r3, #1
 8001ce4:	617b      	str	r3, [r7, #20]
 8001ce6:	697a      	ldr	r2, [r7, #20]
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	429a      	cmp	r2, r3
 8001cec:	dbf0      	blt.n	8001cd0 <_read+0x12>
  }

  return len;
 8001cee:	687b      	ldr	r3, [r7, #4]
}
 8001cf0:	4618      	mov	r0, r3
 8001cf2:	3718      	adds	r7, #24
 8001cf4:	46bd      	mov	sp, r7
 8001cf6:	bd80      	pop	{r7, pc}

08001cf8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001cf8:	b580      	push	{r7, lr}
 8001cfa:	b086      	sub	sp, #24
 8001cfc:	af00      	add	r7, sp, #0
 8001cfe:	60f8      	str	r0, [r7, #12]
 8001d00:	60b9      	str	r1, [r7, #8]
 8001d02:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001d04:	2300      	movs	r3, #0
 8001d06:	617b      	str	r3, [r7, #20]
 8001d08:	e009      	b.n	8001d1e <_write+0x26>
  {
    //__io_putchar(*ptr++);
    ITM_SendChar(*ptr++);
 8001d0a:	68bb      	ldr	r3, [r7, #8]
 8001d0c:	1c5a      	adds	r2, r3, #1
 8001d0e:	60ba      	str	r2, [r7, #8]
 8001d10:	781b      	ldrb	r3, [r3, #0]
 8001d12:	4618      	mov	r0, r3
 8001d14:	f7ff ff88 	bl	8001c28 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001d18:	697b      	ldr	r3, [r7, #20]
 8001d1a:	3301      	adds	r3, #1
 8001d1c:	617b      	str	r3, [r7, #20]
 8001d1e:	697a      	ldr	r2, [r7, #20]
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	429a      	cmp	r2, r3
 8001d24:	dbf1      	blt.n	8001d0a <_write+0x12>
  }
  return len;
 8001d26:	687b      	ldr	r3, [r7, #4]
}
 8001d28:	4618      	mov	r0, r3
 8001d2a:	3718      	adds	r7, #24
 8001d2c:	46bd      	mov	sp, r7
 8001d2e:	bd80      	pop	{r7, pc}

08001d30 <_close>:

int _close(int file)
{
 8001d30:	b480      	push	{r7}
 8001d32:	b083      	sub	sp, #12
 8001d34:	af00      	add	r7, sp, #0
 8001d36:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001d38:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001d3c:	4618      	mov	r0, r3
 8001d3e:	370c      	adds	r7, #12
 8001d40:	46bd      	mov	sp, r7
 8001d42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d46:	4770      	bx	lr

08001d48 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001d48:	b480      	push	{r7}
 8001d4a:	b083      	sub	sp, #12
 8001d4c:	af00      	add	r7, sp, #0
 8001d4e:	6078      	str	r0, [r7, #4]
 8001d50:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001d52:	683b      	ldr	r3, [r7, #0]
 8001d54:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001d58:	605a      	str	r2, [r3, #4]
  return 0;
 8001d5a:	2300      	movs	r3, #0
}
 8001d5c:	4618      	mov	r0, r3
 8001d5e:	370c      	adds	r7, #12
 8001d60:	46bd      	mov	sp, r7
 8001d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d66:	4770      	bx	lr

08001d68 <_isatty>:

int _isatty(int file)
{
 8001d68:	b480      	push	{r7}
 8001d6a:	b083      	sub	sp, #12
 8001d6c:	af00      	add	r7, sp, #0
 8001d6e:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001d70:	2301      	movs	r3, #1
}
 8001d72:	4618      	mov	r0, r3
 8001d74:	370c      	adds	r7, #12
 8001d76:	46bd      	mov	sp, r7
 8001d78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d7c:	4770      	bx	lr

08001d7e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001d7e:	b480      	push	{r7}
 8001d80:	b085      	sub	sp, #20
 8001d82:	af00      	add	r7, sp, #0
 8001d84:	60f8      	str	r0, [r7, #12]
 8001d86:	60b9      	str	r1, [r7, #8]
 8001d88:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001d8a:	2300      	movs	r3, #0
}
 8001d8c:	4618      	mov	r0, r3
 8001d8e:	3714      	adds	r7, #20
 8001d90:	46bd      	mov	sp, r7
 8001d92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d96:	4770      	bx	lr

08001d98 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001d98:	b580      	push	{r7, lr}
 8001d9a:	b086      	sub	sp, #24
 8001d9c:	af00      	add	r7, sp, #0
 8001d9e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001da0:	4a14      	ldr	r2, [pc, #80]	@ (8001df4 <_sbrk+0x5c>)
 8001da2:	4b15      	ldr	r3, [pc, #84]	@ (8001df8 <_sbrk+0x60>)
 8001da4:	1ad3      	subs	r3, r2, r3
 8001da6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001da8:	697b      	ldr	r3, [r7, #20]
 8001daa:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001dac:	4b13      	ldr	r3, [pc, #76]	@ (8001dfc <_sbrk+0x64>)
 8001dae:	681b      	ldr	r3, [r3, #0]
 8001db0:	2b00      	cmp	r3, #0
 8001db2:	d102      	bne.n	8001dba <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001db4:	4b11      	ldr	r3, [pc, #68]	@ (8001dfc <_sbrk+0x64>)
 8001db6:	4a12      	ldr	r2, [pc, #72]	@ (8001e00 <_sbrk+0x68>)
 8001db8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001dba:	4b10      	ldr	r3, [pc, #64]	@ (8001dfc <_sbrk+0x64>)
 8001dbc:	681a      	ldr	r2, [r3, #0]
 8001dbe:	687b      	ldr	r3, [r7, #4]
 8001dc0:	4413      	add	r3, r2
 8001dc2:	693a      	ldr	r2, [r7, #16]
 8001dc4:	429a      	cmp	r2, r3
 8001dc6:	d207      	bcs.n	8001dd8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001dc8:	f001 f850 	bl	8002e6c <__errno>
 8001dcc:	4603      	mov	r3, r0
 8001dce:	220c      	movs	r2, #12
 8001dd0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001dd2:	f04f 33ff 	mov.w	r3, #4294967295
 8001dd6:	e009      	b.n	8001dec <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001dd8:	4b08      	ldr	r3, [pc, #32]	@ (8001dfc <_sbrk+0x64>)
 8001dda:	681b      	ldr	r3, [r3, #0]
 8001ddc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001dde:	4b07      	ldr	r3, [pc, #28]	@ (8001dfc <_sbrk+0x64>)
 8001de0:	681a      	ldr	r2, [r3, #0]
 8001de2:	687b      	ldr	r3, [r7, #4]
 8001de4:	4413      	add	r3, r2
 8001de6:	4a05      	ldr	r2, [pc, #20]	@ (8001dfc <_sbrk+0x64>)
 8001de8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001dea:	68fb      	ldr	r3, [r7, #12]
}
 8001dec:	4618      	mov	r0, r3
 8001dee:	3718      	adds	r7, #24
 8001df0:	46bd      	mov	sp, r7
 8001df2:	bd80      	pop	{r7, pc}
 8001df4:	20020000 	.word	0x20020000
 8001df8:	00000400 	.word	0x00000400
 8001dfc:	2000062c 	.word	0x2000062c
 8001e00:	20000780 	.word	0x20000780

08001e04 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001e04:	480d      	ldr	r0, [pc, #52]	@ (8001e3c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001e06:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001e08:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001e0c:	480c      	ldr	r0, [pc, #48]	@ (8001e40 <LoopForever+0x6>)
  ldr r1, =_edata
 8001e0e:	490d      	ldr	r1, [pc, #52]	@ (8001e44 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001e10:	4a0d      	ldr	r2, [pc, #52]	@ (8001e48 <LoopForever+0xe>)
  movs r3, #0
 8001e12:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001e14:	e002      	b.n	8001e1c <LoopCopyDataInit>

08001e16 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001e16:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001e18:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001e1a:	3304      	adds	r3, #4

08001e1c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001e1c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001e1e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001e20:	d3f9      	bcc.n	8001e16 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001e22:	4a0a      	ldr	r2, [pc, #40]	@ (8001e4c <LoopForever+0x12>)
  ldr r4, =_ebss
 8001e24:	4c0a      	ldr	r4, [pc, #40]	@ (8001e50 <LoopForever+0x16>)
  movs r3, #0
 8001e26:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001e28:	e001      	b.n	8001e2e <LoopFillZerobss>

08001e2a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001e2a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001e2c:	3204      	adds	r2, #4

08001e2e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001e2e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001e30:	d3fb      	bcc.n	8001e2a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001e32:	f001 f821 	bl	8002e78 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001e36:	f7ff fddd 	bl	80019f4 <main>

08001e3a <LoopForever>:

LoopForever:
  b LoopForever
 8001e3a:	e7fe      	b.n	8001e3a <LoopForever>
  ldr   r0, =_estack
 8001e3c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001e40:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001e44:	200001ec 	.word	0x200001ec
  ldr r2, =_sidata
 8001e48:	08006a58 	.word	0x08006a58
  ldr r2, =_sbss
 8001e4c:	200001ec 	.word	0x200001ec
  ldr r4, =_ebss
 8001e50:	2000077c 	.word	0x2000077c

08001e54 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001e54:	e7fe      	b.n	8001e54 <ADC_IRQHandler>

08001e56 <__cvt>:
 8001e56:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001e5a:	ec57 6b10 	vmov	r6, r7, d0
 8001e5e:	2f00      	cmp	r7, #0
 8001e60:	460c      	mov	r4, r1
 8001e62:	4619      	mov	r1, r3
 8001e64:	463b      	mov	r3, r7
 8001e66:	bfbb      	ittet	lt
 8001e68:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8001e6c:	461f      	movlt	r7, r3
 8001e6e:	2300      	movge	r3, #0
 8001e70:	232d      	movlt	r3, #45	@ 0x2d
 8001e72:	700b      	strb	r3, [r1, #0]
 8001e74:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001e76:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8001e7a:	4691      	mov	r9, r2
 8001e7c:	f023 0820 	bic.w	r8, r3, #32
 8001e80:	bfbc      	itt	lt
 8001e82:	4632      	movlt	r2, r6
 8001e84:	4616      	movlt	r6, r2
 8001e86:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001e8a:	d005      	beq.n	8001e98 <__cvt+0x42>
 8001e8c:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001e90:	d100      	bne.n	8001e94 <__cvt+0x3e>
 8001e92:	3401      	adds	r4, #1
 8001e94:	2102      	movs	r1, #2
 8001e96:	e000      	b.n	8001e9a <__cvt+0x44>
 8001e98:	2103      	movs	r1, #3
 8001e9a:	ab03      	add	r3, sp, #12
 8001e9c:	9301      	str	r3, [sp, #4]
 8001e9e:	ab02      	add	r3, sp, #8
 8001ea0:	9300      	str	r3, [sp, #0]
 8001ea2:	ec47 6b10 	vmov	d0, r6, r7
 8001ea6:	4653      	mov	r3, sl
 8001ea8:	4622      	mov	r2, r4
 8001eaa:	f001 f89d 	bl	8002fe8 <_dtoa_r>
 8001eae:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001eb2:	4605      	mov	r5, r0
 8001eb4:	d119      	bne.n	8001eea <__cvt+0x94>
 8001eb6:	f019 0f01 	tst.w	r9, #1
 8001eba:	d00e      	beq.n	8001eda <__cvt+0x84>
 8001ebc:	eb00 0904 	add.w	r9, r0, r4
 8001ec0:	2200      	movs	r2, #0
 8001ec2:	2300      	movs	r3, #0
 8001ec4:	4630      	mov	r0, r6
 8001ec6:	4639      	mov	r1, r7
 8001ec8:	f7fe fe1e 	bl	8000b08 <__aeabi_dcmpeq>
 8001ecc:	b108      	cbz	r0, 8001ed2 <__cvt+0x7c>
 8001ece:	f8cd 900c 	str.w	r9, [sp, #12]
 8001ed2:	2230      	movs	r2, #48	@ 0x30
 8001ed4:	9b03      	ldr	r3, [sp, #12]
 8001ed6:	454b      	cmp	r3, r9
 8001ed8:	d31e      	bcc.n	8001f18 <__cvt+0xc2>
 8001eda:	9b03      	ldr	r3, [sp, #12]
 8001edc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8001ede:	1b5b      	subs	r3, r3, r5
 8001ee0:	4628      	mov	r0, r5
 8001ee2:	6013      	str	r3, [r2, #0]
 8001ee4:	b004      	add	sp, #16
 8001ee6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001eea:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001eee:	eb00 0904 	add.w	r9, r0, r4
 8001ef2:	d1e5      	bne.n	8001ec0 <__cvt+0x6a>
 8001ef4:	7803      	ldrb	r3, [r0, #0]
 8001ef6:	2b30      	cmp	r3, #48	@ 0x30
 8001ef8:	d10a      	bne.n	8001f10 <__cvt+0xba>
 8001efa:	2200      	movs	r2, #0
 8001efc:	2300      	movs	r3, #0
 8001efe:	4630      	mov	r0, r6
 8001f00:	4639      	mov	r1, r7
 8001f02:	f7fe fe01 	bl	8000b08 <__aeabi_dcmpeq>
 8001f06:	b918      	cbnz	r0, 8001f10 <__cvt+0xba>
 8001f08:	f1c4 0401 	rsb	r4, r4, #1
 8001f0c:	f8ca 4000 	str.w	r4, [sl]
 8001f10:	f8da 3000 	ldr.w	r3, [sl]
 8001f14:	4499      	add	r9, r3
 8001f16:	e7d3      	b.n	8001ec0 <__cvt+0x6a>
 8001f18:	1c59      	adds	r1, r3, #1
 8001f1a:	9103      	str	r1, [sp, #12]
 8001f1c:	701a      	strb	r2, [r3, #0]
 8001f1e:	e7d9      	b.n	8001ed4 <__cvt+0x7e>

08001f20 <__exponent>:
 8001f20:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001f22:	2900      	cmp	r1, #0
 8001f24:	bfba      	itte	lt
 8001f26:	4249      	neglt	r1, r1
 8001f28:	232d      	movlt	r3, #45	@ 0x2d
 8001f2a:	232b      	movge	r3, #43	@ 0x2b
 8001f2c:	2909      	cmp	r1, #9
 8001f2e:	7002      	strb	r2, [r0, #0]
 8001f30:	7043      	strb	r3, [r0, #1]
 8001f32:	dd29      	ble.n	8001f88 <__exponent+0x68>
 8001f34:	f10d 0307 	add.w	r3, sp, #7
 8001f38:	461d      	mov	r5, r3
 8001f3a:	270a      	movs	r7, #10
 8001f3c:	461a      	mov	r2, r3
 8001f3e:	fbb1 f6f7 	udiv	r6, r1, r7
 8001f42:	fb07 1416 	mls	r4, r7, r6, r1
 8001f46:	3430      	adds	r4, #48	@ 0x30
 8001f48:	f802 4c01 	strb.w	r4, [r2, #-1]
 8001f4c:	460c      	mov	r4, r1
 8001f4e:	2c63      	cmp	r4, #99	@ 0x63
 8001f50:	f103 33ff 	add.w	r3, r3, #4294967295
 8001f54:	4631      	mov	r1, r6
 8001f56:	dcf1      	bgt.n	8001f3c <__exponent+0x1c>
 8001f58:	3130      	adds	r1, #48	@ 0x30
 8001f5a:	1e94      	subs	r4, r2, #2
 8001f5c:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001f60:	1c41      	adds	r1, r0, #1
 8001f62:	4623      	mov	r3, r4
 8001f64:	42ab      	cmp	r3, r5
 8001f66:	d30a      	bcc.n	8001f7e <__exponent+0x5e>
 8001f68:	f10d 0309 	add.w	r3, sp, #9
 8001f6c:	1a9b      	subs	r3, r3, r2
 8001f6e:	42ac      	cmp	r4, r5
 8001f70:	bf88      	it	hi
 8001f72:	2300      	movhi	r3, #0
 8001f74:	3302      	adds	r3, #2
 8001f76:	4403      	add	r3, r0
 8001f78:	1a18      	subs	r0, r3, r0
 8001f7a:	b003      	add	sp, #12
 8001f7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f7e:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001f82:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001f86:	e7ed      	b.n	8001f64 <__exponent+0x44>
 8001f88:	2330      	movs	r3, #48	@ 0x30
 8001f8a:	3130      	adds	r1, #48	@ 0x30
 8001f8c:	7083      	strb	r3, [r0, #2]
 8001f8e:	70c1      	strb	r1, [r0, #3]
 8001f90:	1d03      	adds	r3, r0, #4
 8001f92:	e7f1      	b.n	8001f78 <__exponent+0x58>

08001f94 <_printf_float>:
 8001f94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001f98:	b08d      	sub	sp, #52	@ 0x34
 8001f9a:	460c      	mov	r4, r1
 8001f9c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8001fa0:	4616      	mov	r6, r2
 8001fa2:	461f      	mov	r7, r3
 8001fa4:	4605      	mov	r5, r0
 8001fa6:	f000 ff17 	bl	8002dd8 <_localeconv_r>
 8001faa:	6803      	ldr	r3, [r0, #0]
 8001fac:	9304      	str	r3, [sp, #16]
 8001fae:	4618      	mov	r0, r3
 8001fb0:	f7fe f97e 	bl	80002b0 <strlen>
 8001fb4:	2300      	movs	r3, #0
 8001fb6:	930a      	str	r3, [sp, #40]	@ 0x28
 8001fb8:	f8d8 3000 	ldr.w	r3, [r8]
 8001fbc:	9005      	str	r0, [sp, #20]
 8001fbe:	3307      	adds	r3, #7
 8001fc0:	f023 0307 	bic.w	r3, r3, #7
 8001fc4:	f103 0208 	add.w	r2, r3, #8
 8001fc8:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001fcc:	f8d4 b000 	ldr.w	fp, [r4]
 8001fd0:	f8c8 2000 	str.w	r2, [r8]
 8001fd4:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001fd8:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001fdc:	9307      	str	r3, [sp, #28]
 8001fde:	f8cd 8018 	str.w	r8, [sp, #24]
 8001fe2:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001fe6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001fea:	4b9c      	ldr	r3, [pc, #624]	@ (800225c <_printf_float+0x2c8>)
 8001fec:	f04f 32ff 	mov.w	r2, #4294967295
 8001ff0:	f7fe fdbc 	bl	8000b6c <__aeabi_dcmpun>
 8001ff4:	bb70      	cbnz	r0, 8002054 <_printf_float+0xc0>
 8001ff6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001ffa:	4b98      	ldr	r3, [pc, #608]	@ (800225c <_printf_float+0x2c8>)
 8001ffc:	f04f 32ff 	mov.w	r2, #4294967295
 8002000:	f7fe fd96 	bl	8000b30 <__aeabi_dcmple>
 8002004:	bb30      	cbnz	r0, 8002054 <_printf_float+0xc0>
 8002006:	2200      	movs	r2, #0
 8002008:	2300      	movs	r3, #0
 800200a:	4640      	mov	r0, r8
 800200c:	4649      	mov	r1, r9
 800200e:	f7fe fd85 	bl	8000b1c <__aeabi_dcmplt>
 8002012:	b110      	cbz	r0, 800201a <_printf_float+0x86>
 8002014:	232d      	movs	r3, #45	@ 0x2d
 8002016:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800201a:	4a91      	ldr	r2, [pc, #580]	@ (8002260 <_printf_float+0x2cc>)
 800201c:	4b91      	ldr	r3, [pc, #580]	@ (8002264 <_printf_float+0x2d0>)
 800201e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8002022:	bf94      	ite	ls
 8002024:	4690      	movls	r8, r2
 8002026:	4698      	movhi	r8, r3
 8002028:	2303      	movs	r3, #3
 800202a:	6123      	str	r3, [r4, #16]
 800202c:	f02b 0304 	bic.w	r3, fp, #4
 8002030:	6023      	str	r3, [r4, #0]
 8002032:	f04f 0900 	mov.w	r9, #0
 8002036:	9700      	str	r7, [sp, #0]
 8002038:	4633      	mov	r3, r6
 800203a:	aa0b      	add	r2, sp, #44	@ 0x2c
 800203c:	4621      	mov	r1, r4
 800203e:	4628      	mov	r0, r5
 8002040:	f000 f9d2 	bl	80023e8 <_printf_common>
 8002044:	3001      	adds	r0, #1
 8002046:	f040 808d 	bne.w	8002164 <_printf_float+0x1d0>
 800204a:	f04f 30ff 	mov.w	r0, #4294967295
 800204e:	b00d      	add	sp, #52	@ 0x34
 8002050:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002054:	4642      	mov	r2, r8
 8002056:	464b      	mov	r3, r9
 8002058:	4640      	mov	r0, r8
 800205a:	4649      	mov	r1, r9
 800205c:	f7fe fd86 	bl	8000b6c <__aeabi_dcmpun>
 8002060:	b140      	cbz	r0, 8002074 <_printf_float+0xe0>
 8002062:	464b      	mov	r3, r9
 8002064:	2b00      	cmp	r3, #0
 8002066:	bfbc      	itt	lt
 8002068:	232d      	movlt	r3, #45	@ 0x2d
 800206a:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800206e:	4a7e      	ldr	r2, [pc, #504]	@ (8002268 <_printf_float+0x2d4>)
 8002070:	4b7e      	ldr	r3, [pc, #504]	@ (800226c <_printf_float+0x2d8>)
 8002072:	e7d4      	b.n	800201e <_printf_float+0x8a>
 8002074:	6863      	ldr	r3, [r4, #4]
 8002076:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 800207a:	9206      	str	r2, [sp, #24]
 800207c:	1c5a      	adds	r2, r3, #1
 800207e:	d13b      	bne.n	80020f8 <_printf_float+0x164>
 8002080:	2306      	movs	r3, #6
 8002082:	6063      	str	r3, [r4, #4]
 8002084:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8002088:	2300      	movs	r3, #0
 800208a:	6022      	str	r2, [r4, #0]
 800208c:	9303      	str	r3, [sp, #12]
 800208e:	ab0a      	add	r3, sp, #40	@ 0x28
 8002090:	e9cd a301 	strd	sl, r3, [sp, #4]
 8002094:	ab09      	add	r3, sp, #36	@ 0x24
 8002096:	9300      	str	r3, [sp, #0]
 8002098:	6861      	ldr	r1, [r4, #4]
 800209a:	ec49 8b10 	vmov	d0, r8, r9
 800209e:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 80020a2:	4628      	mov	r0, r5
 80020a4:	f7ff fed7 	bl	8001e56 <__cvt>
 80020a8:	9b06      	ldr	r3, [sp, #24]
 80020aa:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80020ac:	2b47      	cmp	r3, #71	@ 0x47
 80020ae:	4680      	mov	r8, r0
 80020b0:	d129      	bne.n	8002106 <_printf_float+0x172>
 80020b2:	1cc8      	adds	r0, r1, #3
 80020b4:	db02      	blt.n	80020bc <_printf_float+0x128>
 80020b6:	6863      	ldr	r3, [r4, #4]
 80020b8:	4299      	cmp	r1, r3
 80020ba:	dd41      	ble.n	8002140 <_printf_float+0x1ac>
 80020bc:	f1aa 0a02 	sub.w	sl, sl, #2
 80020c0:	fa5f fa8a 	uxtb.w	sl, sl
 80020c4:	3901      	subs	r1, #1
 80020c6:	4652      	mov	r2, sl
 80020c8:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 80020cc:	9109      	str	r1, [sp, #36]	@ 0x24
 80020ce:	f7ff ff27 	bl	8001f20 <__exponent>
 80020d2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80020d4:	1813      	adds	r3, r2, r0
 80020d6:	2a01      	cmp	r2, #1
 80020d8:	4681      	mov	r9, r0
 80020da:	6123      	str	r3, [r4, #16]
 80020dc:	dc02      	bgt.n	80020e4 <_printf_float+0x150>
 80020de:	6822      	ldr	r2, [r4, #0]
 80020e0:	07d2      	lsls	r2, r2, #31
 80020e2:	d501      	bpl.n	80020e8 <_printf_float+0x154>
 80020e4:	3301      	adds	r3, #1
 80020e6:	6123      	str	r3, [r4, #16]
 80020e8:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 80020ec:	2b00      	cmp	r3, #0
 80020ee:	d0a2      	beq.n	8002036 <_printf_float+0xa2>
 80020f0:	232d      	movs	r3, #45	@ 0x2d
 80020f2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80020f6:	e79e      	b.n	8002036 <_printf_float+0xa2>
 80020f8:	9a06      	ldr	r2, [sp, #24]
 80020fa:	2a47      	cmp	r2, #71	@ 0x47
 80020fc:	d1c2      	bne.n	8002084 <_printf_float+0xf0>
 80020fe:	2b00      	cmp	r3, #0
 8002100:	d1c0      	bne.n	8002084 <_printf_float+0xf0>
 8002102:	2301      	movs	r3, #1
 8002104:	e7bd      	b.n	8002082 <_printf_float+0xee>
 8002106:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800210a:	d9db      	bls.n	80020c4 <_printf_float+0x130>
 800210c:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8002110:	d118      	bne.n	8002144 <_printf_float+0x1b0>
 8002112:	2900      	cmp	r1, #0
 8002114:	6863      	ldr	r3, [r4, #4]
 8002116:	dd0b      	ble.n	8002130 <_printf_float+0x19c>
 8002118:	6121      	str	r1, [r4, #16]
 800211a:	b913      	cbnz	r3, 8002122 <_printf_float+0x18e>
 800211c:	6822      	ldr	r2, [r4, #0]
 800211e:	07d0      	lsls	r0, r2, #31
 8002120:	d502      	bpl.n	8002128 <_printf_float+0x194>
 8002122:	3301      	adds	r3, #1
 8002124:	440b      	add	r3, r1
 8002126:	6123      	str	r3, [r4, #16]
 8002128:	65a1      	str	r1, [r4, #88]	@ 0x58
 800212a:	f04f 0900 	mov.w	r9, #0
 800212e:	e7db      	b.n	80020e8 <_printf_float+0x154>
 8002130:	b913      	cbnz	r3, 8002138 <_printf_float+0x1a4>
 8002132:	6822      	ldr	r2, [r4, #0]
 8002134:	07d2      	lsls	r2, r2, #31
 8002136:	d501      	bpl.n	800213c <_printf_float+0x1a8>
 8002138:	3302      	adds	r3, #2
 800213a:	e7f4      	b.n	8002126 <_printf_float+0x192>
 800213c:	2301      	movs	r3, #1
 800213e:	e7f2      	b.n	8002126 <_printf_float+0x192>
 8002140:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8002144:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002146:	4299      	cmp	r1, r3
 8002148:	db05      	blt.n	8002156 <_printf_float+0x1c2>
 800214a:	6823      	ldr	r3, [r4, #0]
 800214c:	6121      	str	r1, [r4, #16]
 800214e:	07d8      	lsls	r0, r3, #31
 8002150:	d5ea      	bpl.n	8002128 <_printf_float+0x194>
 8002152:	1c4b      	adds	r3, r1, #1
 8002154:	e7e7      	b.n	8002126 <_printf_float+0x192>
 8002156:	2900      	cmp	r1, #0
 8002158:	bfd4      	ite	le
 800215a:	f1c1 0202 	rsble	r2, r1, #2
 800215e:	2201      	movgt	r2, #1
 8002160:	4413      	add	r3, r2
 8002162:	e7e0      	b.n	8002126 <_printf_float+0x192>
 8002164:	6823      	ldr	r3, [r4, #0]
 8002166:	055a      	lsls	r2, r3, #21
 8002168:	d407      	bmi.n	800217a <_printf_float+0x1e6>
 800216a:	6923      	ldr	r3, [r4, #16]
 800216c:	4642      	mov	r2, r8
 800216e:	4631      	mov	r1, r6
 8002170:	4628      	mov	r0, r5
 8002172:	47b8      	blx	r7
 8002174:	3001      	adds	r0, #1
 8002176:	d12b      	bne.n	80021d0 <_printf_float+0x23c>
 8002178:	e767      	b.n	800204a <_printf_float+0xb6>
 800217a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800217e:	f240 80dd 	bls.w	800233c <_printf_float+0x3a8>
 8002182:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8002186:	2200      	movs	r2, #0
 8002188:	2300      	movs	r3, #0
 800218a:	f7fe fcbd 	bl	8000b08 <__aeabi_dcmpeq>
 800218e:	2800      	cmp	r0, #0
 8002190:	d033      	beq.n	80021fa <_printf_float+0x266>
 8002192:	4a37      	ldr	r2, [pc, #220]	@ (8002270 <_printf_float+0x2dc>)
 8002194:	2301      	movs	r3, #1
 8002196:	4631      	mov	r1, r6
 8002198:	4628      	mov	r0, r5
 800219a:	47b8      	blx	r7
 800219c:	3001      	adds	r0, #1
 800219e:	f43f af54 	beq.w	800204a <_printf_float+0xb6>
 80021a2:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 80021a6:	4543      	cmp	r3, r8
 80021a8:	db02      	blt.n	80021b0 <_printf_float+0x21c>
 80021aa:	6823      	ldr	r3, [r4, #0]
 80021ac:	07d8      	lsls	r0, r3, #31
 80021ae:	d50f      	bpl.n	80021d0 <_printf_float+0x23c>
 80021b0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80021b4:	4631      	mov	r1, r6
 80021b6:	4628      	mov	r0, r5
 80021b8:	47b8      	blx	r7
 80021ba:	3001      	adds	r0, #1
 80021bc:	f43f af45 	beq.w	800204a <_printf_float+0xb6>
 80021c0:	f04f 0900 	mov.w	r9, #0
 80021c4:	f108 38ff 	add.w	r8, r8, #4294967295
 80021c8:	f104 0a1a 	add.w	sl, r4, #26
 80021cc:	45c8      	cmp	r8, r9
 80021ce:	dc09      	bgt.n	80021e4 <_printf_float+0x250>
 80021d0:	6823      	ldr	r3, [r4, #0]
 80021d2:	079b      	lsls	r3, r3, #30
 80021d4:	f100 8103 	bmi.w	80023de <_printf_float+0x44a>
 80021d8:	68e0      	ldr	r0, [r4, #12]
 80021da:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80021dc:	4298      	cmp	r0, r3
 80021de:	bfb8      	it	lt
 80021e0:	4618      	movlt	r0, r3
 80021e2:	e734      	b.n	800204e <_printf_float+0xba>
 80021e4:	2301      	movs	r3, #1
 80021e6:	4652      	mov	r2, sl
 80021e8:	4631      	mov	r1, r6
 80021ea:	4628      	mov	r0, r5
 80021ec:	47b8      	blx	r7
 80021ee:	3001      	adds	r0, #1
 80021f0:	f43f af2b 	beq.w	800204a <_printf_float+0xb6>
 80021f4:	f109 0901 	add.w	r9, r9, #1
 80021f8:	e7e8      	b.n	80021cc <_printf_float+0x238>
 80021fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80021fc:	2b00      	cmp	r3, #0
 80021fe:	dc39      	bgt.n	8002274 <_printf_float+0x2e0>
 8002200:	4a1b      	ldr	r2, [pc, #108]	@ (8002270 <_printf_float+0x2dc>)
 8002202:	2301      	movs	r3, #1
 8002204:	4631      	mov	r1, r6
 8002206:	4628      	mov	r0, r5
 8002208:	47b8      	blx	r7
 800220a:	3001      	adds	r0, #1
 800220c:	f43f af1d 	beq.w	800204a <_printf_float+0xb6>
 8002210:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8002214:	ea59 0303 	orrs.w	r3, r9, r3
 8002218:	d102      	bne.n	8002220 <_printf_float+0x28c>
 800221a:	6823      	ldr	r3, [r4, #0]
 800221c:	07d9      	lsls	r1, r3, #31
 800221e:	d5d7      	bpl.n	80021d0 <_printf_float+0x23c>
 8002220:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002224:	4631      	mov	r1, r6
 8002226:	4628      	mov	r0, r5
 8002228:	47b8      	blx	r7
 800222a:	3001      	adds	r0, #1
 800222c:	f43f af0d 	beq.w	800204a <_printf_float+0xb6>
 8002230:	f04f 0a00 	mov.w	sl, #0
 8002234:	f104 0b1a 	add.w	fp, r4, #26
 8002238:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800223a:	425b      	negs	r3, r3
 800223c:	4553      	cmp	r3, sl
 800223e:	dc01      	bgt.n	8002244 <_printf_float+0x2b0>
 8002240:	464b      	mov	r3, r9
 8002242:	e793      	b.n	800216c <_printf_float+0x1d8>
 8002244:	2301      	movs	r3, #1
 8002246:	465a      	mov	r2, fp
 8002248:	4631      	mov	r1, r6
 800224a:	4628      	mov	r0, r5
 800224c:	47b8      	blx	r7
 800224e:	3001      	adds	r0, #1
 8002250:	f43f aefb 	beq.w	800204a <_printf_float+0xb6>
 8002254:	f10a 0a01 	add.w	sl, sl, #1
 8002258:	e7ee      	b.n	8002238 <_printf_float+0x2a4>
 800225a:	bf00      	nop
 800225c:	7fefffff 	.word	0x7fefffff
 8002260:	0800671b 	.word	0x0800671b
 8002264:	0800671f 	.word	0x0800671f
 8002268:	08006723 	.word	0x08006723
 800226c:	08006727 	.word	0x08006727
 8002270:	0800672b 	.word	0x0800672b
 8002274:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002276:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800227a:	4553      	cmp	r3, sl
 800227c:	bfa8      	it	ge
 800227e:	4653      	movge	r3, sl
 8002280:	2b00      	cmp	r3, #0
 8002282:	4699      	mov	r9, r3
 8002284:	dc36      	bgt.n	80022f4 <_printf_float+0x360>
 8002286:	f04f 0b00 	mov.w	fp, #0
 800228a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800228e:	f104 021a 	add.w	r2, r4, #26
 8002292:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002294:	9306      	str	r3, [sp, #24]
 8002296:	eba3 0309 	sub.w	r3, r3, r9
 800229a:	455b      	cmp	r3, fp
 800229c:	dc31      	bgt.n	8002302 <_printf_float+0x36e>
 800229e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80022a0:	459a      	cmp	sl, r3
 80022a2:	dc3a      	bgt.n	800231a <_printf_float+0x386>
 80022a4:	6823      	ldr	r3, [r4, #0]
 80022a6:	07da      	lsls	r2, r3, #31
 80022a8:	d437      	bmi.n	800231a <_printf_float+0x386>
 80022aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80022ac:	ebaa 0903 	sub.w	r9, sl, r3
 80022b0:	9b06      	ldr	r3, [sp, #24]
 80022b2:	ebaa 0303 	sub.w	r3, sl, r3
 80022b6:	4599      	cmp	r9, r3
 80022b8:	bfa8      	it	ge
 80022ba:	4699      	movge	r9, r3
 80022bc:	f1b9 0f00 	cmp.w	r9, #0
 80022c0:	dc33      	bgt.n	800232a <_printf_float+0x396>
 80022c2:	f04f 0800 	mov.w	r8, #0
 80022c6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80022ca:	f104 0b1a 	add.w	fp, r4, #26
 80022ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80022d0:	ebaa 0303 	sub.w	r3, sl, r3
 80022d4:	eba3 0309 	sub.w	r3, r3, r9
 80022d8:	4543      	cmp	r3, r8
 80022da:	f77f af79 	ble.w	80021d0 <_printf_float+0x23c>
 80022de:	2301      	movs	r3, #1
 80022e0:	465a      	mov	r2, fp
 80022e2:	4631      	mov	r1, r6
 80022e4:	4628      	mov	r0, r5
 80022e6:	47b8      	blx	r7
 80022e8:	3001      	adds	r0, #1
 80022ea:	f43f aeae 	beq.w	800204a <_printf_float+0xb6>
 80022ee:	f108 0801 	add.w	r8, r8, #1
 80022f2:	e7ec      	b.n	80022ce <_printf_float+0x33a>
 80022f4:	4642      	mov	r2, r8
 80022f6:	4631      	mov	r1, r6
 80022f8:	4628      	mov	r0, r5
 80022fa:	47b8      	blx	r7
 80022fc:	3001      	adds	r0, #1
 80022fe:	d1c2      	bne.n	8002286 <_printf_float+0x2f2>
 8002300:	e6a3      	b.n	800204a <_printf_float+0xb6>
 8002302:	2301      	movs	r3, #1
 8002304:	4631      	mov	r1, r6
 8002306:	4628      	mov	r0, r5
 8002308:	9206      	str	r2, [sp, #24]
 800230a:	47b8      	blx	r7
 800230c:	3001      	adds	r0, #1
 800230e:	f43f ae9c 	beq.w	800204a <_printf_float+0xb6>
 8002312:	9a06      	ldr	r2, [sp, #24]
 8002314:	f10b 0b01 	add.w	fp, fp, #1
 8002318:	e7bb      	b.n	8002292 <_printf_float+0x2fe>
 800231a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800231e:	4631      	mov	r1, r6
 8002320:	4628      	mov	r0, r5
 8002322:	47b8      	blx	r7
 8002324:	3001      	adds	r0, #1
 8002326:	d1c0      	bne.n	80022aa <_printf_float+0x316>
 8002328:	e68f      	b.n	800204a <_printf_float+0xb6>
 800232a:	9a06      	ldr	r2, [sp, #24]
 800232c:	464b      	mov	r3, r9
 800232e:	4442      	add	r2, r8
 8002330:	4631      	mov	r1, r6
 8002332:	4628      	mov	r0, r5
 8002334:	47b8      	blx	r7
 8002336:	3001      	adds	r0, #1
 8002338:	d1c3      	bne.n	80022c2 <_printf_float+0x32e>
 800233a:	e686      	b.n	800204a <_printf_float+0xb6>
 800233c:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8002340:	f1ba 0f01 	cmp.w	sl, #1
 8002344:	dc01      	bgt.n	800234a <_printf_float+0x3b6>
 8002346:	07db      	lsls	r3, r3, #31
 8002348:	d536      	bpl.n	80023b8 <_printf_float+0x424>
 800234a:	2301      	movs	r3, #1
 800234c:	4642      	mov	r2, r8
 800234e:	4631      	mov	r1, r6
 8002350:	4628      	mov	r0, r5
 8002352:	47b8      	blx	r7
 8002354:	3001      	adds	r0, #1
 8002356:	f43f ae78 	beq.w	800204a <_printf_float+0xb6>
 800235a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800235e:	4631      	mov	r1, r6
 8002360:	4628      	mov	r0, r5
 8002362:	47b8      	blx	r7
 8002364:	3001      	adds	r0, #1
 8002366:	f43f ae70 	beq.w	800204a <_printf_float+0xb6>
 800236a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800236e:	2200      	movs	r2, #0
 8002370:	2300      	movs	r3, #0
 8002372:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002376:	f7fe fbc7 	bl	8000b08 <__aeabi_dcmpeq>
 800237a:	b9c0      	cbnz	r0, 80023ae <_printf_float+0x41a>
 800237c:	4653      	mov	r3, sl
 800237e:	f108 0201 	add.w	r2, r8, #1
 8002382:	4631      	mov	r1, r6
 8002384:	4628      	mov	r0, r5
 8002386:	47b8      	blx	r7
 8002388:	3001      	adds	r0, #1
 800238a:	d10c      	bne.n	80023a6 <_printf_float+0x412>
 800238c:	e65d      	b.n	800204a <_printf_float+0xb6>
 800238e:	2301      	movs	r3, #1
 8002390:	465a      	mov	r2, fp
 8002392:	4631      	mov	r1, r6
 8002394:	4628      	mov	r0, r5
 8002396:	47b8      	blx	r7
 8002398:	3001      	adds	r0, #1
 800239a:	f43f ae56 	beq.w	800204a <_printf_float+0xb6>
 800239e:	f108 0801 	add.w	r8, r8, #1
 80023a2:	45d0      	cmp	r8, sl
 80023a4:	dbf3      	blt.n	800238e <_printf_float+0x3fa>
 80023a6:	464b      	mov	r3, r9
 80023a8:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 80023ac:	e6df      	b.n	800216e <_printf_float+0x1da>
 80023ae:	f04f 0800 	mov.w	r8, #0
 80023b2:	f104 0b1a 	add.w	fp, r4, #26
 80023b6:	e7f4      	b.n	80023a2 <_printf_float+0x40e>
 80023b8:	2301      	movs	r3, #1
 80023ba:	4642      	mov	r2, r8
 80023bc:	e7e1      	b.n	8002382 <_printf_float+0x3ee>
 80023be:	2301      	movs	r3, #1
 80023c0:	464a      	mov	r2, r9
 80023c2:	4631      	mov	r1, r6
 80023c4:	4628      	mov	r0, r5
 80023c6:	47b8      	blx	r7
 80023c8:	3001      	adds	r0, #1
 80023ca:	f43f ae3e 	beq.w	800204a <_printf_float+0xb6>
 80023ce:	f108 0801 	add.w	r8, r8, #1
 80023d2:	68e3      	ldr	r3, [r4, #12]
 80023d4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80023d6:	1a5b      	subs	r3, r3, r1
 80023d8:	4543      	cmp	r3, r8
 80023da:	dcf0      	bgt.n	80023be <_printf_float+0x42a>
 80023dc:	e6fc      	b.n	80021d8 <_printf_float+0x244>
 80023de:	f04f 0800 	mov.w	r8, #0
 80023e2:	f104 0919 	add.w	r9, r4, #25
 80023e6:	e7f4      	b.n	80023d2 <_printf_float+0x43e>

080023e8 <_printf_common>:
 80023e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80023ec:	4616      	mov	r6, r2
 80023ee:	4698      	mov	r8, r3
 80023f0:	688a      	ldr	r2, [r1, #8]
 80023f2:	690b      	ldr	r3, [r1, #16]
 80023f4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80023f8:	4293      	cmp	r3, r2
 80023fa:	bfb8      	it	lt
 80023fc:	4613      	movlt	r3, r2
 80023fe:	6033      	str	r3, [r6, #0]
 8002400:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8002404:	4607      	mov	r7, r0
 8002406:	460c      	mov	r4, r1
 8002408:	b10a      	cbz	r2, 800240e <_printf_common+0x26>
 800240a:	3301      	adds	r3, #1
 800240c:	6033      	str	r3, [r6, #0]
 800240e:	6823      	ldr	r3, [r4, #0]
 8002410:	0699      	lsls	r1, r3, #26
 8002412:	bf42      	ittt	mi
 8002414:	6833      	ldrmi	r3, [r6, #0]
 8002416:	3302      	addmi	r3, #2
 8002418:	6033      	strmi	r3, [r6, #0]
 800241a:	6825      	ldr	r5, [r4, #0]
 800241c:	f015 0506 	ands.w	r5, r5, #6
 8002420:	d106      	bne.n	8002430 <_printf_common+0x48>
 8002422:	f104 0a19 	add.w	sl, r4, #25
 8002426:	68e3      	ldr	r3, [r4, #12]
 8002428:	6832      	ldr	r2, [r6, #0]
 800242a:	1a9b      	subs	r3, r3, r2
 800242c:	42ab      	cmp	r3, r5
 800242e:	dc26      	bgt.n	800247e <_printf_common+0x96>
 8002430:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8002434:	6822      	ldr	r2, [r4, #0]
 8002436:	3b00      	subs	r3, #0
 8002438:	bf18      	it	ne
 800243a:	2301      	movne	r3, #1
 800243c:	0692      	lsls	r2, r2, #26
 800243e:	d42b      	bmi.n	8002498 <_printf_common+0xb0>
 8002440:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8002444:	4641      	mov	r1, r8
 8002446:	4638      	mov	r0, r7
 8002448:	47c8      	blx	r9
 800244a:	3001      	adds	r0, #1
 800244c:	d01e      	beq.n	800248c <_printf_common+0xa4>
 800244e:	6823      	ldr	r3, [r4, #0]
 8002450:	6922      	ldr	r2, [r4, #16]
 8002452:	f003 0306 	and.w	r3, r3, #6
 8002456:	2b04      	cmp	r3, #4
 8002458:	bf02      	ittt	eq
 800245a:	68e5      	ldreq	r5, [r4, #12]
 800245c:	6833      	ldreq	r3, [r6, #0]
 800245e:	1aed      	subeq	r5, r5, r3
 8002460:	68a3      	ldr	r3, [r4, #8]
 8002462:	bf0c      	ite	eq
 8002464:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002468:	2500      	movne	r5, #0
 800246a:	4293      	cmp	r3, r2
 800246c:	bfc4      	itt	gt
 800246e:	1a9b      	subgt	r3, r3, r2
 8002470:	18ed      	addgt	r5, r5, r3
 8002472:	2600      	movs	r6, #0
 8002474:	341a      	adds	r4, #26
 8002476:	42b5      	cmp	r5, r6
 8002478:	d11a      	bne.n	80024b0 <_printf_common+0xc8>
 800247a:	2000      	movs	r0, #0
 800247c:	e008      	b.n	8002490 <_printf_common+0xa8>
 800247e:	2301      	movs	r3, #1
 8002480:	4652      	mov	r2, sl
 8002482:	4641      	mov	r1, r8
 8002484:	4638      	mov	r0, r7
 8002486:	47c8      	blx	r9
 8002488:	3001      	adds	r0, #1
 800248a:	d103      	bne.n	8002494 <_printf_common+0xac>
 800248c:	f04f 30ff 	mov.w	r0, #4294967295
 8002490:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002494:	3501      	adds	r5, #1
 8002496:	e7c6      	b.n	8002426 <_printf_common+0x3e>
 8002498:	18e1      	adds	r1, r4, r3
 800249a:	1c5a      	adds	r2, r3, #1
 800249c:	2030      	movs	r0, #48	@ 0x30
 800249e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80024a2:	4422      	add	r2, r4
 80024a4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80024a8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80024ac:	3302      	adds	r3, #2
 80024ae:	e7c7      	b.n	8002440 <_printf_common+0x58>
 80024b0:	2301      	movs	r3, #1
 80024b2:	4622      	mov	r2, r4
 80024b4:	4641      	mov	r1, r8
 80024b6:	4638      	mov	r0, r7
 80024b8:	47c8      	blx	r9
 80024ba:	3001      	adds	r0, #1
 80024bc:	d0e6      	beq.n	800248c <_printf_common+0xa4>
 80024be:	3601      	adds	r6, #1
 80024c0:	e7d9      	b.n	8002476 <_printf_common+0x8e>
	...

080024c4 <_printf_i>:
 80024c4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80024c8:	7e0f      	ldrb	r7, [r1, #24]
 80024ca:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80024cc:	2f78      	cmp	r7, #120	@ 0x78
 80024ce:	4691      	mov	r9, r2
 80024d0:	4680      	mov	r8, r0
 80024d2:	460c      	mov	r4, r1
 80024d4:	469a      	mov	sl, r3
 80024d6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80024da:	d807      	bhi.n	80024ec <_printf_i+0x28>
 80024dc:	2f62      	cmp	r7, #98	@ 0x62
 80024de:	d80a      	bhi.n	80024f6 <_printf_i+0x32>
 80024e0:	2f00      	cmp	r7, #0
 80024e2:	f000 80d2 	beq.w	800268a <_printf_i+0x1c6>
 80024e6:	2f58      	cmp	r7, #88	@ 0x58
 80024e8:	f000 80b9 	beq.w	800265e <_printf_i+0x19a>
 80024ec:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80024f0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80024f4:	e03a      	b.n	800256c <_printf_i+0xa8>
 80024f6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80024fa:	2b15      	cmp	r3, #21
 80024fc:	d8f6      	bhi.n	80024ec <_printf_i+0x28>
 80024fe:	a101      	add	r1, pc, #4	@ (adr r1, 8002504 <_printf_i+0x40>)
 8002500:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002504:	0800255d 	.word	0x0800255d
 8002508:	08002571 	.word	0x08002571
 800250c:	080024ed 	.word	0x080024ed
 8002510:	080024ed 	.word	0x080024ed
 8002514:	080024ed 	.word	0x080024ed
 8002518:	080024ed 	.word	0x080024ed
 800251c:	08002571 	.word	0x08002571
 8002520:	080024ed 	.word	0x080024ed
 8002524:	080024ed 	.word	0x080024ed
 8002528:	080024ed 	.word	0x080024ed
 800252c:	080024ed 	.word	0x080024ed
 8002530:	08002671 	.word	0x08002671
 8002534:	0800259b 	.word	0x0800259b
 8002538:	0800262b 	.word	0x0800262b
 800253c:	080024ed 	.word	0x080024ed
 8002540:	080024ed 	.word	0x080024ed
 8002544:	08002693 	.word	0x08002693
 8002548:	080024ed 	.word	0x080024ed
 800254c:	0800259b 	.word	0x0800259b
 8002550:	080024ed 	.word	0x080024ed
 8002554:	080024ed 	.word	0x080024ed
 8002558:	08002633 	.word	0x08002633
 800255c:	6833      	ldr	r3, [r6, #0]
 800255e:	1d1a      	adds	r2, r3, #4
 8002560:	681b      	ldr	r3, [r3, #0]
 8002562:	6032      	str	r2, [r6, #0]
 8002564:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002568:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800256c:	2301      	movs	r3, #1
 800256e:	e09d      	b.n	80026ac <_printf_i+0x1e8>
 8002570:	6833      	ldr	r3, [r6, #0]
 8002572:	6820      	ldr	r0, [r4, #0]
 8002574:	1d19      	adds	r1, r3, #4
 8002576:	6031      	str	r1, [r6, #0]
 8002578:	0606      	lsls	r6, r0, #24
 800257a:	d501      	bpl.n	8002580 <_printf_i+0xbc>
 800257c:	681d      	ldr	r5, [r3, #0]
 800257e:	e003      	b.n	8002588 <_printf_i+0xc4>
 8002580:	0645      	lsls	r5, r0, #25
 8002582:	d5fb      	bpl.n	800257c <_printf_i+0xb8>
 8002584:	f9b3 5000 	ldrsh.w	r5, [r3]
 8002588:	2d00      	cmp	r5, #0
 800258a:	da03      	bge.n	8002594 <_printf_i+0xd0>
 800258c:	232d      	movs	r3, #45	@ 0x2d
 800258e:	426d      	negs	r5, r5
 8002590:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002594:	4859      	ldr	r0, [pc, #356]	@ (80026fc <_printf_i+0x238>)
 8002596:	230a      	movs	r3, #10
 8002598:	e011      	b.n	80025be <_printf_i+0xfa>
 800259a:	6821      	ldr	r1, [r4, #0]
 800259c:	6833      	ldr	r3, [r6, #0]
 800259e:	0608      	lsls	r0, r1, #24
 80025a0:	f853 5b04 	ldr.w	r5, [r3], #4
 80025a4:	d402      	bmi.n	80025ac <_printf_i+0xe8>
 80025a6:	0649      	lsls	r1, r1, #25
 80025a8:	bf48      	it	mi
 80025aa:	b2ad      	uxthmi	r5, r5
 80025ac:	2f6f      	cmp	r7, #111	@ 0x6f
 80025ae:	4853      	ldr	r0, [pc, #332]	@ (80026fc <_printf_i+0x238>)
 80025b0:	6033      	str	r3, [r6, #0]
 80025b2:	bf14      	ite	ne
 80025b4:	230a      	movne	r3, #10
 80025b6:	2308      	moveq	r3, #8
 80025b8:	2100      	movs	r1, #0
 80025ba:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80025be:	6866      	ldr	r6, [r4, #4]
 80025c0:	60a6      	str	r6, [r4, #8]
 80025c2:	2e00      	cmp	r6, #0
 80025c4:	bfa2      	ittt	ge
 80025c6:	6821      	ldrge	r1, [r4, #0]
 80025c8:	f021 0104 	bicge.w	r1, r1, #4
 80025cc:	6021      	strge	r1, [r4, #0]
 80025ce:	b90d      	cbnz	r5, 80025d4 <_printf_i+0x110>
 80025d0:	2e00      	cmp	r6, #0
 80025d2:	d04b      	beq.n	800266c <_printf_i+0x1a8>
 80025d4:	4616      	mov	r6, r2
 80025d6:	fbb5 f1f3 	udiv	r1, r5, r3
 80025da:	fb03 5711 	mls	r7, r3, r1, r5
 80025de:	5dc7      	ldrb	r7, [r0, r7]
 80025e0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80025e4:	462f      	mov	r7, r5
 80025e6:	42bb      	cmp	r3, r7
 80025e8:	460d      	mov	r5, r1
 80025ea:	d9f4      	bls.n	80025d6 <_printf_i+0x112>
 80025ec:	2b08      	cmp	r3, #8
 80025ee:	d10b      	bne.n	8002608 <_printf_i+0x144>
 80025f0:	6823      	ldr	r3, [r4, #0]
 80025f2:	07df      	lsls	r7, r3, #31
 80025f4:	d508      	bpl.n	8002608 <_printf_i+0x144>
 80025f6:	6923      	ldr	r3, [r4, #16]
 80025f8:	6861      	ldr	r1, [r4, #4]
 80025fa:	4299      	cmp	r1, r3
 80025fc:	bfde      	ittt	le
 80025fe:	2330      	movle	r3, #48	@ 0x30
 8002600:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002604:	f106 36ff 	addle.w	r6, r6, #4294967295
 8002608:	1b92      	subs	r2, r2, r6
 800260a:	6122      	str	r2, [r4, #16]
 800260c:	f8cd a000 	str.w	sl, [sp]
 8002610:	464b      	mov	r3, r9
 8002612:	aa03      	add	r2, sp, #12
 8002614:	4621      	mov	r1, r4
 8002616:	4640      	mov	r0, r8
 8002618:	f7ff fee6 	bl	80023e8 <_printf_common>
 800261c:	3001      	adds	r0, #1
 800261e:	d14a      	bne.n	80026b6 <_printf_i+0x1f2>
 8002620:	f04f 30ff 	mov.w	r0, #4294967295
 8002624:	b004      	add	sp, #16
 8002626:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800262a:	6823      	ldr	r3, [r4, #0]
 800262c:	f043 0320 	orr.w	r3, r3, #32
 8002630:	6023      	str	r3, [r4, #0]
 8002632:	4833      	ldr	r0, [pc, #204]	@ (8002700 <_printf_i+0x23c>)
 8002634:	2778      	movs	r7, #120	@ 0x78
 8002636:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800263a:	6823      	ldr	r3, [r4, #0]
 800263c:	6831      	ldr	r1, [r6, #0]
 800263e:	061f      	lsls	r7, r3, #24
 8002640:	f851 5b04 	ldr.w	r5, [r1], #4
 8002644:	d402      	bmi.n	800264c <_printf_i+0x188>
 8002646:	065f      	lsls	r7, r3, #25
 8002648:	bf48      	it	mi
 800264a:	b2ad      	uxthmi	r5, r5
 800264c:	6031      	str	r1, [r6, #0]
 800264e:	07d9      	lsls	r1, r3, #31
 8002650:	bf44      	itt	mi
 8002652:	f043 0320 	orrmi.w	r3, r3, #32
 8002656:	6023      	strmi	r3, [r4, #0]
 8002658:	b11d      	cbz	r5, 8002662 <_printf_i+0x19e>
 800265a:	2310      	movs	r3, #16
 800265c:	e7ac      	b.n	80025b8 <_printf_i+0xf4>
 800265e:	4827      	ldr	r0, [pc, #156]	@ (80026fc <_printf_i+0x238>)
 8002660:	e7e9      	b.n	8002636 <_printf_i+0x172>
 8002662:	6823      	ldr	r3, [r4, #0]
 8002664:	f023 0320 	bic.w	r3, r3, #32
 8002668:	6023      	str	r3, [r4, #0]
 800266a:	e7f6      	b.n	800265a <_printf_i+0x196>
 800266c:	4616      	mov	r6, r2
 800266e:	e7bd      	b.n	80025ec <_printf_i+0x128>
 8002670:	6833      	ldr	r3, [r6, #0]
 8002672:	6825      	ldr	r5, [r4, #0]
 8002674:	6961      	ldr	r1, [r4, #20]
 8002676:	1d18      	adds	r0, r3, #4
 8002678:	6030      	str	r0, [r6, #0]
 800267a:	062e      	lsls	r6, r5, #24
 800267c:	681b      	ldr	r3, [r3, #0]
 800267e:	d501      	bpl.n	8002684 <_printf_i+0x1c0>
 8002680:	6019      	str	r1, [r3, #0]
 8002682:	e002      	b.n	800268a <_printf_i+0x1c6>
 8002684:	0668      	lsls	r0, r5, #25
 8002686:	d5fb      	bpl.n	8002680 <_printf_i+0x1bc>
 8002688:	8019      	strh	r1, [r3, #0]
 800268a:	2300      	movs	r3, #0
 800268c:	6123      	str	r3, [r4, #16]
 800268e:	4616      	mov	r6, r2
 8002690:	e7bc      	b.n	800260c <_printf_i+0x148>
 8002692:	6833      	ldr	r3, [r6, #0]
 8002694:	1d1a      	adds	r2, r3, #4
 8002696:	6032      	str	r2, [r6, #0]
 8002698:	681e      	ldr	r6, [r3, #0]
 800269a:	6862      	ldr	r2, [r4, #4]
 800269c:	2100      	movs	r1, #0
 800269e:	4630      	mov	r0, r6
 80026a0:	f7fd fdb6 	bl	8000210 <memchr>
 80026a4:	b108      	cbz	r0, 80026aa <_printf_i+0x1e6>
 80026a6:	1b80      	subs	r0, r0, r6
 80026a8:	6060      	str	r0, [r4, #4]
 80026aa:	6863      	ldr	r3, [r4, #4]
 80026ac:	6123      	str	r3, [r4, #16]
 80026ae:	2300      	movs	r3, #0
 80026b0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80026b4:	e7aa      	b.n	800260c <_printf_i+0x148>
 80026b6:	6923      	ldr	r3, [r4, #16]
 80026b8:	4632      	mov	r2, r6
 80026ba:	4649      	mov	r1, r9
 80026bc:	4640      	mov	r0, r8
 80026be:	47d0      	blx	sl
 80026c0:	3001      	adds	r0, #1
 80026c2:	d0ad      	beq.n	8002620 <_printf_i+0x15c>
 80026c4:	6823      	ldr	r3, [r4, #0]
 80026c6:	079b      	lsls	r3, r3, #30
 80026c8:	d413      	bmi.n	80026f2 <_printf_i+0x22e>
 80026ca:	68e0      	ldr	r0, [r4, #12]
 80026cc:	9b03      	ldr	r3, [sp, #12]
 80026ce:	4298      	cmp	r0, r3
 80026d0:	bfb8      	it	lt
 80026d2:	4618      	movlt	r0, r3
 80026d4:	e7a6      	b.n	8002624 <_printf_i+0x160>
 80026d6:	2301      	movs	r3, #1
 80026d8:	4632      	mov	r2, r6
 80026da:	4649      	mov	r1, r9
 80026dc:	4640      	mov	r0, r8
 80026de:	47d0      	blx	sl
 80026e0:	3001      	adds	r0, #1
 80026e2:	d09d      	beq.n	8002620 <_printf_i+0x15c>
 80026e4:	3501      	adds	r5, #1
 80026e6:	68e3      	ldr	r3, [r4, #12]
 80026e8:	9903      	ldr	r1, [sp, #12]
 80026ea:	1a5b      	subs	r3, r3, r1
 80026ec:	42ab      	cmp	r3, r5
 80026ee:	dcf2      	bgt.n	80026d6 <_printf_i+0x212>
 80026f0:	e7eb      	b.n	80026ca <_printf_i+0x206>
 80026f2:	2500      	movs	r5, #0
 80026f4:	f104 0619 	add.w	r6, r4, #25
 80026f8:	e7f5      	b.n	80026e6 <_printf_i+0x222>
 80026fa:	bf00      	nop
 80026fc:	0800672d 	.word	0x0800672d
 8002700:	0800673e 	.word	0x0800673e

08002704 <_scanf_float>:
 8002704:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002708:	b087      	sub	sp, #28
 800270a:	4617      	mov	r7, r2
 800270c:	9303      	str	r3, [sp, #12]
 800270e:	688b      	ldr	r3, [r1, #8]
 8002710:	1e5a      	subs	r2, r3, #1
 8002712:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 8002716:	bf81      	itttt	hi
 8002718:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 800271c:	eb03 0b05 	addhi.w	fp, r3, r5
 8002720:	f240 135d 	movwhi	r3, #349	@ 0x15d
 8002724:	608b      	strhi	r3, [r1, #8]
 8002726:	680b      	ldr	r3, [r1, #0]
 8002728:	460a      	mov	r2, r1
 800272a:	f04f 0500 	mov.w	r5, #0
 800272e:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 8002732:	f842 3b1c 	str.w	r3, [r2], #28
 8002736:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800273a:	4680      	mov	r8, r0
 800273c:	460c      	mov	r4, r1
 800273e:	bf98      	it	ls
 8002740:	f04f 0b00 	movls.w	fp, #0
 8002744:	9201      	str	r2, [sp, #4]
 8002746:	4616      	mov	r6, r2
 8002748:	46aa      	mov	sl, r5
 800274a:	46a9      	mov	r9, r5
 800274c:	9502      	str	r5, [sp, #8]
 800274e:	68a2      	ldr	r2, [r4, #8]
 8002750:	b152      	cbz	r2, 8002768 <_scanf_float+0x64>
 8002752:	683b      	ldr	r3, [r7, #0]
 8002754:	781b      	ldrb	r3, [r3, #0]
 8002756:	2b4e      	cmp	r3, #78	@ 0x4e
 8002758:	d864      	bhi.n	8002824 <_scanf_float+0x120>
 800275a:	2b40      	cmp	r3, #64	@ 0x40
 800275c:	d83c      	bhi.n	80027d8 <_scanf_float+0xd4>
 800275e:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 8002762:	b2c8      	uxtb	r0, r1
 8002764:	280e      	cmp	r0, #14
 8002766:	d93a      	bls.n	80027de <_scanf_float+0xda>
 8002768:	f1b9 0f00 	cmp.w	r9, #0
 800276c:	d003      	beq.n	8002776 <_scanf_float+0x72>
 800276e:	6823      	ldr	r3, [r4, #0]
 8002770:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8002774:	6023      	str	r3, [r4, #0]
 8002776:	f10a 3aff 	add.w	sl, sl, #4294967295
 800277a:	f1ba 0f01 	cmp.w	sl, #1
 800277e:	f200 8117 	bhi.w	80029b0 <_scanf_float+0x2ac>
 8002782:	9b01      	ldr	r3, [sp, #4]
 8002784:	429e      	cmp	r6, r3
 8002786:	f200 8108 	bhi.w	800299a <_scanf_float+0x296>
 800278a:	2001      	movs	r0, #1
 800278c:	b007      	add	sp, #28
 800278e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002792:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 8002796:	2a0d      	cmp	r2, #13
 8002798:	d8e6      	bhi.n	8002768 <_scanf_float+0x64>
 800279a:	a101      	add	r1, pc, #4	@ (adr r1, 80027a0 <_scanf_float+0x9c>)
 800279c:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 80027a0:	080028e7 	.word	0x080028e7
 80027a4:	08002769 	.word	0x08002769
 80027a8:	08002769 	.word	0x08002769
 80027ac:	08002769 	.word	0x08002769
 80027b0:	08002947 	.word	0x08002947
 80027b4:	0800291f 	.word	0x0800291f
 80027b8:	08002769 	.word	0x08002769
 80027bc:	08002769 	.word	0x08002769
 80027c0:	080028f5 	.word	0x080028f5
 80027c4:	08002769 	.word	0x08002769
 80027c8:	08002769 	.word	0x08002769
 80027cc:	08002769 	.word	0x08002769
 80027d0:	08002769 	.word	0x08002769
 80027d4:	080028ad 	.word	0x080028ad
 80027d8:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 80027dc:	e7db      	b.n	8002796 <_scanf_float+0x92>
 80027de:	290e      	cmp	r1, #14
 80027e0:	d8c2      	bhi.n	8002768 <_scanf_float+0x64>
 80027e2:	a001      	add	r0, pc, #4	@ (adr r0, 80027e8 <_scanf_float+0xe4>)
 80027e4:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 80027e8:	0800289d 	.word	0x0800289d
 80027ec:	08002769 	.word	0x08002769
 80027f0:	0800289d 	.word	0x0800289d
 80027f4:	08002933 	.word	0x08002933
 80027f8:	08002769 	.word	0x08002769
 80027fc:	08002845 	.word	0x08002845
 8002800:	08002883 	.word	0x08002883
 8002804:	08002883 	.word	0x08002883
 8002808:	08002883 	.word	0x08002883
 800280c:	08002883 	.word	0x08002883
 8002810:	08002883 	.word	0x08002883
 8002814:	08002883 	.word	0x08002883
 8002818:	08002883 	.word	0x08002883
 800281c:	08002883 	.word	0x08002883
 8002820:	08002883 	.word	0x08002883
 8002824:	2b6e      	cmp	r3, #110	@ 0x6e
 8002826:	d809      	bhi.n	800283c <_scanf_float+0x138>
 8002828:	2b60      	cmp	r3, #96	@ 0x60
 800282a:	d8b2      	bhi.n	8002792 <_scanf_float+0x8e>
 800282c:	2b54      	cmp	r3, #84	@ 0x54
 800282e:	d07b      	beq.n	8002928 <_scanf_float+0x224>
 8002830:	2b59      	cmp	r3, #89	@ 0x59
 8002832:	d199      	bne.n	8002768 <_scanf_float+0x64>
 8002834:	2d07      	cmp	r5, #7
 8002836:	d197      	bne.n	8002768 <_scanf_float+0x64>
 8002838:	2508      	movs	r5, #8
 800283a:	e02c      	b.n	8002896 <_scanf_float+0x192>
 800283c:	2b74      	cmp	r3, #116	@ 0x74
 800283e:	d073      	beq.n	8002928 <_scanf_float+0x224>
 8002840:	2b79      	cmp	r3, #121	@ 0x79
 8002842:	e7f6      	b.n	8002832 <_scanf_float+0x12e>
 8002844:	6821      	ldr	r1, [r4, #0]
 8002846:	05c8      	lsls	r0, r1, #23
 8002848:	d51b      	bpl.n	8002882 <_scanf_float+0x17e>
 800284a:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 800284e:	6021      	str	r1, [r4, #0]
 8002850:	f109 0901 	add.w	r9, r9, #1
 8002854:	f1bb 0f00 	cmp.w	fp, #0
 8002858:	d003      	beq.n	8002862 <_scanf_float+0x15e>
 800285a:	3201      	adds	r2, #1
 800285c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002860:	60a2      	str	r2, [r4, #8]
 8002862:	68a3      	ldr	r3, [r4, #8]
 8002864:	3b01      	subs	r3, #1
 8002866:	60a3      	str	r3, [r4, #8]
 8002868:	6923      	ldr	r3, [r4, #16]
 800286a:	3301      	adds	r3, #1
 800286c:	6123      	str	r3, [r4, #16]
 800286e:	687b      	ldr	r3, [r7, #4]
 8002870:	3b01      	subs	r3, #1
 8002872:	2b00      	cmp	r3, #0
 8002874:	607b      	str	r3, [r7, #4]
 8002876:	f340 8087 	ble.w	8002988 <_scanf_float+0x284>
 800287a:	683b      	ldr	r3, [r7, #0]
 800287c:	3301      	adds	r3, #1
 800287e:	603b      	str	r3, [r7, #0]
 8002880:	e765      	b.n	800274e <_scanf_float+0x4a>
 8002882:	eb1a 0105 	adds.w	r1, sl, r5
 8002886:	f47f af6f 	bne.w	8002768 <_scanf_float+0x64>
 800288a:	6822      	ldr	r2, [r4, #0]
 800288c:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 8002890:	6022      	str	r2, [r4, #0]
 8002892:	460d      	mov	r5, r1
 8002894:	468a      	mov	sl, r1
 8002896:	f806 3b01 	strb.w	r3, [r6], #1
 800289a:	e7e2      	b.n	8002862 <_scanf_float+0x15e>
 800289c:	6822      	ldr	r2, [r4, #0]
 800289e:	0610      	lsls	r0, r2, #24
 80028a0:	f57f af62 	bpl.w	8002768 <_scanf_float+0x64>
 80028a4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80028a8:	6022      	str	r2, [r4, #0]
 80028aa:	e7f4      	b.n	8002896 <_scanf_float+0x192>
 80028ac:	f1ba 0f00 	cmp.w	sl, #0
 80028b0:	d10e      	bne.n	80028d0 <_scanf_float+0x1cc>
 80028b2:	f1b9 0f00 	cmp.w	r9, #0
 80028b6:	d10e      	bne.n	80028d6 <_scanf_float+0x1d2>
 80028b8:	6822      	ldr	r2, [r4, #0]
 80028ba:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 80028be:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 80028c2:	d108      	bne.n	80028d6 <_scanf_float+0x1d2>
 80028c4:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 80028c8:	6022      	str	r2, [r4, #0]
 80028ca:	f04f 0a01 	mov.w	sl, #1
 80028ce:	e7e2      	b.n	8002896 <_scanf_float+0x192>
 80028d0:	f1ba 0f02 	cmp.w	sl, #2
 80028d4:	d055      	beq.n	8002982 <_scanf_float+0x27e>
 80028d6:	2d01      	cmp	r5, #1
 80028d8:	d002      	beq.n	80028e0 <_scanf_float+0x1dc>
 80028da:	2d04      	cmp	r5, #4
 80028dc:	f47f af44 	bne.w	8002768 <_scanf_float+0x64>
 80028e0:	3501      	adds	r5, #1
 80028e2:	b2ed      	uxtb	r5, r5
 80028e4:	e7d7      	b.n	8002896 <_scanf_float+0x192>
 80028e6:	f1ba 0f01 	cmp.w	sl, #1
 80028ea:	f47f af3d 	bne.w	8002768 <_scanf_float+0x64>
 80028ee:	f04f 0a02 	mov.w	sl, #2
 80028f2:	e7d0      	b.n	8002896 <_scanf_float+0x192>
 80028f4:	b97d      	cbnz	r5, 8002916 <_scanf_float+0x212>
 80028f6:	f1b9 0f00 	cmp.w	r9, #0
 80028fa:	f47f af38 	bne.w	800276e <_scanf_float+0x6a>
 80028fe:	6822      	ldr	r2, [r4, #0]
 8002900:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8002904:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 8002908:	f040 8108 	bne.w	8002b1c <_scanf_float+0x418>
 800290c:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8002910:	6022      	str	r2, [r4, #0]
 8002912:	2501      	movs	r5, #1
 8002914:	e7bf      	b.n	8002896 <_scanf_float+0x192>
 8002916:	2d03      	cmp	r5, #3
 8002918:	d0e2      	beq.n	80028e0 <_scanf_float+0x1dc>
 800291a:	2d05      	cmp	r5, #5
 800291c:	e7de      	b.n	80028dc <_scanf_float+0x1d8>
 800291e:	2d02      	cmp	r5, #2
 8002920:	f47f af22 	bne.w	8002768 <_scanf_float+0x64>
 8002924:	2503      	movs	r5, #3
 8002926:	e7b6      	b.n	8002896 <_scanf_float+0x192>
 8002928:	2d06      	cmp	r5, #6
 800292a:	f47f af1d 	bne.w	8002768 <_scanf_float+0x64>
 800292e:	2507      	movs	r5, #7
 8002930:	e7b1      	b.n	8002896 <_scanf_float+0x192>
 8002932:	6822      	ldr	r2, [r4, #0]
 8002934:	0591      	lsls	r1, r2, #22
 8002936:	f57f af17 	bpl.w	8002768 <_scanf_float+0x64>
 800293a:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 800293e:	6022      	str	r2, [r4, #0]
 8002940:	f8cd 9008 	str.w	r9, [sp, #8]
 8002944:	e7a7      	b.n	8002896 <_scanf_float+0x192>
 8002946:	6822      	ldr	r2, [r4, #0]
 8002948:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 800294c:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8002950:	d006      	beq.n	8002960 <_scanf_float+0x25c>
 8002952:	0550      	lsls	r0, r2, #21
 8002954:	f57f af08 	bpl.w	8002768 <_scanf_float+0x64>
 8002958:	f1b9 0f00 	cmp.w	r9, #0
 800295c:	f000 80de 	beq.w	8002b1c <_scanf_float+0x418>
 8002960:	0591      	lsls	r1, r2, #22
 8002962:	bf58      	it	pl
 8002964:	9902      	ldrpl	r1, [sp, #8]
 8002966:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 800296a:	bf58      	it	pl
 800296c:	eba9 0101 	subpl.w	r1, r9, r1
 8002970:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 8002974:	bf58      	it	pl
 8002976:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 800297a:	6022      	str	r2, [r4, #0]
 800297c:	f04f 0900 	mov.w	r9, #0
 8002980:	e789      	b.n	8002896 <_scanf_float+0x192>
 8002982:	f04f 0a03 	mov.w	sl, #3
 8002986:	e786      	b.n	8002896 <_scanf_float+0x192>
 8002988:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 800298c:	4639      	mov	r1, r7
 800298e:	4640      	mov	r0, r8
 8002990:	4798      	blx	r3
 8002992:	2800      	cmp	r0, #0
 8002994:	f43f aedb 	beq.w	800274e <_scanf_float+0x4a>
 8002998:	e6e6      	b.n	8002768 <_scanf_float+0x64>
 800299a:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800299e:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80029a2:	463a      	mov	r2, r7
 80029a4:	4640      	mov	r0, r8
 80029a6:	4798      	blx	r3
 80029a8:	6923      	ldr	r3, [r4, #16]
 80029aa:	3b01      	subs	r3, #1
 80029ac:	6123      	str	r3, [r4, #16]
 80029ae:	e6e8      	b.n	8002782 <_scanf_float+0x7e>
 80029b0:	1e6b      	subs	r3, r5, #1
 80029b2:	2b06      	cmp	r3, #6
 80029b4:	d824      	bhi.n	8002a00 <_scanf_float+0x2fc>
 80029b6:	2d02      	cmp	r5, #2
 80029b8:	d836      	bhi.n	8002a28 <_scanf_float+0x324>
 80029ba:	9b01      	ldr	r3, [sp, #4]
 80029bc:	429e      	cmp	r6, r3
 80029be:	f67f aee4 	bls.w	800278a <_scanf_float+0x86>
 80029c2:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80029c6:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80029ca:	463a      	mov	r2, r7
 80029cc:	4640      	mov	r0, r8
 80029ce:	4798      	blx	r3
 80029d0:	6923      	ldr	r3, [r4, #16]
 80029d2:	3b01      	subs	r3, #1
 80029d4:	6123      	str	r3, [r4, #16]
 80029d6:	e7f0      	b.n	80029ba <_scanf_float+0x2b6>
 80029d8:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80029dc:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 80029e0:	463a      	mov	r2, r7
 80029e2:	4640      	mov	r0, r8
 80029e4:	4798      	blx	r3
 80029e6:	6923      	ldr	r3, [r4, #16]
 80029e8:	3b01      	subs	r3, #1
 80029ea:	6123      	str	r3, [r4, #16]
 80029ec:	f10a 3aff 	add.w	sl, sl, #4294967295
 80029f0:	fa5f fa8a 	uxtb.w	sl, sl
 80029f4:	f1ba 0f02 	cmp.w	sl, #2
 80029f8:	d1ee      	bne.n	80029d8 <_scanf_float+0x2d4>
 80029fa:	3d03      	subs	r5, #3
 80029fc:	b2ed      	uxtb	r5, r5
 80029fe:	1b76      	subs	r6, r6, r5
 8002a00:	6823      	ldr	r3, [r4, #0]
 8002a02:	05da      	lsls	r2, r3, #23
 8002a04:	d530      	bpl.n	8002a68 <_scanf_float+0x364>
 8002a06:	055b      	lsls	r3, r3, #21
 8002a08:	d511      	bpl.n	8002a2e <_scanf_float+0x32a>
 8002a0a:	9b01      	ldr	r3, [sp, #4]
 8002a0c:	429e      	cmp	r6, r3
 8002a0e:	f67f aebc 	bls.w	800278a <_scanf_float+0x86>
 8002a12:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002a16:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002a1a:	463a      	mov	r2, r7
 8002a1c:	4640      	mov	r0, r8
 8002a1e:	4798      	blx	r3
 8002a20:	6923      	ldr	r3, [r4, #16]
 8002a22:	3b01      	subs	r3, #1
 8002a24:	6123      	str	r3, [r4, #16]
 8002a26:	e7f0      	b.n	8002a0a <_scanf_float+0x306>
 8002a28:	46aa      	mov	sl, r5
 8002a2a:	46b3      	mov	fp, r6
 8002a2c:	e7de      	b.n	80029ec <_scanf_float+0x2e8>
 8002a2e:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8002a32:	6923      	ldr	r3, [r4, #16]
 8002a34:	2965      	cmp	r1, #101	@ 0x65
 8002a36:	f103 33ff 	add.w	r3, r3, #4294967295
 8002a3a:	f106 35ff 	add.w	r5, r6, #4294967295
 8002a3e:	6123      	str	r3, [r4, #16]
 8002a40:	d00c      	beq.n	8002a5c <_scanf_float+0x358>
 8002a42:	2945      	cmp	r1, #69	@ 0x45
 8002a44:	d00a      	beq.n	8002a5c <_scanf_float+0x358>
 8002a46:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002a4a:	463a      	mov	r2, r7
 8002a4c:	4640      	mov	r0, r8
 8002a4e:	4798      	blx	r3
 8002a50:	6923      	ldr	r3, [r4, #16]
 8002a52:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8002a56:	3b01      	subs	r3, #1
 8002a58:	1eb5      	subs	r5, r6, #2
 8002a5a:	6123      	str	r3, [r4, #16]
 8002a5c:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002a60:	463a      	mov	r2, r7
 8002a62:	4640      	mov	r0, r8
 8002a64:	4798      	blx	r3
 8002a66:	462e      	mov	r6, r5
 8002a68:	6822      	ldr	r2, [r4, #0]
 8002a6a:	f012 0210 	ands.w	r2, r2, #16
 8002a6e:	d001      	beq.n	8002a74 <_scanf_float+0x370>
 8002a70:	2000      	movs	r0, #0
 8002a72:	e68b      	b.n	800278c <_scanf_float+0x88>
 8002a74:	7032      	strb	r2, [r6, #0]
 8002a76:	6823      	ldr	r3, [r4, #0]
 8002a78:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8002a7c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002a80:	d11c      	bne.n	8002abc <_scanf_float+0x3b8>
 8002a82:	9b02      	ldr	r3, [sp, #8]
 8002a84:	454b      	cmp	r3, r9
 8002a86:	eba3 0209 	sub.w	r2, r3, r9
 8002a8a:	d123      	bne.n	8002ad4 <_scanf_float+0x3d0>
 8002a8c:	9901      	ldr	r1, [sp, #4]
 8002a8e:	2200      	movs	r2, #0
 8002a90:	4640      	mov	r0, r8
 8002a92:	f002 fc21 	bl	80052d8 <_strtod_r>
 8002a96:	9b03      	ldr	r3, [sp, #12]
 8002a98:	6821      	ldr	r1, [r4, #0]
 8002a9a:	681b      	ldr	r3, [r3, #0]
 8002a9c:	f011 0f02 	tst.w	r1, #2
 8002aa0:	ec57 6b10 	vmov	r6, r7, d0
 8002aa4:	f103 0204 	add.w	r2, r3, #4
 8002aa8:	d01f      	beq.n	8002aea <_scanf_float+0x3e6>
 8002aaa:	9903      	ldr	r1, [sp, #12]
 8002aac:	600a      	str	r2, [r1, #0]
 8002aae:	681b      	ldr	r3, [r3, #0]
 8002ab0:	e9c3 6700 	strd	r6, r7, [r3]
 8002ab4:	68e3      	ldr	r3, [r4, #12]
 8002ab6:	3301      	adds	r3, #1
 8002ab8:	60e3      	str	r3, [r4, #12]
 8002aba:	e7d9      	b.n	8002a70 <_scanf_float+0x36c>
 8002abc:	9b04      	ldr	r3, [sp, #16]
 8002abe:	2b00      	cmp	r3, #0
 8002ac0:	d0e4      	beq.n	8002a8c <_scanf_float+0x388>
 8002ac2:	9905      	ldr	r1, [sp, #20]
 8002ac4:	230a      	movs	r3, #10
 8002ac6:	3101      	adds	r1, #1
 8002ac8:	4640      	mov	r0, r8
 8002aca:	f002 fc85 	bl	80053d8 <_strtol_r>
 8002ace:	9b04      	ldr	r3, [sp, #16]
 8002ad0:	9e05      	ldr	r6, [sp, #20]
 8002ad2:	1ac2      	subs	r2, r0, r3
 8002ad4:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 8002ad8:	429e      	cmp	r6, r3
 8002ada:	bf28      	it	cs
 8002adc:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 8002ae0:	4910      	ldr	r1, [pc, #64]	@ (8002b24 <_scanf_float+0x420>)
 8002ae2:	4630      	mov	r0, r6
 8002ae4:	f000 f8f6 	bl	8002cd4 <siprintf>
 8002ae8:	e7d0      	b.n	8002a8c <_scanf_float+0x388>
 8002aea:	f011 0f04 	tst.w	r1, #4
 8002aee:	9903      	ldr	r1, [sp, #12]
 8002af0:	600a      	str	r2, [r1, #0]
 8002af2:	d1dc      	bne.n	8002aae <_scanf_float+0x3aa>
 8002af4:	681d      	ldr	r5, [r3, #0]
 8002af6:	4632      	mov	r2, r6
 8002af8:	463b      	mov	r3, r7
 8002afa:	4630      	mov	r0, r6
 8002afc:	4639      	mov	r1, r7
 8002afe:	f7fe f835 	bl	8000b6c <__aeabi_dcmpun>
 8002b02:	b128      	cbz	r0, 8002b10 <_scanf_float+0x40c>
 8002b04:	4808      	ldr	r0, [pc, #32]	@ (8002b28 <_scanf_float+0x424>)
 8002b06:	f000 f9df 	bl	8002ec8 <nanf>
 8002b0a:	ed85 0a00 	vstr	s0, [r5]
 8002b0e:	e7d1      	b.n	8002ab4 <_scanf_float+0x3b0>
 8002b10:	4630      	mov	r0, r6
 8002b12:	4639      	mov	r1, r7
 8002b14:	f7fe f888 	bl	8000c28 <__aeabi_d2f>
 8002b18:	6028      	str	r0, [r5, #0]
 8002b1a:	e7cb      	b.n	8002ab4 <_scanf_float+0x3b0>
 8002b1c:	f04f 0900 	mov.w	r9, #0
 8002b20:	e629      	b.n	8002776 <_scanf_float+0x72>
 8002b22:	bf00      	nop
 8002b24:	0800674f 	.word	0x0800674f
 8002b28:	080069e4 	.word	0x080069e4

08002b2c <std>:
 8002b2c:	2300      	movs	r3, #0
 8002b2e:	b510      	push	{r4, lr}
 8002b30:	4604      	mov	r4, r0
 8002b32:	e9c0 3300 	strd	r3, r3, [r0]
 8002b36:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002b3a:	6083      	str	r3, [r0, #8]
 8002b3c:	8181      	strh	r1, [r0, #12]
 8002b3e:	6643      	str	r3, [r0, #100]	@ 0x64
 8002b40:	81c2      	strh	r2, [r0, #14]
 8002b42:	6183      	str	r3, [r0, #24]
 8002b44:	4619      	mov	r1, r3
 8002b46:	2208      	movs	r2, #8
 8002b48:	305c      	adds	r0, #92	@ 0x5c
 8002b4a:	f000 f926 	bl	8002d9a <memset>
 8002b4e:	4b0d      	ldr	r3, [pc, #52]	@ (8002b84 <std+0x58>)
 8002b50:	6263      	str	r3, [r4, #36]	@ 0x24
 8002b52:	4b0d      	ldr	r3, [pc, #52]	@ (8002b88 <std+0x5c>)
 8002b54:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002b56:	4b0d      	ldr	r3, [pc, #52]	@ (8002b8c <std+0x60>)
 8002b58:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002b5a:	4b0d      	ldr	r3, [pc, #52]	@ (8002b90 <std+0x64>)
 8002b5c:	6323      	str	r3, [r4, #48]	@ 0x30
 8002b5e:	4b0d      	ldr	r3, [pc, #52]	@ (8002b94 <std+0x68>)
 8002b60:	6224      	str	r4, [r4, #32]
 8002b62:	429c      	cmp	r4, r3
 8002b64:	d006      	beq.n	8002b74 <std+0x48>
 8002b66:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8002b6a:	4294      	cmp	r4, r2
 8002b6c:	d002      	beq.n	8002b74 <std+0x48>
 8002b6e:	33d0      	adds	r3, #208	@ 0xd0
 8002b70:	429c      	cmp	r4, r3
 8002b72:	d105      	bne.n	8002b80 <std+0x54>
 8002b74:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002b78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002b7c:	f000 b9a0 	b.w	8002ec0 <__retarget_lock_init_recursive>
 8002b80:	bd10      	pop	{r4, pc}
 8002b82:	bf00      	nop
 8002b84:	08002d15 	.word	0x08002d15
 8002b88:	08002d37 	.word	0x08002d37
 8002b8c:	08002d6f 	.word	0x08002d6f
 8002b90:	08002d93 	.word	0x08002d93
 8002b94:	20000630 	.word	0x20000630

08002b98 <stdio_exit_handler>:
 8002b98:	4a02      	ldr	r2, [pc, #8]	@ (8002ba4 <stdio_exit_handler+0xc>)
 8002b9a:	4903      	ldr	r1, [pc, #12]	@ (8002ba8 <stdio_exit_handler+0x10>)
 8002b9c:	4803      	ldr	r0, [pc, #12]	@ (8002bac <stdio_exit_handler+0x14>)
 8002b9e:	f000 b869 	b.w	8002c74 <_fwalk_sglue>
 8002ba2:	bf00      	nop
 8002ba4:	20000024 	.word	0x20000024
 8002ba8:	08005a19 	.word	0x08005a19
 8002bac:	20000034 	.word	0x20000034

08002bb0 <cleanup_stdio>:
 8002bb0:	6841      	ldr	r1, [r0, #4]
 8002bb2:	4b0c      	ldr	r3, [pc, #48]	@ (8002be4 <cleanup_stdio+0x34>)
 8002bb4:	4299      	cmp	r1, r3
 8002bb6:	b510      	push	{r4, lr}
 8002bb8:	4604      	mov	r4, r0
 8002bba:	d001      	beq.n	8002bc0 <cleanup_stdio+0x10>
 8002bbc:	f002 ff2c 	bl	8005a18 <_fflush_r>
 8002bc0:	68a1      	ldr	r1, [r4, #8]
 8002bc2:	4b09      	ldr	r3, [pc, #36]	@ (8002be8 <cleanup_stdio+0x38>)
 8002bc4:	4299      	cmp	r1, r3
 8002bc6:	d002      	beq.n	8002bce <cleanup_stdio+0x1e>
 8002bc8:	4620      	mov	r0, r4
 8002bca:	f002 ff25 	bl	8005a18 <_fflush_r>
 8002bce:	68e1      	ldr	r1, [r4, #12]
 8002bd0:	4b06      	ldr	r3, [pc, #24]	@ (8002bec <cleanup_stdio+0x3c>)
 8002bd2:	4299      	cmp	r1, r3
 8002bd4:	d004      	beq.n	8002be0 <cleanup_stdio+0x30>
 8002bd6:	4620      	mov	r0, r4
 8002bd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002bdc:	f002 bf1c 	b.w	8005a18 <_fflush_r>
 8002be0:	bd10      	pop	{r4, pc}
 8002be2:	bf00      	nop
 8002be4:	20000630 	.word	0x20000630
 8002be8:	20000698 	.word	0x20000698
 8002bec:	20000700 	.word	0x20000700

08002bf0 <global_stdio_init.part.0>:
 8002bf0:	b510      	push	{r4, lr}
 8002bf2:	4b0b      	ldr	r3, [pc, #44]	@ (8002c20 <global_stdio_init.part.0+0x30>)
 8002bf4:	4c0b      	ldr	r4, [pc, #44]	@ (8002c24 <global_stdio_init.part.0+0x34>)
 8002bf6:	4a0c      	ldr	r2, [pc, #48]	@ (8002c28 <global_stdio_init.part.0+0x38>)
 8002bf8:	601a      	str	r2, [r3, #0]
 8002bfa:	4620      	mov	r0, r4
 8002bfc:	2200      	movs	r2, #0
 8002bfe:	2104      	movs	r1, #4
 8002c00:	f7ff ff94 	bl	8002b2c <std>
 8002c04:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8002c08:	2201      	movs	r2, #1
 8002c0a:	2109      	movs	r1, #9
 8002c0c:	f7ff ff8e 	bl	8002b2c <std>
 8002c10:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8002c14:	2202      	movs	r2, #2
 8002c16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c1a:	2112      	movs	r1, #18
 8002c1c:	f7ff bf86 	b.w	8002b2c <std>
 8002c20:	20000768 	.word	0x20000768
 8002c24:	20000630 	.word	0x20000630
 8002c28:	08002b99 	.word	0x08002b99

08002c2c <__sfp_lock_acquire>:
 8002c2c:	4801      	ldr	r0, [pc, #4]	@ (8002c34 <__sfp_lock_acquire+0x8>)
 8002c2e:	f000 b948 	b.w	8002ec2 <__retarget_lock_acquire_recursive>
 8002c32:	bf00      	nop
 8002c34:	20000771 	.word	0x20000771

08002c38 <__sfp_lock_release>:
 8002c38:	4801      	ldr	r0, [pc, #4]	@ (8002c40 <__sfp_lock_release+0x8>)
 8002c3a:	f000 b943 	b.w	8002ec4 <__retarget_lock_release_recursive>
 8002c3e:	bf00      	nop
 8002c40:	20000771 	.word	0x20000771

08002c44 <__sinit>:
 8002c44:	b510      	push	{r4, lr}
 8002c46:	4604      	mov	r4, r0
 8002c48:	f7ff fff0 	bl	8002c2c <__sfp_lock_acquire>
 8002c4c:	6a23      	ldr	r3, [r4, #32]
 8002c4e:	b11b      	cbz	r3, 8002c58 <__sinit+0x14>
 8002c50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c54:	f7ff bff0 	b.w	8002c38 <__sfp_lock_release>
 8002c58:	4b04      	ldr	r3, [pc, #16]	@ (8002c6c <__sinit+0x28>)
 8002c5a:	6223      	str	r3, [r4, #32]
 8002c5c:	4b04      	ldr	r3, [pc, #16]	@ (8002c70 <__sinit+0x2c>)
 8002c5e:	681b      	ldr	r3, [r3, #0]
 8002c60:	2b00      	cmp	r3, #0
 8002c62:	d1f5      	bne.n	8002c50 <__sinit+0xc>
 8002c64:	f7ff ffc4 	bl	8002bf0 <global_stdio_init.part.0>
 8002c68:	e7f2      	b.n	8002c50 <__sinit+0xc>
 8002c6a:	bf00      	nop
 8002c6c:	08002bb1 	.word	0x08002bb1
 8002c70:	20000768 	.word	0x20000768

08002c74 <_fwalk_sglue>:
 8002c74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002c78:	4607      	mov	r7, r0
 8002c7a:	4688      	mov	r8, r1
 8002c7c:	4614      	mov	r4, r2
 8002c7e:	2600      	movs	r6, #0
 8002c80:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002c84:	f1b9 0901 	subs.w	r9, r9, #1
 8002c88:	d505      	bpl.n	8002c96 <_fwalk_sglue+0x22>
 8002c8a:	6824      	ldr	r4, [r4, #0]
 8002c8c:	2c00      	cmp	r4, #0
 8002c8e:	d1f7      	bne.n	8002c80 <_fwalk_sglue+0xc>
 8002c90:	4630      	mov	r0, r6
 8002c92:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002c96:	89ab      	ldrh	r3, [r5, #12]
 8002c98:	2b01      	cmp	r3, #1
 8002c9a:	d907      	bls.n	8002cac <_fwalk_sglue+0x38>
 8002c9c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002ca0:	3301      	adds	r3, #1
 8002ca2:	d003      	beq.n	8002cac <_fwalk_sglue+0x38>
 8002ca4:	4629      	mov	r1, r5
 8002ca6:	4638      	mov	r0, r7
 8002ca8:	47c0      	blx	r8
 8002caa:	4306      	orrs	r6, r0
 8002cac:	3568      	adds	r5, #104	@ 0x68
 8002cae:	e7e9      	b.n	8002c84 <_fwalk_sglue+0x10>

08002cb0 <iprintf>:
 8002cb0:	b40f      	push	{r0, r1, r2, r3}
 8002cb2:	b507      	push	{r0, r1, r2, lr}
 8002cb4:	4906      	ldr	r1, [pc, #24]	@ (8002cd0 <iprintf+0x20>)
 8002cb6:	ab04      	add	r3, sp, #16
 8002cb8:	6808      	ldr	r0, [r1, #0]
 8002cba:	f853 2b04 	ldr.w	r2, [r3], #4
 8002cbe:	6881      	ldr	r1, [r0, #8]
 8002cc0:	9301      	str	r3, [sp, #4]
 8002cc2:	f002 fd0d 	bl	80056e0 <_vfiprintf_r>
 8002cc6:	b003      	add	sp, #12
 8002cc8:	f85d eb04 	ldr.w	lr, [sp], #4
 8002ccc:	b004      	add	sp, #16
 8002cce:	4770      	bx	lr
 8002cd0:	20000030 	.word	0x20000030

08002cd4 <siprintf>:
 8002cd4:	b40e      	push	{r1, r2, r3}
 8002cd6:	b500      	push	{lr}
 8002cd8:	b09c      	sub	sp, #112	@ 0x70
 8002cda:	ab1d      	add	r3, sp, #116	@ 0x74
 8002cdc:	9002      	str	r0, [sp, #8]
 8002cde:	9006      	str	r0, [sp, #24]
 8002ce0:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8002ce4:	4809      	ldr	r0, [pc, #36]	@ (8002d0c <siprintf+0x38>)
 8002ce6:	9107      	str	r1, [sp, #28]
 8002ce8:	9104      	str	r1, [sp, #16]
 8002cea:	4909      	ldr	r1, [pc, #36]	@ (8002d10 <siprintf+0x3c>)
 8002cec:	f853 2b04 	ldr.w	r2, [r3], #4
 8002cf0:	9105      	str	r1, [sp, #20]
 8002cf2:	6800      	ldr	r0, [r0, #0]
 8002cf4:	9301      	str	r3, [sp, #4]
 8002cf6:	a902      	add	r1, sp, #8
 8002cf8:	f002 fbcc 	bl	8005494 <_svfiprintf_r>
 8002cfc:	9b02      	ldr	r3, [sp, #8]
 8002cfe:	2200      	movs	r2, #0
 8002d00:	701a      	strb	r2, [r3, #0]
 8002d02:	b01c      	add	sp, #112	@ 0x70
 8002d04:	f85d eb04 	ldr.w	lr, [sp], #4
 8002d08:	b003      	add	sp, #12
 8002d0a:	4770      	bx	lr
 8002d0c:	20000030 	.word	0x20000030
 8002d10:	ffff0208 	.word	0xffff0208

08002d14 <__sread>:
 8002d14:	b510      	push	{r4, lr}
 8002d16:	460c      	mov	r4, r1
 8002d18:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002d1c:	f000 f882 	bl	8002e24 <_read_r>
 8002d20:	2800      	cmp	r0, #0
 8002d22:	bfab      	itete	ge
 8002d24:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8002d26:	89a3      	ldrhlt	r3, [r4, #12]
 8002d28:	181b      	addge	r3, r3, r0
 8002d2a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8002d2e:	bfac      	ite	ge
 8002d30:	6563      	strge	r3, [r4, #84]	@ 0x54
 8002d32:	81a3      	strhlt	r3, [r4, #12]
 8002d34:	bd10      	pop	{r4, pc}

08002d36 <__swrite>:
 8002d36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002d3a:	461f      	mov	r7, r3
 8002d3c:	898b      	ldrh	r3, [r1, #12]
 8002d3e:	05db      	lsls	r3, r3, #23
 8002d40:	4605      	mov	r5, r0
 8002d42:	460c      	mov	r4, r1
 8002d44:	4616      	mov	r6, r2
 8002d46:	d505      	bpl.n	8002d54 <__swrite+0x1e>
 8002d48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002d4c:	2302      	movs	r3, #2
 8002d4e:	2200      	movs	r2, #0
 8002d50:	f000 f856 	bl	8002e00 <_lseek_r>
 8002d54:	89a3      	ldrh	r3, [r4, #12]
 8002d56:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002d5a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8002d5e:	81a3      	strh	r3, [r4, #12]
 8002d60:	4632      	mov	r2, r6
 8002d62:	463b      	mov	r3, r7
 8002d64:	4628      	mov	r0, r5
 8002d66:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002d6a:	f000 b86d 	b.w	8002e48 <_write_r>

08002d6e <__sseek>:
 8002d6e:	b510      	push	{r4, lr}
 8002d70:	460c      	mov	r4, r1
 8002d72:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002d76:	f000 f843 	bl	8002e00 <_lseek_r>
 8002d7a:	1c43      	adds	r3, r0, #1
 8002d7c:	89a3      	ldrh	r3, [r4, #12]
 8002d7e:	bf15      	itete	ne
 8002d80:	6560      	strne	r0, [r4, #84]	@ 0x54
 8002d82:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8002d86:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8002d8a:	81a3      	strheq	r3, [r4, #12]
 8002d8c:	bf18      	it	ne
 8002d8e:	81a3      	strhne	r3, [r4, #12]
 8002d90:	bd10      	pop	{r4, pc}

08002d92 <__sclose>:
 8002d92:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002d96:	f000 b823 	b.w	8002de0 <_close_r>

08002d9a <memset>:
 8002d9a:	4402      	add	r2, r0
 8002d9c:	4603      	mov	r3, r0
 8002d9e:	4293      	cmp	r3, r2
 8002da0:	d100      	bne.n	8002da4 <memset+0xa>
 8002da2:	4770      	bx	lr
 8002da4:	f803 1b01 	strb.w	r1, [r3], #1
 8002da8:	e7f9      	b.n	8002d9e <memset+0x4>

08002daa <strstr>:
 8002daa:	780a      	ldrb	r2, [r1, #0]
 8002dac:	b570      	push	{r4, r5, r6, lr}
 8002dae:	b96a      	cbnz	r2, 8002dcc <strstr+0x22>
 8002db0:	bd70      	pop	{r4, r5, r6, pc}
 8002db2:	429a      	cmp	r2, r3
 8002db4:	d109      	bne.n	8002dca <strstr+0x20>
 8002db6:	460c      	mov	r4, r1
 8002db8:	4605      	mov	r5, r0
 8002dba:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8002dbe:	2b00      	cmp	r3, #0
 8002dc0:	d0f6      	beq.n	8002db0 <strstr+0x6>
 8002dc2:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 8002dc6:	429e      	cmp	r6, r3
 8002dc8:	d0f7      	beq.n	8002dba <strstr+0x10>
 8002dca:	3001      	adds	r0, #1
 8002dcc:	7803      	ldrb	r3, [r0, #0]
 8002dce:	2b00      	cmp	r3, #0
 8002dd0:	d1ef      	bne.n	8002db2 <strstr+0x8>
 8002dd2:	4618      	mov	r0, r3
 8002dd4:	e7ec      	b.n	8002db0 <strstr+0x6>
	...

08002dd8 <_localeconv_r>:
 8002dd8:	4800      	ldr	r0, [pc, #0]	@ (8002ddc <_localeconv_r+0x4>)
 8002dda:	4770      	bx	lr
 8002ddc:	20000170 	.word	0x20000170

08002de0 <_close_r>:
 8002de0:	b538      	push	{r3, r4, r5, lr}
 8002de2:	4d06      	ldr	r5, [pc, #24]	@ (8002dfc <_close_r+0x1c>)
 8002de4:	2300      	movs	r3, #0
 8002de6:	4604      	mov	r4, r0
 8002de8:	4608      	mov	r0, r1
 8002dea:	602b      	str	r3, [r5, #0]
 8002dec:	f7fe ffa0 	bl	8001d30 <_close>
 8002df0:	1c43      	adds	r3, r0, #1
 8002df2:	d102      	bne.n	8002dfa <_close_r+0x1a>
 8002df4:	682b      	ldr	r3, [r5, #0]
 8002df6:	b103      	cbz	r3, 8002dfa <_close_r+0x1a>
 8002df8:	6023      	str	r3, [r4, #0]
 8002dfa:	bd38      	pop	{r3, r4, r5, pc}
 8002dfc:	2000076c 	.word	0x2000076c

08002e00 <_lseek_r>:
 8002e00:	b538      	push	{r3, r4, r5, lr}
 8002e02:	4d07      	ldr	r5, [pc, #28]	@ (8002e20 <_lseek_r+0x20>)
 8002e04:	4604      	mov	r4, r0
 8002e06:	4608      	mov	r0, r1
 8002e08:	4611      	mov	r1, r2
 8002e0a:	2200      	movs	r2, #0
 8002e0c:	602a      	str	r2, [r5, #0]
 8002e0e:	461a      	mov	r2, r3
 8002e10:	f7fe ffb5 	bl	8001d7e <_lseek>
 8002e14:	1c43      	adds	r3, r0, #1
 8002e16:	d102      	bne.n	8002e1e <_lseek_r+0x1e>
 8002e18:	682b      	ldr	r3, [r5, #0]
 8002e1a:	b103      	cbz	r3, 8002e1e <_lseek_r+0x1e>
 8002e1c:	6023      	str	r3, [r4, #0]
 8002e1e:	bd38      	pop	{r3, r4, r5, pc}
 8002e20:	2000076c 	.word	0x2000076c

08002e24 <_read_r>:
 8002e24:	b538      	push	{r3, r4, r5, lr}
 8002e26:	4d07      	ldr	r5, [pc, #28]	@ (8002e44 <_read_r+0x20>)
 8002e28:	4604      	mov	r4, r0
 8002e2a:	4608      	mov	r0, r1
 8002e2c:	4611      	mov	r1, r2
 8002e2e:	2200      	movs	r2, #0
 8002e30:	602a      	str	r2, [r5, #0]
 8002e32:	461a      	mov	r2, r3
 8002e34:	f7fe ff43 	bl	8001cbe <_read>
 8002e38:	1c43      	adds	r3, r0, #1
 8002e3a:	d102      	bne.n	8002e42 <_read_r+0x1e>
 8002e3c:	682b      	ldr	r3, [r5, #0]
 8002e3e:	b103      	cbz	r3, 8002e42 <_read_r+0x1e>
 8002e40:	6023      	str	r3, [r4, #0]
 8002e42:	bd38      	pop	{r3, r4, r5, pc}
 8002e44:	2000076c 	.word	0x2000076c

08002e48 <_write_r>:
 8002e48:	b538      	push	{r3, r4, r5, lr}
 8002e4a:	4d07      	ldr	r5, [pc, #28]	@ (8002e68 <_write_r+0x20>)
 8002e4c:	4604      	mov	r4, r0
 8002e4e:	4608      	mov	r0, r1
 8002e50:	4611      	mov	r1, r2
 8002e52:	2200      	movs	r2, #0
 8002e54:	602a      	str	r2, [r5, #0]
 8002e56:	461a      	mov	r2, r3
 8002e58:	f7fe ff4e 	bl	8001cf8 <_write>
 8002e5c:	1c43      	adds	r3, r0, #1
 8002e5e:	d102      	bne.n	8002e66 <_write_r+0x1e>
 8002e60:	682b      	ldr	r3, [r5, #0]
 8002e62:	b103      	cbz	r3, 8002e66 <_write_r+0x1e>
 8002e64:	6023      	str	r3, [r4, #0]
 8002e66:	bd38      	pop	{r3, r4, r5, pc}
 8002e68:	2000076c 	.word	0x2000076c

08002e6c <__errno>:
 8002e6c:	4b01      	ldr	r3, [pc, #4]	@ (8002e74 <__errno+0x8>)
 8002e6e:	6818      	ldr	r0, [r3, #0]
 8002e70:	4770      	bx	lr
 8002e72:	bf00      	nop
 8002e74:	20000030 	.word	0x20000030

08002e78 <__libc_init_array>:
 8002e78:	b570      	push	{r4, r5, r6, lr}
 8002e7a:	4d0d      	ldr	r5, [pc, #52]	@ (8002eb0 <__libc_init_array+0x38>)
 8002e7c:	4c0d      	ldr	r4, [pc, #52]	@ (8002eb4 <__libc_init_array+0x3c>)
 8002e7e:	1b64      	subs	r4, r4, r5
 8002e80:	10a4      	asrs	r4, r4, #2
 8002e82:	2600      	movs	r6, #0
 8002e84:	42a6      	cmp	r6, r4
 8002e86:	d109      	bne.n	8002e9c <__libc_init_array+0x24>
 8002e88:	4d0b      	ldr	r5, [pc, #44]	@ (8002eb8 <__libc_init_array+0x40>)
 8002e8a:	4c0c      	ldr	r4, [pc, #48]	@ (8002ebc <__libc_init_array+0x44>)
 8002e8c:	f003 fb76 	bl	800657c <_init>
 8002e90:	1b64      	subs	r4, r4, r5
 8002e92:	10a4      	asrs	r4, r4, #2
 8002e94:	2600      	movs	r6, #0
 8002e96:	42a6      	cmp	r6, r4
 8002e98:	d105      	bne.n	8002ea6 <__libc_init_array+0x2e>
 8002e9a:	bd70      	pop	{r4, r5, r6, pc}
 8002e9c:	f855 3b04 	ldr.w	r3, [r5], #4
 8002ea0:	4798      	blx	r3
 8002ea2:	3601      	adds	r6, #1
 8002ea4:	e7ee      	b.n	8002e84 <__libc_init_array+0xc>
 8002ea6:	f855 3b04 	ldr.w	r3, [r5], #4
 8002eaa:	4798      	blx	r3
 8002eac:	3601      	adds	r6, #1
 8002eae:	e7f2      	b.n	8002e96 <__libc_init_array+0x1e>
 8002eb0:	08006a50 	.word	0x08006a50
 8002eb4:	08006a50 	.word	0x08006a50
 8002eb8:	08006a50 	.word	0x08006a50
 8002ebc:	08006a54 	.word	0x08006a54

08002ec0 <__retarget_lock_init_recursive>:
 8002ec0:	4770      	bx	lr

08002ec2 <__retarget_lock_acquire_recursive>:
 8002ec2:	4770      	bx	lr

08002ec4 <__retarget_lock_release_recursive>:
 8002ec4:	4770      	bx	lr
	...

08002ec8 <nanf>:
 8002ec8:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002ed0 <nanf+0x8>
 8002ecc:	4770      	bx	lr
 8002ece:	bf00      	nop
 8002ed0:	7fc00000 	.word	0x7fc00000

08002ed4 <quorem>:
 8002ed4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ed8:	6903      	ldr	r3, [r0, #16]
 8002eda:	690c      	ldr	r4, [r1, #16]
 8002edc:	42a3      	cmp	r3, r4
 8002ede:	4607      	mov	r7, r0
 8002ee0:	db7e      	blt.n	8002fe0 <quorem+0x10c>
 8002ee2:	3c01      	subs	r4, #1
 8002ee4:	f101 0814 	add.w	r8, r1, #20
 8002ee8:	00a3      	lsls	r3, r4, #2
 8002eea:	f100 0514 	add.w	r5, r0, #20
 8002eee:	9300      	str	r3, [sp, #0]
 8002ef0:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002ef4:	9301      	str	r3, [sp, #4]
 8002ef6:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002efa:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002efe:	3301      	adds	r3, #1
 8002f00:	429a      	cmp	r2, r3
 8002f02:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002f06:	fbb2 f6f3 	udiv	r6, r2, r3
 8002f0a:	d32e      	bcc.n	8002f6a <quorem+0x96>
 8002f0c:	f04f 0a00 	mov.w	sl, #0
 8002f10:	46c4      	mov	ip, r8
 8002f12:	46ae      	mov	lr, r5
 8002f14:	46d3      	mov	fp, sl
 8002f16:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002f1a:	b298      	uxth	r0, r3
 8002f1c:	fb06 a000 	mla	r0, r6, r0, sl
 8002f20:	0c02      	lsrs	r2, r0, #16
 8002f22:	0c1b      	lsrs	r3, r3, #16
 8002f24:	fb06 2303 	mla	r3, r6, r3, r2
 8002f28:	f8de 2000 	ldr.w	r2, [lr]
 8002f2c:	b280      	uxth	r0, r0
 8002f2e:	b292      	uxth	r2, r2
 8002f30:	1a12      	subs	r2, r2, r0
 8002f32:	445a      	add	r2, fp
 8002f34:	f8de 0000 	ldr.w	r0, [lr]
 8002f38:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8002f3c:	b29b      	uxth	r3, r3
 8002f3e:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002f42:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8002f46:	b292      	uxth	r2, r2
 8002f48:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8002f4c:	45e1      	cmp	r9, ip
 8002f4e:	f84e 2b04 	str.w	r2, [lr], #4
 8002f52:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8002f56:	d2de      	bcs.n	8002f16 <quorem+0x42>
 8002f58:	9b00      	ldr	r3, [sp, #0]
 8002f5a:	58eb      	ldr	r3, [r5, r3]
 8002f5c:	b92b      	cbnz	r3, 8002f6a <quorem+0x96>
 8002f5e:	9b01      	ldr	r3, [sp, #4]
 8002f60:	3b04      	subs	r3, #4
 8002f62:	429d      	cmp	r5, r3
 8002f64:	461a      	mov	r2, r3
 8002f66:	d32f      	bcc.n	8002fc8 <quorem+0xf4>
 8002f68:	613c      	str	r4, [r7, #16]
 8002f6a:	4638      	mov	r0, r7
 8002f6c:	f001 f9c4 	bl	80042f8 <__mcmp>
 8002f70:	2800      	cmp	r0, #0
 8002f72:	db25      	blt.n	8002fc0 <quorem+0xec>
 8002f74:	4629      	mov	r1, r5
 8002f76:	2000      	movs	r0, #0
 8002f78:	f858 2b04 	ldr.w	r2, [r8], #4
 8002f7c:	f8d1 c000 	ldr.w	ip, [r1]
 8002f80:	fa1f fe82 	uxth.w	lr, r2
 8002f84:	fa1f f38c 	uxth.w	r3, ip
 8002f88:	eba3 030e 	sub.w	r3, r3, lr
 8002f8c:	4403      	add	r3, r0
 8002f8e:	0c12      	lsrs	r2, r2, #16
 8002f90:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8002f94:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8002f98:	b29b      	uxth	r3, r3
 8002f9a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002f9e:	45c1      	cmp	r9, r8
 8002fa0:	f841 3b04 	str.w	r3, [r1], #4
 8002fa4:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002fa8:	d2e6      	bcs.n	8002f78 <quorem+0xa4>
 8002faa:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002fae:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002fb2:	b922      	cbnz	r2, 8002fbe <quorem+0xea>
 8002fb4:	3b04      	subs	r3, #4
 8002fb6:	429d      	cmp	r5, r3
 8002fb8:	461a      	mov	r2, r3
 8002fba:	d30b      	bcc.n	8002fd4 <quorem+0x100>
 8002fbc:	613c      	str	r4, [r7, #16]
 8002fbe:	3601      	adds	r6, #1
 8002fc0:	4630      	mov	r0, r6
 8002fc2:	b003      	add	sp, #12
 8002fc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002fc8:	6812      	ldr	r2, [r2, #0]
 8002fca:	3b04      	subs	r3, #4
 8002fcc:	2a00      	cmp	r2, #0
 8002fce:	d1cb      	bne.n	8002f68 <quorem+0x94>
 8002fd0:	3c01      	subs	r4, #1
 8002fd2:	e7c6      	b.n	8002f62 <quorem+0x8e>
 8002fd4:	6812      	ldr	r2, [r2, #0]
 8002fd6:	3b04      	subs	r3, #4
 8002fd8:	2a00      	cmp	r2, #0
 8002fda:	d1ef      	bne.n	8002fbc <quorem+0xe8>
 8002fdc:	3c01      	subs	r4, #1
 8002fde:	e7ea      	b.n	8002fb6 <quorem+0xe2>
 8002fe0:	2000      	movs	r0, #0
 8002fe2:	e7ee      	b.n	8002fc2 <quorem+0xee>
 8002fe4:	0000      	movs	r0, r0
	...

08002fe8 <_dtoa_r>:
 8002fe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002fec:	69c7      	ldr	r7, [r0, #28]
 8002fee:	b099      	sub	sp, #100	@ 0x64
 8002ff0:	ed8d 0b02 	vstr	d0, [sp, #8]
 8002ff4:	ec55 4b10 	vmov	r4, r5, d0
 8002ff8:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8002ffa:	9109      	str	r1, [sp, #36]	@ 0x24
 8002ffc:	4683      	mov	fp, r0
 8002ffe:	920e      	str	r2, [sp, #56]	@ 0x38
 8003000:	9313      	str	r3, [sp, #76]	@ 0x4c
 8003002:	b97f      	cbnz	r7, 8003024 <_dtoa_r+0x3c>
 8003004:	2010      	movs	r0, #16
 8003006:	f000 fdfd 	bl	8003c04 <malloc>
 800300a:	4602      	mov	r2, r0
 800300c:	f8cb 001c 	str.w	r0, [fp, #28]
 8003010:	b920      	cbnz	r0, 800301c <_dtoa_r+0x34>
 8003012:	4ba7      	ldr	r3, [pc, #668]	@ (80032b0 <_dtoa_r+0x2c8>)
 8003014:	21ef      	movs	r1, #239	@ 0xef
 8003016:	48a7      	ldr	r0, [pc, #668]	@ (80032b4 <_dtoa_r+0x2cc>)
 8003018:	f002 fe0e 	bl	8005c38 <__assert_func>
 800301c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8003020:	6007      	str	r7, [r0, #0]
 8003022:	60c7      	str	r7, [r0, #12]
 8003024:	f8db 301c 	ldr.w	r3, [fp, #28]
 8003028:	6819      	ldr	r1, [r3, #0]
 800302a:	b159      	cbz	r1, 8003044 <_dtoa_r+0x5c>
 800302c:	685a      	ldr	r2, [r3, #4]
 800302e:	604a      	str	r2, [r1, #4]
 8003030:	2301      	movs	r3, #1
 8003032:	4093      	lsls	r3, r2
 8003034:	608b      	str	r3, [r1, #8]
 8003036:	4658      	mov	r0, fp
 8003038:	f000 feda 	bl	8003df0 <_Bfree>
 800303c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8003040:	2200      	movs	r2, #0
 8003042:	601a      	str	r2, [r3, #0]
 8003044:	1e2b      	subs	r3, r5, #0
 8003046:	bfb9      	ittee	lt
 8003048:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800304c:	9303      	strlt	r3, [sp, #12]
 800304e:	2300      	movge	r3, #0
 8003050:	6033      	strge	r3, [r6, #0]
 8003052:	9f03      	ldr	r7, [sp, #12]
 8003054:	4b98      	ldr	r3, [pc, #608]	@ (80032b8 <_dtoa_r+0x2d0>)
 8003056:	bfbc      	itt	lt
 8003058:	2201      	movlt	r2, #1
 800305a:	6032      	strlt	r2, [r6, #0]
 800305c:	43bb      	bics	r3, r7
 800305e:	d112      	bne.n	8003086 <_dtoa_r+0x9e>
 8003060:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8003062:	f242 730f 	movw	r3, #9999	@ 0x270f
 8003066:	6013      	str	r3, [r2, #0]
 8003068:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800306c:	4323      	orrs	r3, r4
 800306e:	f000 854d 	beq.w	8003b0c <_dtoa_r+0xb24>
 8003072:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8003074:	f8df a254 	ldr.w	sl, [pc, #596]	@ 80032cc <_dtoa_r+0x2e4>
 8003078:	2b00      	cmp	r3, #0
 800307a:	f000 854f 	beq.w	8003b1c <_dtoa_r+0xb34>
 800307e:	f10a 0303 	add.w	r3, sl, #3
 8003082:	f000 bd49 	b.w	8003b18 <_dtoa_r+0xb30>
 8003086:	ed9d 7b02 	vldr	d7, [sp, #8]
 800308a:	2200      	movs	r2, #0
 800308c:	ec51 0b17 	vmov	r0, r1, d7
 8003090:	2300      	movs	r3, #0
 8003092:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 8003096:	f7fd fd37 	bl	8000b08 <__aeabi_dcmpeq>
 800309a:	4680      	mov	r8, r0
 800309c:	b158      	cbz	r0, 80030b6 <_dtoa_r+0xce>
 800309e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80030a0:	2301      	movs	r3, #1
 80030a2:	6013      	str	r3, [r2, #0]
 80030a4:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80030a6:	b113      	cbz	r3, 80030ae <_dtoa_r+0xc6>
 80030a8:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80030aa:	4b84      	ldr	r3, [pc, #528]	@ (80032bc <_dtoa_r+0x2d4>)
 80030ac:	6013      	str	r3, [r2, #0]
 80030ae:	f8df a220 	ldr.w	sl, [pc, #544]	@ 80032d0 <_dtoa_r+0x2e8>
 80030b2:	f000 bd33 	b.w	8003b1c <_dtoa_r+0xb34>
 80030b6:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 80030ba:	aa16      	add	r2, sp, #88	@ 0x58
 80030bc:	a917      	add	r1, sp, #92	@ 0x5c
 80030be:	4658      	mov	r0, fp
 80030c0:	f001 fa3a 	bl	8004538 <__d2b>
 80030c4:	f3c7 560a 	ubfx	r6, r7, #20, #11
 80030c8:	4681      	mov	r9, r0
 80030ca:	2e00      	cmp	r6, #0
 80030cc:	d077      	beq.n	80031be <_dtoa_r+0x1d6>
 80030ce:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80030d0:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 80030d4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80030d8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80030dc:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 80030e0:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 80030e4:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 80030e8:	4619      	mov	r1, r3
 80030ea:	2200      	movs	r2, #0
 80030ec:	4b74      	ldr	r3, [pc, #464]	@ (80032c0 <_dtoa_r+0x2d8>)
 80030ee:	f7fd f8eb 	bl	80002c8 <__aeabi_dsub>
 80030f2:	a369      	add	r3, pc, #420	@ (adr r3, 8003298 <_dtoa_r+0x2b0>)
 80030f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80030f8:	f7fd fa9e 	bl	8000638 <__aeabi_dmul>
 80030fc:	a368      	add	r3, pc, #416	@ (adr r3, 80032a0 <_dtoa_r+0x2b8>)
 80030fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003102:	f7fd f8e3 	bl	80002cc <__adddf3>
 8003106:	4604      	mov	r4, r0
 8003108:	4630      	mov	r0, r6
 800310a:	460d      	mov	r5, r1
 800310c:	f7fd fa2a 	bl	8000564 <__aeabi_i2d>
 8003110:	a365      	add	r3, pc, #404	@ (adr r3, 80032a8 <_dtoa_r+0x2c0>)
 8003112:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003116:	f7fd fa8f 	bl	8000638 <__aeabi_dmul>
 800311a:	4602      	mov	r2, r0
 800311c:	460b      	mov	r3, r1
 800311e:	4620      	mov	r0, r4
 8003120:	4629      	mov	r1, r5
 8003122:	f7fd f8d3 	bl	80002cc <__adddf3>
 8003126:	4604      	mov	r4, r0
 8003128:	460d      	mov	r5, r1
 800312a:	f7fd fd35 	bl	8000b98 <__aeabi_d2iz>
 800312e:	2200      	movs	r2, #0
 8003130:	4607      	mov	r7, r0
 8003132:	2300      	movs	r3, #0
 8003134:	4620      	mov	r0, r4
 8003136:	4629      	mov	r1, r5
 8003138:	f7fd fcf0 	bl	8000b1c <__aeabi_dcmplt>
 800313c:	b140      	cbz	r0, 8003150 <_dtoa_r+0x168>
 800313e:	4638      	mov	r0, r7
 8003140:	f7fd fa10 	bl	8000564 <__aeabi_i2d>
 8003144:	4622      	mov	r2, r4
 8003146:	462b      	mov	r3, r5
 8003148:	f7fd fcde 	bl	8000b08 <__aeabi_dcmpeq>
 800314c:	b900      	cbnz	r0, 8003150 <_dtoa_r+0x168>
 800314e:	3f01      	subs	r7, #1
 8003150:	2f16      	cmp	r7, #22
 8003152:	d851      	bhi.n	80031f8 <_dtoa_r+0x210>
 8003154:	4b5b      	ldr	r3, [pc, #364]	@ (80032c4 <_dtoa_r+0x2dc>)
 8003156:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800315a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800315e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003162:	f7fd fcdb 	bl	8000b1c <__aeabi_dcmplt>
 8003166:	2800      	cmp	r0, #0
 8003168:	d048      	beq.n	80031fc <_dtoa_r+0x214>
 800316a:	3f01      	subs	r7, #1
 800316c:	2300      	movs	r3, #0
 800316e:	9312      	str	r3, [sp, #72]	@ 0x48
 8003170:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8003172:	1b9b      	subs	r3, r3, r6
 8003174:	1e5a      	subs	r2, r3, #1
 8003176:	bf44      	itt	mi
 8003178:	f1c3 0801 	rsbmi	r8, r3, #1
 800317c:	2300      	movmi	r3, #0
 800317e:	9208      	str	r2, [sp, #32]
 8003180:	bf54      	ite	pl
 8003182:	f04f 0800 	movpl.w	r8, #0
 8003186:	9308      	strmi	r3, [sp, #32]
 8003188:	2f00      	cmp	r7, #0
 800318a:	db39      	blt.n	8003200 <_dtoa_r+0x218>
 800318c:	9b08      	ldr	r3, [sp, #32]
 800318e:	970f      	str	r7, [sp, #60]	@ 0x3c
 8003190:	443b      	add	r3, r7
 8003192:	9308      	str	r3, [sp, #32]
 8003194:	2300      	movs	r3, #0
 8003196:	930a      	str	r3, [sp, #40]	@ 0x28
 8003198:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800319a:	2b09      	cmp	r3, #9
 800319c:	d864      	bhi.n	8003268 <_dtoa_r+0x280>
 800319e:	2b05      	cmp	r3, #5
 80031a0:	bfc4      	itt	gt
 80031a2:	3b04      	subgt	r3, #4
 80031a4:	9309      	strgt	r3, [sp, #36]	@ 0x24
 80031a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80031a8:	f1a3 0302 	sub.w	r3, r3, #2
 80031ac:	bfcc      	ite	gt
 80031ae:	2400      	movgt	r4, #0
 80031b0:	2401      	movle	r4, #1
 80031b2:	2b03      	cmp	r3, #3
 80031b4:	d863      	bhi.n	800327e <_dtoa_r+0x296>
 80031b6:	e8df f003 	tbb	[pc, r3]
 80031ba:	372a      	.short	0x372a
 80031bc:	5535      	.short	0x5535
 80031be:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 80031c2:	441e      	add	r6, r3
 80031c4:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 80031c8:	2b20      	cmp	r3, #32
 80031ca:	bfc1      	itttt	gt
 80031cc:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 80031d0:	409f      	lslgt	r7, r3
 80031d2:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 80031d6:	fa24 f303 	lsrgt.w	r3, r4, r3
 80031da:	bfd6      	itet	le
 80031dc:	f1c3 0320 	rsble	r3, r3, #32
 80031e0:	ea47 0003 	orrgt.w	r0, r7, r3
 80031e4:	fa04 f003 	lslle.w	r0, r4, r3
 80031e8:	f7fd f9ac 	bl	8000544 <__aeabi_ui2d>
 80031ec:	2201      	movs	r2, #1
 80031ee:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 80031f2:	3e01      	subs	r6, #1
 80031f4:	9214      	str	r2, [sp, #80]	@ 0x50
 80031f6:	e777      	b.n	80030e8 <_dtoa_r+0x100>
 80031f8:	2301      	movs	r3, #1
 80031fa:	e7b8      	b.n	800316e <_dtoa_r+0x186>
 80031fc:	9012      	str	r0, [sp, #72]	@ 0x48
 80031fe:	e7b7      	b.n	8003170 <_dtoa_r+0x188>
 8003200:	427b      	negs	r3, r7
 8003202:	930a      	str	r3, [sp, #40]	@ 0x28
 8003204:	2300      	movs	r3, #0
 8003206:	eba8 0807 	sub.w	r8, r8, r7
 800320a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800320c:	e7c4      	b.n	8003198 <_dtoa_r+0x1b0>
 800320e:	2300      	movs	r3, #0
 8003210:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003212:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003214:	2b00      	cmp	r3, #0
 8003216:	dc35      	bgt.n	8003284 <_dtoa_r+0x29c>
 8003218:	2301      	movs	r3, #1
 800321a:	9300      	str	r3, [sp, #0]
 800321c:	9307      	str	r3, [sp, #28]
 800321e:	461a      	mov	r2, r3
 8003220:	920e      	str	r2, [sp, #56]	@ 0x38
 8003222:	e00b      	b.n	800323c <_dtoa_r+0x254>
 8003224:	2301      	movs	r3, #1
 8003226:	e7f3      	b.n	8003210 <_dtoa_r+0x228>
 8003228:	2300      	movs	r3, #0
 800322a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800322c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800322e:	18fb      	adds	r3, r7, r3
 8003230:	9300      	str	r3, [sp, #0]
 8003232:	3301      	adds	r3, #1
 8003234:	2b01      	cmp	r3, #1
 8003236:	9307      	str	r3, [sp, #28]
 8003238:	bfb8      	it	lt
 800323a:	2301      	movlt	r3, #1
 800323c:	f8db 001c 	ldr.w	r0, [fp, #28]
 8003240:	2100      	movs	r1, #0
 8003242:	2204      	movs	r2, #4
 8003244:	f102 0514 	add.w	r5, r2, #20
 8003248:	429d      	cmp	r5, r3
 800324a:	d91f      	bls.n	800328c <_dtoa_r+0x2a4>
 800324c:	6041      	str	r1, [r0, #4]
 800324e:	4658      	mov	r0, fp
 8003250:	f000 fd8e 	bl	8003d70 <_Balloc>
 8003254:	4682      	mov	sl, r0
 8003256:	2800      	cmp	r0, #0
 8003258:	d13c      	bne.n	80032d4 <_dtoa_r+0x2ec>
 800325a:	4b1b      	ldr	r3, [pc, #108]	@ (80032c8 <_dtoa_r+0x2e0>)
 800325c:	4602      	mov	r2, r0
 800325e:	f240 11af 	movw	r1, #431	@ 0x1af
 8003262:	e6d8      	b.n	8003016 <_dtoa_r+0x2e>
 8003264:	2301      	movs	r3, #1
 8003266:	e7e0      	b.n	800322a <_dtoa_r+0x242>
 8003268:	2401      	movs	r4, #1
 800326a:	2300      	movs	r3, #0
 800326c:	9309      	str	r3, [sp, #36]	@ 0x24
 800326e:	940b      	str	r4, [sp, #44]	@ 0x2c
 8003270:	f04f 33ff 	mov.w	r3, #4294967295
 8003274:	9300      	str	r3, [sp, #0]
 8003276:	9307      	str	r3, [sp, #28]
 8003278:	2200      	movs	r2, #0
 800327a:	2312      	movs	r3, #18
 800327c:	e7d0      	b.n	8003220 <_dtoa_r+0x238>
 800327e:	2301      	movs	r3, #1
 8003280:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003282:	e7f5      	b.n	8003270 <_dtoa_r+0x288>
 8003284:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003286:	9300      	str	r3, [sp, #0]
 8003288:	9307      	str	r3, [sp, #28]
 800328a:	e7d7      	b.n	800323c <_dtoa_r+0x254>
 800328c:	3101      	adds	r1, #1
 800328e:	0052      	lsls	r2, r2, #1
 8003290:	e7d8      	b.n	8003244 <_dtoa_r+0x25c>
 8003292:	bf00      	nop
 8003294:	f3af 8000 	nop.w
 8003298:	636f4361 	.word	0x636f4361
 800329c:	3fd287a7 	.word	0x3fd287a7
 80032a0:	8b60c8b3 	.word	0x8b60c8b3
 80032a4:	3fc68a28 	.word	0x3fc68a28
 80032a8:	509f79fb 	.word	0x509f79fb
 80032ac:	3fd34413 	.word	0x3fd34413
 80032b0:	08006761 	.word	0x08006761
 80032b4:	08006778 	.word	0x08006778
 80032b8:	7ff00000 	.word	0x7ff00000
 80032bc:	0800672c 	.word	0x0800672c
 80032c0:	3ff80000 	.word	0x3ff80000
 80032c4:	08006870 	.word	0x08006870
 80032c8:	080067d0 	.word	0x080067d0
 80032cc:	0800675d 	.word	0x0800675d
 80032d0:	0800672b 	.word	0x0800672b
 80032d4:	f8db 301c 	ldr.w	r3, [fp, #28]
 80032d8:	6018      	str	r0, [r3, #0]
 80032da:	9b07      	ldr	r3, [sp, #28]
 80032dc:	2b0e      	cmp	r3, #14
 80032de:	f200 80a4 	bhi.w	800342a <_dtoa_r+0x442>
 80032e2:	2c00      	cmp	r4, #0
 80032e4:	f000 80a1 	beq.w	800342a <_dtoa_r+0x442>
 80032e8:	2f00      	cmp	r7, #0
 80032ea:	dd33      	ble.n	8003354 <_dtoa_r+0x36c>
 80032ec:	4bad      	ldr	r3, [pc, #692]	@ (80035a4 <_dtoa_r+0x5bc>)
 80032ee:	f007 020f 	and.w	r2, r7, #15
 80032f2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80032f6:	ed93 7b00 	vldr	d7, [r3]
 80032fa:	05f8      	lsls	r0, r7, #23
 80032fc:	ed8d 7b04 	vstr	d7, [sp, #16]
 8003300:	ea4f 1427 	mov.w	r4, r7, asr #4
 8003304:	d516      	bpl.n	8003334 <_dtoa_r+0x34c>
 8003306:	4ba8      	ldr	r3, [pc, #672]	@ (80035a8 <_dtoa_r+0x5c0>)
 8003308:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800330c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003310:	f7fd fabc 	bl	800088c <__aeabi_ddiv>
 8003314:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003318:	f004 040f 	and.w	r4, r4, #15
 800331c:	2603      	movs	r6, #3
 800331e:	4da2      	ldr	r5, [pc, #648]	@ (80035a8 <_dtoa_r+0x5c0>)
 8003320:	b954      	cbnz	r4, 8003338 <_dtoa_r+0x350>
 8003322:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003326:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800332a:	f7fd faaf 	bl	800088c <__aeabi_ddiv>
 800332e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003332:	e028      	b.n	8003386 <_dtoa_r+0x39e>
 8003334:	2602      	movs	r6, #2
 8003336:	e7f2      	b.n	800331e <_dtoa_r+0x336>
 8003338:	07e1      	lsls	r1, r4, #31
 800333a:	d508      	bpl.n	800334e <_dtoa_r+0x366>
 800333c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003340:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003344:	f7fd f978 	bl	8000638 <__aeabi_dmul>
 8003348:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800334c:	3601      	adds	r6, #1
 800334e:	1064      	asrs	r4, r4, #1
 8003350:	3508      	adds	r5, #8
 8003352:	e7e5      	b.n	8003320 <_dtoa_r+0x338>
 8003354:	f000 80d2 	beq.w	80034fc <_dtoa_r+0x514>
 8003358:	427c      	negs	r4, r7
 800335a:	4b92      	ldr	r3, [pc, #584]	@ (80035a4 <_dtoa_r+0x5bc>)
 800335c:	4d92      	ldr	r5, [pc, #584]	@ (80035a8 <_dtoa_r+0x5c0>)
 800335e:	f004 020f 	and.w	r2, r4, #15
 8003362:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003366:	e9d3 2300 	ldrd	r2, r3, [r3]
 800336a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800336e:	f7fd f963 	bl	8000638 <__aeabi_dmul>
 8003372:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003376:	1124      	asrs	r4, r4, #4
 8003378:	2300      	movs	r3, #0
 800337a:	2602      	movs	r6, #2
 800337c:	2c00      	cmp	r4, #0
 800337e:	f040 80b2 	bne.w	80034e6 <_dtoa_r+0x4fe>
 8003382:	2b00      	cmp	r3, #0
 8003384:	d1d3      	bne.n	800332e <_dtoa_r+0x346>
 8003386:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8003388:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 800338c:	2b00      	cmp	r3, #0
 800338e:	f000 80b7 	beq.w	8003500 <_dtoa_r+0x518>
 8003392:	4b86      	ldr	r3, [pc, #536]	@ (80035ac <_dtoa_r+0x5c4>)
 8003394:	2200      	movs	r2, #0
 8003396:	4620      	mov	r0, r4
 8003398:	4629      	mov	r1, r5
 800339a:	f7fd fbbf 	bl	8000b1c <__aeabi_dcmplt>
 800339e:	2800      	cmp	r0, #0
 80033a0:	f000 80ae 	beq.w	8003500 <_dtoa_r+0x518>
 80033a4:	9b07      	ldr	r3, [sp, #28]
 80033a6:	2b00      	cmp	r3, #0
 80033a8:	f000 80aa 	beq.w	8003500 <_dtoa_r+0x518>
 80033ac:	9b00      	ldr	r3, [sp, #0]
 80033ae:	2b00      	cmp	r3, #0
 80033b0:	dd37      	ble.n	8003422 <_dtoa_r+0x43a>
 80033b2:	1e7b      	subs	r3, r7, #1
 80033b4:	9304      	str	r3, [sp, #16]
 80033b6:	4620      	mov	r0, r4
 80033b8:	4b7d      	ldr	r3, [pc, #500]	@ (80035b0 <_dtoa_r+0x5c8>)
 80033ba:	2200      	movs	r2, #0
 80033bc:	4629      	mov	r1, r5
 80033be:	f7fd f93b 	bl	8000638 <__aeabi_dmul>
 80033c2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80033c6:	9c00      	ldr	r4, [sp, #0]
 80033c8:	3601      	adds	r6, #1
 80033ca:	4630      	mov	r0, r6
 80033cc:	f7fd f8ca 	bl	8000564 <__aeabi_i2d>
 80033d0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80033d4:	f7fd f930 	bl	8000638 <__aeabi_dmul>
 80033d8:	4b76      	ldr	r3, [pc, #472]	@ (80035b4 <_dtoa_r+0x5cc>)
 80033da:	2200      	movs	r2, #0
 80033dc:	f7fc ff76 	bl	80002cc <__adddf3>
 80033e0:	4605      	mov	r5, r0
 80033e2:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 80033e6:	2c00      	cmp	r4, #0
 80033e8:	f040 808d 	bne.w	8003506 <_dtoa_r+0x51e>
 80033ec:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80033f0:	4b71      	ldr	r3, [pc, #452]	@ (80035b8 <_dtoa_r+0x5d0>)
 80033f2:	2200      	movs	r2, #0
 80033f4:	f7fc ff68 	bl	80002c8 <__aeabi_dsub>
 80033f8:	4602      	mov	r2, r0
 80033fa:	460b      	mov	r3, r1
 80033fc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003400:	462a      	mov	r2, r5
 8003402:	4633      	mov	r3, r6
 8003404:	f7fd fba8 	bl	8000b58 <__aeabi_dcmpgt>
 8003408:	2800      	cmp	r0, #0
 800340a:	f040 828b 	bne.w	8003924 <_dtoa_r+0x93c>
 800340e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003412:	462a      	mov	r2, r5
 8003414:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8003418:	f7fd fb80 	bl	8000b1c <__aeabi_dcmplt>
 800341c:	2800      	cmp	r0, #0
 800341e:	f040 8128 	bne.w	8003672 <_dtoa_r+0x68a>
 8003422:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8003426:	e9cd 3402 	strd	r3, r4, [sp, #8]
 800342a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800342c:	2b00      	cmp	r3, #0
 800342e:	f2c0 815a 	blt.w	80036e6 <_dtoa_r+0x6fe>
 8003432:	2f0e      	cmp	r7, #14
 8003434:	f300 8157 	bgt.w	80036e6 <_dtoa_r+0x6fe>
 8003438:	4b5a      	ldr	r3, [pc, #360]	@ (80035a4 <_dtoa_r+0x5bc>)
 800343a:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800343e:	ed93 7b00 	vldr	d7, [r3]
 8003442:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003444:	2b00      	cmp	r3, #0
 8003446:	ed8d 7b00 	vstr	d7, [sp]
 800344a:	da03      	bge.n	8003454 <_dtoa_r+0x46c>
 800344c:	9b07      	ldr	r3, [sp, #28]
 800344e:	2b00      	cmp	r3, #0
 8003450:	f340 8101 	ble.w	8003656 <_dtoa_r+0x66e>
 8003454:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8003458:	4656      	mov	r6, sl
 800345a:	e9dd 2300 	ldrd	r2, r3, [sp]
 800345e:	4620      	mov	r0, r4
 8003460:	4629      	mov	r1, r5
 8003462:	f7fd fa13 	bl	800088c <__aeabi_ddiv>
 8003466:	f7fd fb97 	bl	8000b98 <__aeabi_d2iz>
 800346a:	4680      	mov	r8, r0
 800346c:	f7fd f87a 	bl	8000564 <__aeabi_i2d>
 8003470:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003474:	f7fd f8e0 	bl	8000638 <__aeabi_dmul>
 8003478:	4602      	mov	r2, r0
 800347a:	460b      	mov	r3, r1
 800347c:	4620      	mov	r0, r4
 800347e:	4629      	mov	r1, r5
 8003480:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8003484:	f7fc ff20 	bl	80002c8 <__aeabi_dsub>
 8003488:	f806 4b01 	strb.w	r4, [r6], #1
 800348c:	9d07      	ldr	r5, [sp, #28]
 800348e:	eba6 040a 	sub.w	r4, r6, sl
 8003492:	42a5      	cmp	r5, r4
 8003494:	4602      	mov	r2, r0
 8003496:	460b      	mov	r3, r1
 8003498:	f040 8117 	bne.w	80036ca <_dtoa_r+0x6e2>
 800349c:	f7fc ff16 	bl	80002cc <__adddf3>
 80034a0:	e9dd 2300 	ldrd	r2, r3, [sp]
 80034a4:	4604      	mov	r4, r0
 80034a6:	460d      	mov	r5, r1
 80034a8:	f7fd fb56 	bl	8000b58 <__aeabi_dcmpgt>
 80034ac:	2800      	cmp	r0, #0
 80034ae:	f040 80f9 	bne.w	80036a4 <_dtoa_r+0x6bc>
 80034b2:	e9dd 2300 	ldrd	r2, r3, [sp]
 80034b6:	4620      	mov	r0, r4
 80034b8:	4629      	mov	r1, r5
 80034ba:	f7fd fb25 	bl	8000b08 <__aeabi_dcmpeq>
 80034be:	b118      	cbz	r0, 80034c8 <_dtoa_r+0x4e0>
 80034c0:	f018 0f01 	tst.w	r8, #1
 80034c4:	f040 80ee 	bne.w	80036a4 <_dtoa_r+0x6bc>
 80034c8:	4649      	mov	r1, r9
 80034ca:	4658      	mov	r0, fp
 80034cc:	f000 fc90 	bl	8003df0 <_Bfree>
 80034d0:	2300      	movs	r3, #0
 80034d2:	7033      	strb	r3, [r6, #0]
 80034d4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80034d6:	3701      	adds	r7, #1
 80034d8:	601f      	str	r7, [r3, #0]
 80034da:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80034dc:	2b00      	cmp	r3, #0
 80034de:	f000 831d 	beq.w	8003b1c <_dtoa_r+0xb34>
 80034e2:	601e      	str	r6, [r3, #0]
 80034e4:	e31a      	b.n	8003b1c <_dtoa_r+0xb34>
 80034e6:	07e2      	lsls	r2, r4, #31
 80034e8:	d505      	bpl.n	80034f6 <_dtoa_r+0x50e>
 80034ea:	e9d5 2300 	ldrd	r2, r3, [r5]
 80034ee:	f7fd f8a3 	bl	8000638 <__aeabi_dmul>
 80034f2:	3601      	adds	r6, #1
 80034f4:	2301      	movs	r3, #1
 80034f6:	1064      	asrs	r4, r4, #1
 80034f8:	3508      	adds	r5, #8
 80034fa:	e73f      	b.n	800337c <_dtoa_r+0x394>
 80034fc:	2602      	movs	r6, #2
 80034fe:	e742      	b.n	8003386 <_dtoa_r+0x39e>
 8003500:	9c07      	ldr	r4, [sp, #28]
 8003502:	9704      	str	r7, [sp, #16]
 8003504:	e761      	b.n	80033ca <_dtoa_r+0x3e2>
 8003506:	4b27      	ldr	r3, [pc, #156]	@ (80035a4 <_dtoa_r+0x5bc>)
 8003508:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800350a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800350e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003512:	4454      	add	r4, sl
 8003514:	2900      	cmp	r1, #0
 8003516:	d053      	beq.n	80035c0 <_dtoa_r+0x5d8>
 8003518:	4928      	ldr	r1, [pc, #160]	@ (80035bc <_dtoa_r+0x5d4>)
 800351a:	2000      	movs	r0, #0
 800351c:	f7fd f9b6 	bl	800088c <__aeabi_ddiv>
 8003520:	4633      	mov	r3, r6
 8003522:	462a      	mov	r2, r5
 8003524:	f7fc fed0 	bl	80002c8 <__aeabi_dsub>
 8003528:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800352c:	4656      	mov	r6, sl
 800352e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003532:	f7fd fb31 	bl	8000b98 <__aeabi_d2iz>
 8003536:	4605      	mov	r5, r0
 8003538:	f7fd f814 	bl	8000564 <__aeabi_i2d>
 800353c:	4602      	mov	r2, r0
 800353e:	460b      	mov	r3, r1
 8003540:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003544:	f7fc fec0 	bl	80002c8 <__aeabi_dsub>
 8003548:	3530      	adds	r5, #48	@ 0x30
 800354a:	4602      	mov	r2, r0
 800354c:	460b      	mov	r3, r1
 800354e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003552:	f806 5b01 	strb.w	r5, [r6], #1
 8003556:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800355a:	f7fd fadf 	bl	8000b1c <__aeabi_dcmplt>
 800355e:	2800      	cmp	r0, #0
 8003560:	d171      	bne.n	8003646 <_dtoa_r+0x65e>
 8003562:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003566:	4911      	ldr	r1, [pc, #68]	@ (80035ac <_dtoa_r+0x5c4>)
 8003568:	2000      	movs	r0, #0
 800356a:	f7fc fead 	bl	80002c8 <__aeabi_dsub>
 800356e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003572:	f7fd fad3 	bl	8000b1c <__aeabi_dcmplt>
 8003576:	2800      	cmp	r0, #0
 8003578:	f040 8095 	bne.w	80036a6 <_dtoa_r+0x6be>
 800357c:	42a6      	cmp	r6, r4
 800357e:	f43f af50 	beq.w	8003422 <_dtoa_r+0x43a>
 8003582:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003586:	4b0a      	ldr	r3, [pc, #40]	@ (80035b0 <_dtoa_r+0x5c8>)
 8003588:	2200      	movs	r2, #0
 800358a:	f7fd f855 	bl	8000638 <__aeabi_dmul>
 800358e:	4b08      	ldr	r3, [pc, #32]	@ (80035b0 <_dtoa_r+0x5c8>)
 8003590:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003594:	2200      	movs	r2, #0
 8003596:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800359a:	f7fd f84d 	bl	8000638 <__aeabi_dmul>
 800359e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80035a2:	e7c4      	b.n	800352e <_dtoa_r+0x546>
 80035a4:	08006870 	.word	0x08006870
 80035a8:	08006848 	.word	0x08006848
 80035ac:	3ff00000 	.word	0x3ff00000
 80035b0:	40240000 	.word	0x40240000
 80035b4:	401c0000 	.word	0x401c0000
 80035b8:	40140000 	.word	0x40140000
 80035bc:	3fe00000 	.word	0x3fe00000
 80035c0:	4631      	mov	r1, r6
 80035c2:	4628      	mov	r0, r5
 80035c4:	f7fd f838 	bl	8000638 <__aeabi_dmul>
 80035c8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80035cc:	9415      	str	r4, [sp, #84]	@ 0x54
 80035ce:	4656      	mov	r6, sl
 80035d0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80035d4:	f7fd fae0 	bl	8000b98 <__aeabi_d2iz>
 80035d8:	4605      	mov	r5, r0
 80035da:	f7fc ffc3 	bl	8000564 <__aeabi_i2d>
 80035de:	4602      	mov	r2, r0
 80035e0:	460b      	mov	r3, r1
 80035e2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80035e6:	f7fc fe6f 	bl	80002c8 <__aeabi_dsub>
 80035ea:	3530      	adds	r5, #48	@ 0x30
 80035ec:	f806 5b01 	strb.w	r5, [r6], #1
 80035f0:	4602      	mov	r2, r0
 80035f2:	460b      	mov	r3, r1
 80035f4:	42a6      	cmp	r6, r4
 80035f6:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80035fa:	f04f 0200 	mov.w	r2, #0
 80035fe:	d124      	bne.n	800364a <_dtoa_r+0x662>
 8003600:	4bac      	ldr	r3, [pc, #688]	@ (80038b4 <_dtoa_r+0x8cc>)
 8003602:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003606:	f7fc fe61 	bl	80002cc <__adddf3>
 800360a:	4602      	mov	r2, r0
 800360c:	460b      	mov	r3, r1
 800360e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003612:	f7fd faa1 	bl	8000b58 <__aeabi_dcmpgt>
 8003616:	2800      	cmp	r0, #0
 8003618:	d145      	bne.n	80036a6 <_dtoa_r+0x6be>
 800361a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800361e:	49a5      	ldr	r1, [pc, #660]	@ (80038b4 <_dtoa_r+0x8cc>)
 8003620:	2000      	movs	r0, #0
 8003622:	f7fc fe51 	bl	80002c8 <__aeabi_dsub>
 8003626:	4602      	mov	r2, r0
 8003628:	460b      	mov	r3, r1
 800362a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800362e:	f7fd fa75 	bl	8000b1c <__aeabi_dcmplt>
 8003632:	2800      	cmp	r0, #0
 8003634:	f43f aef5 	beq.w	8003422 <_dtoa_r+0x43a>
 8003638:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800363a:	1e73      	subs	r3, r6, #1
 800363c:	9315      	str	r3, [sp, #84]	@ 0x54
 800363e:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8003642:	2b30      	cmp	r3, #48	@ 0x30
 8003644:	d0f8      	beq.n	8003638 <_dtoa_r+0x650>
 8003646:	9f04      	ldr	r7, [sp, #16]
 8003648:	e73e      	b.n	80034c8 <_dtoa_r+0x4e0>
 800364a:	4b9b      	ldr	r3, [pc, #620]	@ (80038b8 <_dtoa_r+0x8d0>)
 800364c:	f7fc fff4 	bl	8000638 <__aeabi_dmul>
 8003650:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003654:	e7bc      	b.n	80035d0 <_dtoa_r+0x5e8>
 8003656:	d10c      	bne.n	8003672 <_dtoa_r+0x68a>
 8003658:	4b98      	ldr	r3, [pc, #608]	@ (80038bc <_dtoa_r+0x8d4>)
 800365a:	2200      	movs	r2, #0
 800365c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003660:	f7fc ffea 	bl	8000638 <__aeabi_dmul>
 8003664:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003668:	f7fd fa6c 	bl	8000b44 <__aeabi_dcmpge>
 800366c:	2800      	cmp	r0, #0
 800366e:	f000 8157 	beq.w	8003920 <_dtoa_r+0x938>
 8003672:	2400      	movs	r4, #0
 8003674:	4625      	mov	r5, r4
 8003676:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003678:	43db      	mvns	r3, r3
 800367a:	9304      	str	r3, [sp, #16]
 800367c:	4656      	mov	r6, sl
 800367e:	2700      	movs	r7, #0
 8003680:	4621      	mov	r1, r4
 8003682:	4658      	mov	r0, fp
 8003684:	f000 fbb4 	bl	8003df0 <_Bfree>
 8003688:	2d00      	cmp	r5, #0
 800368a:	d0dc      	beq.n	8003646 <_dtoa_r+0x65e>
 800368c:	b12f      	cbz	r7, 800369a <_dtoa_r+0x6b2>
 800368e:	42af      	cmp	r7, r5
 8003690:	d003      	beq.n	800369a <_dtoa_r+0x6b2>
 8003692:	4639      	mov	r1, r7
 8003694:	4658      	mov	r0, fp
 8003696:	f000 fbab 	bl	8003df0 <_Bfree>
 800369a:	4629      	mov	r1, r5
 800369c:	4658      	mov	r0, fp
 800369e:	f000 fba7 	bl	8003df0 <_Bfree>
 80036a2:	e7d0      	b.n	8003646 <_dtoa_r+0x65e>
 80036a4:	9704      	str	r7, [sp, #16]
 80036a6:	4633      	mov	r3, r6
 80036a8:	461e      	mov	r6, r3
 80036aa:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80036ae:	2a39      	cmp	r2, #57	@ 0x39
 80036b0:	d107      	bne.n	80036c2 <_dtoa_r+0x6da>
 80036b2:	459a      	cmp	sl, r3
 80036b4:	d1f8      	bne.n	80036a8 <_dtoa_r+0x6c0>
 80036b6:	9a04      	ldr	r2, [sp, #16]
 80036b8:	3201      	adds	r2, #1
 80036ba:	9204      	str	r2, [sp, #16]
 80036bc:	2230      	movs	r2, #48	@ 0x30
 80036be:	f88a 2000 	strb.w	r2, [sl]
 80036c2:	781a      	ldrb	r2, [r3, #0]
 80036c4:	3201      	adds	r2, #1
 80036c6:	701a      	strb	r2, [r3, #0]
 80036c8:	e7bd      	b.n	8003646 <_dtoa_r+0x65e>
 80036ca:	4b7b      	ldr	r3, [pc, #492]	@ (80038b8 <_dtoa_r+0x8d0>)
 80036cc:	2200      	movs	r2, #0
 80036ce:	f7fc ffb3 	bl	8000638 <__aeabi_dmul>
 80036d2:	2200      	movs	r2, #0
 80036d4:	2300      	movs	r3, #0
 80036d6:	4604      	mov	r4, r0
 80036d8:	460d      	mov	r5, r1
 80036da:	f7fd fa15 	bl	8000b08 <__aeabi_dcmpeq>
 80036de:	2800      	cmp	r0, #0
 80036e0:	f43f aebb 	beq.w	800345a <_dtoa_r+0x472>
 80036e4:	e6f0      	b.n	80034c8 <_dtoa_r+0x4e0>
 80036e6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80036e8:	2a00      	cmp	r2, #0
 80036ea:	f000 80db 	beq.w	80038a4 <_dtoa_r+0x8bc>
 80036ee:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80036f0:	2a01      	cmp	r2, #1
 80036f2:	f300 80bf 	bgt.w	8003874 <_dtoa_r+0x88c>
 80036f6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80036f8:	2a00      	cmp	r2, #0
 80036fa:	f000 80b7 	beq.w	800386c <_dtoa_r+0x884>
 80036fe:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8003702:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003704:	4646      	mov	r6, r8
 8003706:	9a08      	ldr	r2, [sp, #32]
 8003708:	2101      	movs	r1, #1
 800370a:	441a      	add	r2, r3
 800370c:	4658      	mov	r0, fp
 800370e:	4498      	add	r8, r3
 8003710:	9208      	str	r2, [sp, #32]
 8003712:	f000 fc6b 	bl	8003fec <__i2b>
 8003716:	4605      	mov	r5, r0
 8003718:	b15e      	cbz	r6, 8003732 <_dtoa_r+0x74a>
 800371a:	9b08      	ldr	r3, [sp, #32]
 800371c:	2b00      	cmp	r3, #0
 800371e:	dd08      	ble.n	8003732 <_dtoa_r+0x74a>
 8003720:	42b3      	cmp	r3, r6
 8003722:	9a08      	ldr	r2, [sp, #32]
 8003724:	bfa8      	it	ge
 8003726:	4633      	movge	r3, r6
 8003728:	eba8 0803 	sub.w	r8, r8, r3
 800372c:	1af6      	subs	r6, r6, r3
 800372e:	1ad3      	subs	r3, r2, r3
 8003730:	9308      	str	r3, [sp, #32]
 8003732:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003734:	b1f3      	cbz	r3, 8003774 <_dtoa_r+0x78c>
 8003736:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003738:	2b00      	cmp	r3, #0
 800373a:	f000 80b7 	beq.w	80038ac <_dtoa_r+0x8c4>
 800373e:	b18c      	cbz	r4, 8003764 <_dtoa_r+0x77c>
 8003740:	4629      	mov	r1, r5
 8003742:	4622      	mov	r2, r4
 8003744:	4658      	mov	r0, fp
 8003746:	f000 fd11 	bl	800416c <__pow5mult>
 800374a:	464a      	mov	r2, r9
 800374c:	4601      	mov	r1, r0
 800374e:	4605      	mov	r5, r0
 8003750:	4658      	mov	r0, fp
 8003752:	f000 fc61 	bl	8004018 <__multiply>
 8003756:	4649      	mov	r1, r9
 8003758:	9004      	str	r0, [sp, #16]
 800375a:	4658      	mov	r0, fp
 800375c:	f000 fb48 	bl	8003df0 <_Bfree>
 8003760:	9b04      	ldr	r3, [sp, #16]
 8003762:	4699      	mov	r9, r3
 8003764:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003766:	1b1a      	subs	r2, r3, r4
 8003768:	d004      	beq.n	8003774 <_dtoa_r+0x78c>
 800376a:	4649      	mov	r1, r9
 800376c:	4658      	mov	r0, fp
 800376e:	f000 fcfd 	bl	800416c <__pow5mult>
 8003772:	4681      	mov	r9, r0
 8003774:	2101      	movs	r1, #1
 8003776:	4658      	mov	r0, fp
 8003778:	f000 fc38 	bl	8003fec <__i2b>
 800377c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800377e:	4604      	mov	r4, r0
 8003780:	2b00      	cmp	r3, #0
 8003782:	f000 81cf 	beq.w	8003b24 <_dtoa_r+0xb3c>
 8003786:	461a      	mov	r2, r3
 8003788:	4601      	mov	r1, r0
 800378a:	4658      	mov	r0, fp
 800378c:	f000 fcee 	bl	800416c <__pow5mult>
 8003790:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003792:	2b01      	cmp	r3, #1
 8003794:	4604      	mov	r4, r0
 8003796:	f300 8095 	bgt.w	80038c4 <_dtoa_r+0x8dc>
 800379a:	9b02      	ldr	r3, [sp, #8]
 800379c:	2b00      	cmp	r3, #0
 800379e:	f040 8087 	bne.w	80038b0 <_dtoa_r+0x8c8>
 80037a2:	9b03      	ldr	r3, [sp, #12]
 80037a4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80037a8:	2b00      	cmp	r3, #0
 80037aa:	f040 8089 	bne.w	80038c0 <_dtoa_r+0x8d8>
 80037ae:	9b03      	ldr	r3, [sp, #12]
 80037b0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80037b4:	0d1b      	lsrs	r3, r3, #20
 80037b6:	051b      	lsls	r3, r3, #20
 80037b8:	b12b      	cbz	r3, 80037c6 <_dtoa_r+0x7de>
 80037ba:	9b08      	ldr	r3, [sp, #32]
 80037bc:	3301      	adds	r3, #1
 80037be:	9308      	str	r3, [sp, #32]
 80037c0:	f108 0801 	add.w	r8, r8, #1
 80037c4:	2301      	movs	r3, #1
 80037c6:	930a      	str	r3, [sp, #40]	@ 0x28
 80037c8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80037ca:	2b00      	cmp	r3, #0
 80037cc:	f000 81b0 	beq.w	8003b30 <_dtoa_r+0xb48>
 80037d0:	6923      	ldr	r3, [r4, #16]
 80037d2:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80037d6:	6918      	ldr	r0, [r3, #16]
 80037d8:	f000 fbbc 	bl	8003f54 <__hi0bits>
 80037dc:	f1c0 0020 	rsb	r0, r0, #32
 80037e0:	9b08      	ldr	r3, [sp, #32]
 80037e2:	4418      	add	r0, r3
 80037e4:	f010 001f 	ands.w	r0, r0, #31
 80037e8:	d077      	beq.n	80038da <_dtoa_r+0x8f2>
 80037ea:	f1c0 0320 	rsb	r3, r0, #32
 80037ee:	2b04      	cmp	r3, #4
 80037f0:	dd6b      	ble.n	80038ca <_dtoa_r+0x8e2>
 80037f2:	9b08      	ldr	r3, [sp, #32]
 80037f4:	f1c0 001c 	rsb	r0, r0, #28
 80037f8:	4403      	add	r3, r0
 80037fa:	4480      	add	r8, r0
 80037fc:	4406      	add	r6, r0
 80037fe:	9308      	str	r3, [sp, #32]
 8003800:	f1b8 0f00 	cmp.w	r8, #0
 8003804:	dd05      	ble.n	8003812 <_dtoa_r+0x82a>
 8003806:	4649      	mov	r1, r9
 8003808:	4642      	mov	r2, r8
 800380a:	4658      	mov	r0, fp
 800380c:	f000 fd08 	bl	8004220 <__lshift>
 8003810:	4681      	mov	r9, r0
 8003812:	9b08      	ldr	r3, [sp, #32]
 8003814:	2b00      	cmp	r3, #0
 8003816:	dd05      	ble.n	8003824 <_dtoa_r+0x83c>
 8003818:	4621      	mov	r1, r4
 800381a:	461a      	mov	r2, r3
 800381c:	4658      	mov	r0, fp
 800381e:	f000 fcff 	bl	8004220 <__lshift>
 8003822:	4604      	mov	r4, r0
 8003824:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8003826:	2b00      	cmp	r3, #0
 8003828:	d059      	beq.n	80038de <_dtoa_r+0x8f6>
 800382a:	4621      	mov	r1, r4
 800382c:	4648      	mov	r0, r9
 800382e:	f000 fd63 	bl	80042f8 <__mcmp>
 8003832:	2800      	cmp	r0, #0
 8003834:	da53      	bge.n	80038de <_dtoa_r+0x8f6>
 8003836:	1e7b      	subs	r3, r7, #1
 8003838:	9304      	str	r3, [sp, #16]
 800383a:	4649      	mov	r1, r9
 800383c:	2300      	movs	r3, #0
 800383e:	220a      	movs	r2, #10
 8003840:	4658      	mov	r0, fp
 8003842:	f000 faf7 	bl	8003e34 <__multadd>
 8003846:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003848:	4681      	mov	r9, r0
 800384a:	2b00      	cmp	r3, #0
 800384c:	f000 8172 	beq.w	8003b34 <_dtoa_r+0xb4c>
 8003850:	2300      	movs	r3, #0
 8003852:	4629      	mov	r1, r5
 8003854:	220a      	movs	r2, #10
 8003856:	4658      	mov	r0, fp
 8003858:	f000 faec 	bl	8003e34 <__multadd>
 800385c:	9b00      	ldr	r3, [sp, #0]
 800385e:	2b00      	cmp	r3, #0
 8003860:	4605      	mov	r5, r0
 8003862:	dc67      	bgt.n	8003934 <_dtoa_r+0x94c>
 8003864:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003866:	2b02      	cmp	r3, #2
 8003868:	dc41      	bgt.n	80038ee <_dtoa_r+0x906>
 800386a:	e063      	b.n	8003934 <_dtoa_r+0x94c>
 800386c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800386e:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8003872:	e746      	b.n	8003702 <_dtoa_r+0x71a>
 8003874:	9b07      	ldr	r3, [sp, #28]
 8003876:	1e5c      	subs	r4, r3, #1
 8003878:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800387a:	42a3      	cmp	r3, r4
 800387c:	bfbf      	itttt	lt
 800387e:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8003880:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 8003882:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8003884:	1ae3      	sublt	r3, r4, r3
 8003886:	bfb4      	ite	lt
 8003888:	18d2      	addlt	r2, r2, r3
 800388a:	1b1c      	subge	r4, r3, r4
 800388c:	9b07      	ldr	r3, [sp, #28]
 800388e:	bfbc      	itt	lt
 8003890:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8003892:	2400      	movlt	r4, #0
 8003894:	2b00      	cmp	r3, #0
 8003896:	bfb5      	itete	lt
 8003898:	eba8 0603 	sublt.w	r6, r8, r3
 800389c:	9b07      	ldrge	r3, [sp, #28]
 800389e:	2300      	movlt	r3, #0
 80038a0:	4646      	movge	r6, r8
 80038a2:	e730      	b.n	8003706 <_dtoa_r+0x71e>
 80038a4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80038a6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80038a8:	4646      	mov	r6, r8
 80038aa:	e735      	b.n	8003718 <_dtoa_r+0x730>
 80038ac:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80038ae:	e75c      	b.n	800376a <_dtoa_r+0x782>
 80038b0:	2300      	movs	r3, #0
 80038b2:	e788      	b.n	80037c6 <_dtoa_r+0x7de>
 80038b4:	3fe00000 	.word	0x3fe00000
 80038b8:	40240000 	.word	0x40240000
 80038bc:	40140000 	.word	0x40140000
 80038c0:	9b02      	ldr	r3, [sp, #8]
 80038c2:	e780      	b.n	80037c6 <_dtoa_r+0x7de>
 80038c4:	2300      	movs	r3, #0
 80038c6:	930a      	str	r3, [sp, #40]	@ 0x28
 80038c8:	e782      	b.n	80037d0 <_dtoa_r+0x7e8>
 80038ca:	d099      	beq.n	8003800 <_dtoa_r+0x818>
 80038cc:	9a08      	ldr	r2, [sp, #32]
 80038ce:	331c      	adds	r3, #28
 80038d0:	441a      	add	r2, r3
 80038d2:	4498      	add	r8, r3
 80038d4:	441e      	add	r6, r3
 80038d6:	9208      	str	r2, [sp, #32]
 80038d8:	e792      	b.n	8003800 <_dtoa_r+0x818>
 80038da:	4603      	mov	r3, r0
 80038dc:	e7f6      	b.n	80038cc <_dtoa_r+0x8e4>
 80038de:	9b07      	ldr	r3, [sp, #28]
 80038e0:	9704      	str	r7, [sp, #16]
 80038e2:	2b00      	cmp	r3, #0
 80038e4:	dc20      	bgt.n	8003928 <_dtoa_r+0x940>
 80038e6:	9300      	str	r3, [sp, #0]
 80038e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80038ea:	2b02      	cmp	r3, #2
 80038ec:	dd1e      	ble.n	800392c <_dtoa_r+0x944>
 80038ee:	9b00      	ldr	r3, [sp, #0]
 80038f0:	2b00      	cmp	r3, #0
 80038f2:	f47f aec0 	bne.w	8003676 <_dtoa_r+0x68e>
 80038f6:	4621      	mov	r1, r4
 80038f8:	2205      	movs	r2, #5
 80038fa:	4658      	mov	r0, fp
 80038fc:	f000 fa9a 	bl	8003e34 <__multadd>
 8003900:	4601      	mov	r1, r0
 8003902:	4604      	mov	r4, r0
 8003904:	4648      	mov	r0, r9
 8003906:	f000 fcf7 	bl	80042f8 <__mcmp>
 800390a:	2800      	cmp	r0, #0
 800390c:	f77f aeb3 	ble.w	8003676 <_dtoa_r+0x68e>
 8003910:	4656      	mov	r6, sl
 8003912:	2331      	movs	r3, #49	@ 0x31
 8003914:	f806 3b01 	strb.w	r3, [r6], #1
 8003918:	9b04      	ldr	r3, [sp, #16]
 800391a:	3301      	adds	r3, #1
 800391c:	9304      	str	r3, [sp, #16]
 800391e:	e6ae      	b.n	800367e <_dtoa_r+0x696>
 8003920:	9c07      	ldr	r4, [sp, #28]
 8003922:	9704      	str	r7, [sp, #16]
 8003924:	4625      	mov	r5, r4
 8003926:	e7f3      	b.n	8003910 <_dtoa_r+0x928>
 8003928:	9b07      	ldr	r3, [sp, #28]
 800392a:	9300      	str	r3, [sp, #0]
 800392c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800392e:	2b00      	cmp	r3, #0
 8003930:	f000 8104 	beq.w	8003b3c <_dtoa_r+0xb54>
 8003934:	2e00      	cmp	r6, #0
 8003936:	dd05      	ble.n	8003944 <_dtoa_r+0x95c>
 8003938:	4629      	mov	r1, r5
 800393a:	4632      	mov	r2, r6
 800393c:	4658      	mov	r0, fp
 800393e:	f000 fc6f 	bl	8004220 <__lshift>
 8003942:	4605      	mov	r5, r0
 8003944:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003946:	2b00      	cmp	r3, #0
 8003948:	d05a      	beq.n	8003a00 <_dtoa_r+0xa18>
 800394a:	6869      	ldr	r1, [r5, #4]
 800394c:	4658      	mov	r0, fp
 800394e:	f000 fa0f 	bl	8003d70 <_Balloc>
 8003952:	4606      	mov	r6, r0
 8003954:	b928      	cbnz	r0, 8003962 <_dtoa_r+0x97a>
 8003956:	4b84      	ldr	r3, [pc, #528]	@ (8003b68 <_dtoa_r+0xb80>)
 8003958:	4602      	mov	r2, r0
 800395a:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800395e:	f7ff bb5a 	b.w	8003016 <_dtoa_r+0x2e>
 8003962:	692a      	ldr	r2, [r5, #16]
 8003964:	3202      	adds	r2, #2
 8003966:	0092      	lsls	r2, r2, #2
 8003968:	f105 010c 	add.w	r1, r5, #12
 800396c:	300c      	adds	r0, #12
 800396e:	f002 f94b 	bl	8005c08 <memcpy>
 8003972:	2201      	movs	r2, #1
 8003974:	4631      	mov	r1, r6
 8003976:	4658      	mov	r0, fp
 8003978:	f000 fc52 	bl	8004220 <__lshift>
 800397c:	f10a 0301 	add.w	r3, sl, #1
 8003980:	9307      	str	r3, [sp, #28]
 8003982:	9b00      	ldr	r3, [sp, #0]
 8003984:	4453      	add	r3, sl
 8003986:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003988:	9b02      	ldr	r3, [sp, #8]
 800398a:	f003 0301 	and.w	r3, r3, #1
 800398e:	462f      	mov	r7, r5
 8003990:	930a      	str	r3, [sp, #40]	@ 0x28
 8003992:	4605      	mov	r5, r0
 8003994:	9b07      	ldr	r3, [sp, #28]
 8003996:	4621      	mov	r1, r4
 8003998:	3b01      	subs	r3, #1
 800399a:	4648      	mov	r0, r9
 800399c:	9300      	str	r3, [sp, #0]
 800399e:	f7ff fa99 	bl	8002ed4 <quorem>
 80039a2:	4639      	mov	r1, r7
 80039a4:	9002      	str	r0, [sp, #8]
 80039a6:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80039aa:	4648      	mov	r0, r9
 80039ac:	f000 fca4 	bl	80042f8 <__mcmp>
 80039b0:	462a      	mov	r2, r5
 80039b2:	9008      	str	r0, [sp, #32]
 80039b4:	4621      	mov	r1, r4
 80039b6:	4658      	mov	r0, fp
 80039b8:	f000 fcba 	bl	8004330 <__mdiff>
 80039bc:	68c2      	ldr	r2, [r0, #12]
 80039be:	4606      	mov	r6, r0
 80039c0:	bb02      	cbnz	r2, 8003a04 <_dtoa_r+0xa1c>
 80039c2:	4601      	mov	r1, r0
 80039c4:	4648      	mov	r0, r9
 80039c6:	f000 fc97 	bl	80042f8 <__mcmp>
 80039ca:	4602      	mov	r2, r0
 80039cc:	4631      	mov	r1, r6
 80039ce:	4658      	mov	r0, fp
 80039d0:	920e      	str	r2, [sp, #56]	@ 0x38
 80039d2:	f000 fa0d 	bl	8003df0 <_Bfree>
 80039d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80039d8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80039da:	9e07      	ldr	r6, [sp, #28]
 80039dc:	ea43 0102 	orr.w	r1, r3, r2
 80039e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80039e2:	4319      	orrs	r1, r3
 80039e4:	d110      	bne.n	8003a08 <_dtoa_r+0xa20>
 80039e6:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80039ea:	d029      	beq.n	8003a40 <_dtoa_r+0xa58>
 80039ec:	9b08      	ldr	r3, [sp, #32]
 80039ee:	2b00      	cmp	r3, #0
 80039f0:	dd02      	ble.n	80039f8 <_dtoa_r+0xa10>
 80039f2:	9b02      	ldr	r3, [sp, #8]
 80039f4:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 80039f8:	9b00      	ldr	r3, [sp, #0]
 80039fa:	f883 8000 	strb.w	r8, [r3]
 80039fe:	e63f      	b.n	8003680 <_dtoa_r+0x698>
 8003a00:	4628      	mov	r0, r5
 8003a02:	e7bb      	b.n	800397c <_dtoa_r+0x994>
 8003a04:	2201      	movs	r2, #1
 8003a06:	e7e1      	b.n	80039cc <_dtoa_r+0x9e4>
 8003a08:	9b08      	ldr	r3, [sp, #32]
 8003a0a:	2b00      	cmp	r3, #0
 8003a0c:	db04      	blt.n	8003a18 <_dtoa_r+0xa30>
 8003a0e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003a10:	430b      	orrs	r3, r1
 8003a12:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003a14:	430b      	orrs	r3, r1
 8003a16:	d120      	bne.n	8003a5a <_dtoa_r+0xa72>
 8003a18:	2a00      	cmp	r2, #0
 8003a1a:	dded      	ble.n	80039f8 <_dtoa_r+0xa10>
 8003a1c:	4649      	mov	r1, r9
 8003a1e:	2201      	movs	r2, #1
 8003a20:	4658      	mov	r0, fp
 8003a22:	f000 fbfd 	bl	8004220 <__lshift>
 8003a26:	4621      	mov	r1, r4
 8003a28:	4681      	mov	r9, r0
 8003a2a:	f000 fc65 	bl	80042f8 <__mcmp>
 8003a2e:	2800      	cmp	r0, #0
 8003a30:	dc03      	bgt.n	8003a3a <_dtoa_r+0xa52>
 8003a32:	d1e1      	bne.n	80039f8 <_dtoa_r+0xa10>
 8003a34:	f018 0f01 	tst.w	r8, #1
 8003a38:	d0de      	beq.n	80039f8 <_dtoa_r+0xa10>
 8003a3a:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003a3e:	d1d8      	bne.n	80039f2 <_dtoa_r+0xa0a>
 8003a40:	9a00      	ldr	r2, [sp, #0]
 8003a42:	2339      	movs	r3, #57	@ 0x39
 8003a44:	7013      	strb	r3, [r2, #0]
 8003a46:	4633      	mov	r3, r6
 8003a48:	461e      	mov	r6, r3
 8003a4a:	3b01      	subs	r3, #1
 8003a4c:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8003a50:	2a39      	cmp	r2, #57	@ 0x39
 8003a52:	d052      	beq.n	8003afa <_dtoa_r+0xb12>
 8003a54:	3201      	adds	r2, #1
 8003a56:	701a      	strb	r2, [r3, #0]
 8003a58:	e612      	b.n	8003680 <_dtoa_r+0x698>
 8003a5a:	2a00      	cmp	r2, #0
 8003a5c:	dd07      	ble.n	8003a6e <_dtoa_r+0xa86>
 8003a5e:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003a62:	d0ed      	beq.n	8003a40 <_dtoa_r+0xa58>
 8003a64:	9a00      	ldr	r2, [sp, #0]
 8003a66:	f108 0301 	add.w	r3, r8, #1
 8003a6a:	7013      	strb	r3, [r2, #0]
 8003a6c:	e608      	b.n	8003680 <_dtoa_r+0x698>
 8003a6e:	9b07      	ldr	r3, [sp, #28]
 8003a70:	9a07      	ldr	r2, [sp, #28]
 8003a72:	f803 8c01 	strb.w	r8, [r3, #-1]
 8003a76:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003a78:	4293      	cmp	r3, r2
 8003a7a:	d028      	beq.n	8003ace <_dtoa_r+0xae6>
 8003a7c:	4649      	mov	r1, r9
 8003a7e:	2300      	movs	r3, #0
 8003a80:	220a      	movs	r2, #10
 8003a82:	4658      	mov	r0, fp
 8003a84:	f000 f9d6 	bl	8003e34 <__multadd>
 8003a88:	42af      	cmp	r7, r5
 8003a8a:	4681      	mov	r9, r0
 8003a8c:	f04f 0300 	mov.w	r3, #0
 8003a90:	f04f 020a 	mov.w	r2, #10
 8003a94:	4639      	mov	r1, r7
 8003a96:	4658      	mov	r0, fp
 8003a98:	d107      	bne.n	8003aaa <_dtoa_r+0xac2>
 8003a9a:	f000 f9cb 	bl	8003e34 <__multadd>
 8003a9e:	4607      	mov	r7, r0
 8003aa0:	4605      	mov	r5, r0
 8003aa2:	9b07      	ldr	r3, [sp, #28]
 8003aa4:	3301      	adds	r3, #1
 8003aa6:	9307      	str	r3, [sp, #28]
 8003aa8:	e774      	b.n	8003994 <_dtoa_r+0x9ac>
 8003aaa:	f000 f9c3 	bl	8003e34 <__multadd>
 8003aae:	4629      	mov	r1, r5
 8003ab0:	4607      	mov	r7, r0
 8003ab2:	2300      	movs	r3, #0
 8003ab4:	220a      	movs	r2, #10
 8003ab6:	4658      	mov	r0, fp
 8003ab8:	f000 f9bc 	bl	8003e34 <__multadd>
 8003abc:	4605      	mov	r5, r0
 8003abe:	e7f0      	b.n	8003aa2 <_dtoa_r+0xaba>
 8003ac0:	9b00      	ldr	r3, [sp, #0]
 8003ac2:	2b00      	cmp	r3, #0
 8003ac4:	bfcc      	ite	gt
 8003ac6:	461e      	movgt	r6, r3
 8003ac8:	2601      	movle	r6, #1
 8003aca:	4456      	add	r6, sl
 8003acc:	2700      	movs	r7, #0
 8003ace:	4649      	mov	r1, r9
 8003ad0:	2201      	movs	r2, #1
 8003ad2:	4658      	mov	r0, fp
 8003ad4:	f000 fba4 	bl	8004220 <__lshift>
 8003ad8:	4621      	mov	r1, r4
 8003ada:	4681      	mov	r9, r0
 8003adc:	f000 fc0c 	bl	80042f8 <__mcmp>
 8003ae0:	2800      	cmp	r0, #0
 8003ae2:	dcb0      	bgt.n	8003a46 <_dtoa_r+0xa5e>
 8003ae4:	d102      	bne.n	8003aec <_dtoa_r+0xb04>
 8003ae6:	f018 0f01 	tst.w	r8, #1
 8003aea:	d1ac      	bne.n	8003a46 <_dtoa_r+0xa5e>
 8003aec:	4633      	mov	r3, r6
 8003aee:	461e      	mov	r6, r3
 8003af0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003af4:	2a30      	cmp	r2, #48	@ 0x30
 8003af6:	d0fa      	beq.n	8003aee <_dtoa_r+0xb06>
 8003af8:	e5c2      	b.n	8003680 <_dtoa_r+0x698>
 8003afa:	459a      	cmp	sl, r3
 8003afc:	d1a4      	bne.n	8003a48 <_dtoa_r+0xa60>
 8003afe:	9b04      	ldr	r3, [sp, #16]
 8003b00:	3301      	adds	r3, #1
 8003b02:	9304      	str	r3, [sp, #16]
 8003b04:	2331      	movs	r3, #49	@ 0x31
 8003b06:	f88a 3000 	strb.w	r3, [sl]
 8003b0a:	e5b9      	b.n	8003680 <_dtoa_r+0x698>
 8003b0c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8003b0e:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8003b6c <_dtoa_r+0xb84>
 8003b12:	b11b      	cbz	r3, 8003b1c <_dtoa_r+0xb34>
 8003b14:	f10a 0308 	add.w	r3, sl, #8
 8003b18:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8003b1a:	6013      	str	r3, [r2, #0]
 8003b1c:	4650      	mov	r0, sl
 8003b1e:	b019      	add	sp, #100	@ 0x64
 8003b20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003b26:	2b01      	cmp	r3, #1
 8003b28:	f77f ae37 	ble.w	800379a <_dtoa_r+0x7b2>
 8003b2c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003b2e:	930a      	str	r3, [sp, #40]	@ 0x28
 8003b30:	2001      	movs	r0, #1
 8003b32:	e655      	b.n	80037e0 <_dtoa_r+0x7f8>
 8003b34:	9b00      	ldr	r3, [sp, #0]
 8003b36:	2b00      	cmp	r3, #0
 8003b38:	f77f aed6 	ble.w	80038e8 <_dtoa_r+0x900>
 8003b3c:	4656      	mov	r6, sl
 8003b3e:	4621      	mov	r1, r4
 8003b40:	4648      	mov	r0, r9
 8003b42:	f7ff f9c7 	bl	8002ed4 <quorem>
 8003b46:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8003b4a:	f806 8b01 	strb.w	r8, [r6], #1
 8003b4e:	9b00      	ldr	r3, [sp, #0]
 8003b50:	eba6 020a 	sub.w	r2, r6, sl
 8003b54:	4293      	cmp	r3, r2
 8003b56:	ddb3      	ble.n	8003ac0 <_dtoa_r+0xad8>
 8003b58:	4649      	mov	r1, r9
 8003b5a:	2300      	movs	r3, #0
 8003b5c:	220a      	movs	r2, #10
 8003b5e:	4658      	mov	r0, fp
 8003b60:	f000 f968 	bl	8003e34 <__multadd>
 8003b64:	4681      	mov	r9, r0
 8003b66:	e7ea      	b.n	8003b3e <_dtoa_r+0xb56>
 8003b68:	080067d0 	.word	0x080067d0
 8003b6c:	08006754 	.word	0x08006754

08003b70 <_free_r>:
 8003b70:	b538      	push	{r3, r4, r5, lr}
 8003b72:	4605      	mov	r5, r0
 8003b74:	2900      	cmp	r1, #0
 8003b76:	d041      	beq.n	8003bfc <_free_r+0x8c>
 8003b78:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003b7c:	1f0c      	subs	r4, r1, #4
 8003b7e:	2b00      	cmp	r3, #0
 8003b80:	bfb8      	it	lt
 8003b82:	18e4      	addlt	r4, r4, r3
 8003b84:	f000 f8e8 	bl	8003d58 <__malloc_lock>
 8003b88:	4a1d      	ldr	r2, [pc, #116]	@ (8003c00 <_free_r+0x90>)
 8003b8a:	6813      	ldr	r3, [r2, #0]
 8003b8c:	b933      	cbnz	r3, 8003b9c <_free_r+0x2c>
 8003b8e:	6063      	str	r3, [r4, #4]
 8003b90:	6014      	str	r4, [r2, #0]
 8003b92:	4628      	mov	r0, r5
 8003b94:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003b98:	f000 b8e4 	b.w	8003d64 <__malloc_unlock>
 8003b9c:	42a3      	cmp	r3, r4
 8003b9e:	d908      	bls.n	8003bb2 <_free_r+0x42>
 8003ba0:	6820      	ldr	r0, [r4, #0]
 8003ba2:	1821      	adds	r1, r4, r0
 8003ba4:	428b      	cmp	r3, r1
 8003ba6:	bf01      	itttt	eq
 8003ba8:	6819      	ldreq	r1, [r3, #0]
 8003baa:	685b      	ldreq	r3, [r3, #4]
 8003bac:	1809      	addeq	r1, r1, r0
 8003bae:	6021      	streq	r1, [r4, #0]
 8003bb0:	e7ed      	b.n	8003b8e <_free_r+0x1e>
 8003bb2:	461a      	mov	r2, r3
 8003bb4:	685b      	ldr	r3, [r3, #4]
 8003bb6:	b10b      	cbz	r3, 8003bbc <_free_r+0x4c>
 8003bb8:	42a3      	cmp	r3, r4
 8003bba:	d9fa      	bls.n	8003bb2 <_free_r+0x42>
 8003bbc:	6811      	ldr	r1, [r2, #0]
 8003bbe:	1850      	adds	r0, r2, r1
 8003bc0:	42a0      	cmp	r0, r4
 8003bc2:	d10b      	bne.n	8003bdc <_free_r+0x6c>
 8003bc4:	6820      	ldr	r0, [r4, #0]
 8003bc6:	4401      	add	r1, r0
 8003bc8:	1850      	adds	r0, r2, r1
 8003bca:	4283      	cmp	r3, r0
 8003bcc:	6011      	str	r1, [r2, #0]
 8003bce:	d1e0      	bne.n	8003b92 <_free_r+0x22>
 8003bd0:	6818      	ldr	r0, [r3, #0]
 8003bd2:	685b      	ldr	r3, [r3, #4]
 8003bd4:	6053      	str	r3, [r2, #4]
 8003bd6:	4408      	add	r0, r1
 8003bd8:	6010      	str	r0, [r2, #0]
 8003bda:	e7da      	b.n	8003b92 <_free_r+0x22>
 8003bdc:	d902      	bls.n	8003be4 <_free_r+0x74>
 8003bde:	230c      	movs	r3, #12
 8003be0:	602b      	str	r3, [r5, #0]
 8003be2:	e7d6      	b.n	8003b92 <_free_r+0x22>
 8003be4:	6820      	ldr	r0, [r4, #0]
 8003be6:	1821      	adds	r1, r4, r0
 8003be8:	428b      	cmp	r3, r1
 8003bea:	bf04      	itt	eq
 8003bec:	6819      	ldreq	r1, [r3, #0]
 8003bee:	685b      	ldreq	r3, [r3, #4]
 8003bf0:	6063      	str	r3, [r4, #4]
 8003bf2:	bf04      	itt	eq
 8003bf4:	1809      	addeq	r1, r1, r0
 8003bf6:	6021      	streq	r1, [r4, #0]
 8003bf8:	6054      	str	r4, [r2, #4]
 8003bfa:	e7ca      	b.n	8003b92 <_free_r+0x22>
 8003bfc:	bd38      	pop	{r3, r4, r5, pc}
 8003bfe:	bf00      	nop
 8003c00:	20000778 	.word	0x20000778

08003c04 <malloc>:
 8003c04:	4b02      	ldr	r3, [pc, #8]	@ (8003c10 <malloc+0xc>)
 8003c06:	4601      	mov	r1, r0
 8003c08:	6818      	ldr	r0, [r3, #0]
 8003c0a:	f000 b825 	b.w	8003c58 <_malloc_r>
 8003c0e:	bf00      	nop
 8003c10:	20000030 	.word	0x20000030

08003c14 <sbrk_aligned>:
 8003c14:	b570      	push	{r4, r5, r6, lr}
 8003c16:	4e0f      	ldr	r6, [pc, #60]	@ (8003c54 <sbrk_aligned+0x40>)
 8003c18:	460c      	mov	r4, r1
 8003c1a:	6831      	ldr	r1, [r6, #0]
 8003c1c:	4605      	mov	r5, r0
 8003c1e:	b911      	cbnz	r1, 8003c26 <sbrk_aligned+0x12>
 8003c20:	f001 ffe2 	bl	8005be8 <_sbrk_r>
 8003c24:	6030      	str	r0, [r6, #0]
 8003c26:	4621      	mov	r1, r4
 8003c28:	4628      	mov	r0, r5
 8003c2a:	f001 ffdd 	bl	8005be8 <_sbrk_r>
 8003c2e:	1c43      	adds	r3, r0, #1
 8003c30:	d103      	bne.n	8003c3a <sbrk_aligned+0x26>
 8003c32:	f04f 34ff 	mov.w	r4, #4294967295
 8003c36:	4620      	mov	r0, r4
 8003c38:	bd70      	pop	{r4, r5, r6, pc}
 8003c3a:	1cc4      	adds	r4, r0, #3
 8003c3c:	f024 0403 	bic.w	r4, r4, #3
 8003c40:	42a0      	cmp	r0, r4
 8003c42:	d0f8      	beq.n	8003c36 <sbrk_aligned+0x22>
 8003c44:	1a21      	subs	r1, r4, r0
 8003c46:	4628      	mov	r0, r5
 8003c48:	f001 ffce 	bl	8005be8 <_sbrk_r>
 8003c4c:	3001      	adds	r0, #1
 8003c4e:	d1f2      	bne.n	8003c36 <sbrk_aligned+0x22>
 8003c50:	e7ef      	b.n	8003c32 <sbrk_aligned+0x1e>
 8003c52:	bf00      	nop
 8003c54:	20000774 	.word	0x20000774

08003c58 <_malloc_r>:
 8003c58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003c5c:	1ccd      	adds	r5, r1, #3
 8003c5e:	f025 0503 	bic.w	r5, r5, #3
 8003c62:	3508      	adds	r5, #8
 8003c64:	2d0c      	cmp	r5, #12
 8003c66:	bf38      	it	cc
 8003c68:	250c      	movcc	r5, #12
 8003c6a:	2d00      	cmp	r5, #0
 8003c6c:	4606      	mov	r6, r0
 8003c6e:	db01      	blt.n	8003c74 <_malloc_r+0x1c>
 8003c70:	42a9      	cmp	r1, r5
 8003c72:	d904      	bls.n	8003c7e <_malloc_r+0x26>
 8003c74:	230c      	movs	r3, #12
 8003c76:	6033      	str	r3, [r6, #0]
 8003c78:	2000      	movs	r0, #0
 8003c7a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003c7e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8003d54 <_malloc_r+0xfc>
 8003c82:	f000 f869 	bl	8003d58 <__malloc_lock>
 8003c86:	f8d8 3000 	ldr.w	r3, [r8]
 8003c8a:	461c      	mov	r4, r3
 8003c8c:	bb44      	cbnz	r4, 8003ce0 <_malloc_r+0x88>
 8003c8e:	4629      	mov	r1, r5
 8003c90:	4630      	mov	r0, r6
 8003c92:	f7ff ffbf 	bl	8003c14 <sbrk_aligned>
 8003c96:	1c43      	adds	r3, r0, #1
 8003c98:	4604      	mov	r4, r0
 8003c9a:	d158      	bne.n	8003d4e <_malloc_r+0xf6>
 8003c9c:	f8d8 4000 	ldr.w	r4, [r8]
 8003ca0:	4627      	mov	r7, r4
 8003ca2:	2f00      	cmp	r7, #0
 8003ca4:	d143      	bne.n	8003d2e <_malloc_r+0xd6>
 8003ca6:	2c00      	cmp	r4, #0
 8003ca8:	d04b      	beq.n	8003d42 <_malloc_r+0xea>
 8003caa:	6823      	ldr	r3, [r4, #0]
 8003cac:	4639      	mov	r1, r7
 8003cae:	4630      	mov	r0, r6
 8003cb0:	eb04 0903 	add.w	r9, r4, r3
 8003cb4:	f001 ff98 	bl	8005be8 <_sbrk_r>
 8003cb8:	4581      	cmp	r9, r0
 8003cba:	d142      	bne.n	8003d42 <_malloc_r+0xea>
 8003cbc:	6821      	ldr	r1, [r4, #0]
 8003cbe:	1a6d      	subs	r5, r5, r1
 8003cc0:	4629      	mov	r1, r5
 8003cc2:	4630      	mov	r0, r6
 8003cc4:	f7ff ffa6 	bl	8003c14 <sbrk_aligned>
 8003cc8:	3001      	adds	r0, #1
 8003cca:	d03a      	beq.n	8003d42 <_malloc_r+0xea>
 8003ccc:	6823      	ldr	r3, [r4, #0]
 8003cce:	442b      	add	r3, r5
 8003cd0:	6023      	str	r3, [r4, #0]
 8003cd2:	f8d8 3000 	ldr.w	r3, [r8]
 8003cd6:	685a      	ldr	r2, [r3, #4]
 8003cd8:	bb62      	cbnz	r2, 8003d34 <_malloc_r+0xdc>
 8003cda:	f8c8 7000 	str.w	r7, [r8]
 8003cde:	e00f      	b.n	8003d00 <_malloc_r+0xa8>
 8003ce0:	6822      	ldr	r2, [r4, #0]
 8003ce2:	1b52      	subs	r2, r2, r5
 8003ce4:	d420      	bmi.n	8003d28 <_malloc_r+0xd0>
 8003ce6:	2a0b      	cmp	r2, #11
 8003ce8:	d917      	bls.n	8003d1a <_malloc_r+0xc2>
 8003cea:	1961      	adds	r1, r4, r5
 8003cec:	42a3      	cmp	r3, r4
 8003cee:	6025      	str	r5, [r4, #0]
 8003cf0:	bf18      	it	ne
 8003cf2:	6059      	strne	r1, [r3, #4]
 8003cf4:	6863      	ldr	r3, [r4, #4]
 8003cf6:	bf08      	it	eq
 8003cf8:	f8c8 1000 	streq.w	r1, [r8]
 8003cfc:	5162      	str	r2, [r4, r5]
 8003cfe:	604b      	str	r3, [r1, #4]
 8003d00:	4630      	mov	r0, r6
 8003d02:	f000 f82f 	bl	8003d64 <__malloc_unlock>
 8003d06:	f104 000b 	add.w	r0, r4, #11
 8003d0a:	1d23      	adds	r3, r4, #4
 8003d0c:	f020 0007 	bic.w	r0, r0, #7
 8003d10:	1ac2      	subs	r2, r0, r3
 8003d12:	bf1c      	itt	ne
 8003d14:	1a1b      	subne	r3, r3, r0
 8003d16:	50a3      	strne	r3, [r4, r2]
 8003d18:	e7af      	b.n	8003c7a <_malloc_r+0x22>
 8003d1a:	6862      	ldr	r2, [r4, #4]
 8003d1c:	42a3      	cmp	r3, r4
 8003d1e:	bf0c      	ite	eq
 8003d20:	f8c8 2000 	streq.w	r2, [r8]
 8003d24:	605a      	strne	r2, [r3, #4]
 8003d26:	e7eb      	b.n	8003d00 <_malloc_r+0xa8>
 8003d28:	4623      	mov	r3, r4
 8003d2a:	6864      	ldr	r4, [r4, #4]
 8003d2c:	e7ae      	b.n	8003c8c <_malloc_r+0x34>
 8003d2e:	463c      	mov	r4, r7
 8003d30:	687f      	ldr	r7, [r7, #4]
 8003d32:	e7b6      	b.n	8003ca2 <_malloc_r+0x4a>
 8003d34:	461a      	mov	r2, r3
 8003d36:	685b      	ldr	r3, [r3, #4]
 8003d38:	42a3      	cmp	r3, r4
 8003d3a:	d1fb      	bne.n	8003d34 <_malloc_r+0xdc>
 8003d3c:	2300      	movs	r3, #0
 8003d3e:	6053      	str	r3, [r2, #4]
 8003d40:	e7de      	b.n	8003d00 <_malloc_r+0xa8>
 8003d42:	230c      	movs	r3, #12
 8003d44:	6033      	str	r3, [r6, #0]
 8003d46:	4630      	mov	r0, r6
 8003d48:	f000 f80c 	bl	8003d64 <__malloc_unlock>
 8003d4c:	e794      	b.n	8003c78 <_malloc_r+0x20>
 8003d4e:	6005      	str	r5, [r0, #0]
 8003d50:	e7d6      	b.n	8003d00 <_malloc_r+0xa8>
 8003d52:	bf00      	nop
 8003d54:	20000778 	.word	0x20000778

08003d58 <__malloc_lock>:
 8003d58:	4801      	ldr	r0, [pc, #4]	@ (8003d60 <__malloc_lock+0x8>)
 8003d5a:	f7ff b8b2 	b.w	8002ec2 <__retarget_lock_acquire_recursive>
 8003d5e:	bf00      	nop
 8003d60:	20000770 	.word	0x20000770

08003d64 <__malloc_unlock>:
 8003d64:	4801      	ldr	r0, [pc, #4]	@ (8003d6c <__malloc_unlock+0x8>)
 8003d66:	f7ff b8ad 	b.w	8002ec4 <__retarget_lock_release_recursive>
 8003d6a:	bf00      	nop
 8003d6c:	20000770 	.word	0x20000770

08003d70 <_Balloc>:
 8003d70:	b570      	push	{r4, r5, r6, lr}
 8003d72:	69c6      	ldr	r6, [r0, #28]
 8003d74:	4604      	mov	r4, r0
 8003d76:	460d      	mov	r5, r1
 8003d78:	b976      	cbnz	r6, 8003d98 <_Balloc+0x28>
 8003d7a:	2010      	movs	r0, #16
 8003d7c:	f7ff ff42 	bl	8003c04 <malloc>
 8003d80:	4602      	mov	r2, r0
 8003d82:	61e0      	str	r0, [r4, #28]
 8003d84:	b920      	cbnz	r0, 8003d90 <_Balloc+0x20>
 8003d86:	4b18      	ldr	r3, [pc, #96]	@ (8003de8 <_Balloc+0x78>)
 8003d88:	4818      	ldr	r0, [pc, #96]	@ (8003dec <_Balloc+0x7c>)
 8003d8a:	216b      	movs	r1, #107	@ 0x6b
 8003d8c:	f001 ff54 	bl	8005c38 <__assert_func>
 8003d90:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003d94:	6006      	str	r6, [r0, #0]
 8003d96:	60c6      	str	r6, [r0, #12]
 8003d98:	69e6      	ldr	r6, [r4, #28]
 8003d9a:	68f3      	ldr	r3, [r6, #12]
 8003d9c:	b183      	cbz	r3, 8003dc0 <_Balloc+0x50>
 8003d9e:	69e3      	ldr	r3, [r4, #28]
 8003da0:	68db      	ldr	r3, [r3, #12]
 8003da2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003da6:	b9b8      	cbnz	r0, 8003dd8 <_Balloc+0x68>
 8003da8:	2101      	movs	r1, #1
 8003daa:	fa01 f605 	lsl.w	r6, r1, r5
 8003dae:	1d72      	adds	r2, r6, #5
 8003db0:	0092      	lsls	r2, r2, #2
 8003db2:	4620      	mov	r0, r4
 8003db4:	f001 ff5e 	bl	8005c74 <_calloc_r>
 8003db8:	b160      	cbz	r0, 8003dd4 <_Balloc+0x64>
 8003dba:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003dbe:	e00e      	b.n	8003dde <_Balloc+0x6e>
 8003dc0:	2221      	movs	r2, #33	@ 0x21
 8003dc2:	2104      	movs	r1, #4
 8003dc4:	4620      	mov	r0, r4
 8003dc6:	f001 ff55 	bl	8005c74 <_calloc_r>
 8003dca:	69e3      	ldr	r3, [r4, #28]
 8003dcc:	60f0      	str	r0, [r6, #12]
 8003dce:	68db      	ldr	r3, [r3, #12]
 8003dd0:	2b00      	cmp	r3, #0
 8003dd2:	d1e4      	bne.n	8003d9e <_Balloc+0x2e>
 8003dd4:	2000      	movs	r0, #0
 8003dd6:	bd70      	pop	{r4, r5, r6, pc}
 8003dd8:	6802      	ldr	r2, [r0, #0]
 8003dda:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003dde:	2300      	movs	r3, #0
 8003de0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003de4:	e7f7      	b.n	8003dd6 <_Balloc+0x66>
 8003de6:	bf00      	nop
 8003de8:	08006761 	.word	0x08006761
 8003dec:	080067e1 	.word	0x080067e1

08003df0 <_Bfree>:
 8003df0:	b570      	push	{r4, r5, r6, lr}
 8003df2:	69c6      	ldr	r6, [r0, #28]
 8003df4:	4605      	mov	r5, r0
 8003df6:	460c      	mov	r4, r1
 8003df8:	b976      	cbnz	r6, 8003e18 <_Bfree+0x28>
 8003dfa:	2010      	movs	r0, #16
 8003dfc:	f7ff ff02 	bl	8003c04 <malloc>
 8003e00:	4602      	mov	r2, r0
 8003e02:	61e8      	str	r0, [r5, #28]
 8003e04:	b920      	cbnz	r0, 8003e10 <_Bfree+0x20>
 8003e06:	4b09      	ldr	r3, [pc, #36]	@ (8003e2c <_Bfree+0x3c>)
 8003e08:	4809      	ldr	r0, [pc, #36]	@ (8003e30 <_Bfree+0x40>)
 8003e0a:	218f      	movs	r1, #143	@ 0x8f
 8003e0c:	f001 ff14 	bl	8005c38 <__assert_func>
 8003e10:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003e14:	6006      	str	r6, [r0, #0]
 8003e16:	60c6      	str	r6, [r0, #12]
 8003e18:	b13c      	cbz	r4, 8003e2a <_Bfree+0x3a>
 8003e1a:	69eb      	ldr	r3, [r5, #28]
 8003e1c:	6862      	ldr	r2, [r4, #4]
 8003e1e:	68db      	ldr	r3, [r3, #12]
 8003e20:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003e24:	6021      	str	r1, [r4, #0]
 8003e26:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003e2a:	bd70      	pop	{r4, r5, r6, pc}
 8003e2c:	08006761 	.word	0x08006761
 8003e30:	080067e1 	.word	0x080067e1

08003e34 <__multadd>:
 8003e34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e38:	690d      	ldr	r5, [r1, #16]
 8003e3a:	4607      	mov	r7, r0
 8003e3c:	460c      	mov	r4, r1
 8003e3e:	461e      	mov	r6, r3
 8003e40:	f101 0c14 	add.w	ip, r1, #20
 8003e44:	2000      	movs	r0, #0
 8003e46:	f8dc 3000 	ldr.w	r3, [ip]
 8003e4a:	b299      	uxth	r1, r3
 8003e4c:	fb02 6101 	mla	r1, r2, r1, r6
 8003e50:	0c1e      	lsrs	r6, r3, #16
 8003e52:	0c0b      	lsrs	r3, r1, #16
 8003e54:	fb02 3306 	mla	r3, r2, r6, r3
 8003e58:	b289      	uxth	r1, r1
 8003e5a:	3001      	adds	r0, #1
 8003e5c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003e60:	4285      	cmp	r5, r0
 8003e62:	f84c 1b04 	str.w	r1, [ip], #4
 8003e66:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003e6a:	dcec      	bgt.n	8003e46 <__multadd+0x12>
 8003e6c:	b30e      	cbz	r6, 8003eb2 <__multadd+0x7e>
 8003e6e:	68a3      	ldr	r3, [r4, #8]
 8003e70:	42ab      	cmp	r3, r5
 8003e72:	dc19      	bgt.n	8003ea8 <__multadd+0x74>
 8003e74:	6861      	ldr	r1, [r4, #4]
 8003e76:	4638      	mov	r0, r7
 8003e78:	3101      	adds	r1, #1
 8003e7a:	f7ff ff79 	bl	8003d70 <_Balloc>
 8003e7e:	4680      	mov	r8, r0
 8003e80:	b928      	cbnz	r0, 8003e8e <__multadd+0x5a>
 8003e82:	4602      	mov	r2, r0
 8003e84:	4b0c      	ldr	r3, [pc, #48]	@ (8003eb8 <__multadd+0x84>)
 8003e86:	480d      	ldr	r0, [pc, #52]	@ (8003ebc <__multadd+0x88>)
 8003e88:	21ba      	movs	r1, #186	@ 0xba
 8003e8a:	f001 fed5 	bl	8005c38 <__assert_func>
 8003e8e:	6922      	ldr	r2, [r4, #16]
 8003e90:	3202      	adds	r2, #2
 8003e92:	f104 010c 	add.w	r1, r4, #12
 8003e96:	0092      	lsls	r2, r2, #2
 8003e98:	300c      	adds	r0, #12
 8003e9a:	f001 feb5 	bl	8005c08 <memcpy>
 8003e9e:	4621      	mov	r1, r4
 8003ea0:	4638      	mov	r0, r7
 8003ea2:	f7ff ffa5 	bl	8003df0 <_Bfree>
 8003ea6:	4644      	mov	r4, r8
 8003ea8:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003eac:	3501      	adds	r5, #1
 8003eae:	615e      	str	r6, [r3, #20]
 8003eb0:	6125      	str	r5, [r4, #16]
 8003eb2:	4620      	mov	r0, r4
 8003eb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003eb8:	080067d0 	.word	0x080067d0
 8003ebc:	080067e1 	.word	0x080067e1

08003ec0 <__s2b>:
 8003ec0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003ec4:	460c      	mov	r4, r1
 8003ec6:	4615      	mov	r5, r2
 8003ec8:	461f      	mov	r7, r3
 8003eca:	2209      	movs	r2, #9
 8003ecc:	3308      	adds	r3, #8
 8003ece:	4606      	mov	r6, r0
 8003ed0:	fb93 f3f2 	sdiv	r3, r3, r2
 8003ed4:	2100      	movs	r1, #0
 8003ed6:	2201      	movs	r2, #1
 8003ed8:	429a      	cmp	r2, r3
 8003eda:	db09      	blt.n	8003ef0 <__s2b+0x30>
 8003edc:	4630      	mov	r0, r6
 8003ede:	f7ff ff47 	bl	8003d70 <_Balloc>
 8003ee2:	b940      	cbnz	r0, 8003ef6 <__s2b+0x36>
 8003ee4:	4602      	mov	r2, r0
 8003ee6:	4b19      	ldr	r3, [pc, #100]	@ (8003f4c <__s2b+0x8c>)
 8003ee8:	4819      	ldr	r0, [pc, #100]	@ (8003f50 <__s2b+0x90>)
 8003eea:	21d3      	movs	r1, #211	@ 0xd3
 8003eec:	f001 fea4 	bl	8005c38 <__assert_func>
 8003ef0:	0052      	lsls	r2, r2, #1
 8003ef2:	3101      	adds	r1, #1
 8003ef4:	e7f0      	b.n	8003ed8 <__s2b+0x18>
 8003ef6:	9b08      	ldr	r3, [sp, #32]
 8003ef8:	6143      	str	r3, [r0, #20]
 8003efa:	2d09      	cmp	r5, #9
 8003efc:	f04f 0301 	mov.w	r3, #1
 8003f00:	6103      	str	r3, [r0, #16]
 8003f02:	dd16      	ble.n	8003f32 <__s2b+0x72>
 8003f04:	f104 0909 	add.w	r9, r4, #9
 8003f08:	46c8      	mov	r8, r9
 8003f0a:	442c      	add	r4, r5
 8003f0c:	f818 3b01 	ldrb.w	r3, [r8], #1
 8003f10:	4601      	mov	r1, r0
 8003f12:	3b30      	subs	r3, #48	@ 0x30
 8003f14:	220a      	movs	r2, #10
 8003f16:	4630      	mov	r0, r6
 8003f18:	f7ff ff8c 	bl	8003e34 <__multadd>
 8003f1c:	45a0      	cmp	r8, r4
 8003f1e:	d1f5      	bne.n	8003f0c <__s2b+0x4c>
 8003f20:	f1a5 0408 	sub.w	r4, r5, #8
 8003f24:	444c      	add	r4, r9
 8003f26:	1b2d      	subs	r5, r5, r4
 8003f28:	1963      	adds	r3, r4, r5
 8003f2a:	42bb      	cmp	r3, r7
 8003f2c:	db04      	blt.n	8003f38 <__s2b+0x78>
 8003f2e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003f32:	340a      	adds	r4, #10
 8003f34:	2509      	movs	r5, #9
 8003f36:	e7f6      	b.n	8003f26 <__s2b+0x66>
 8003f38:	f814 3b01 	ldrb.w	r3, [r4], #1
 8003f3c:	4601      	mov	r1, r0
 8003f3e:	3b30      	subs	r3, #48	@ 0x30
 8003f40:	220a      	movs	r2, #10
 8003f42:	4630      	mov	r0, r6
 8003f44:	f7ff ff76 	bl	8003e34 <__multadd>
 8003f48:	e7ee      	b.n	8003f28 <__s2b+0x68>
 8003f4a:	bf00      	nop
 8003f4c:	080067d0 	.word	0x080067d0
 8003f50:	080067e1 	.word	0x080067e1

08003f54 <__hi0bits>:
 8003f54:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8003f58:	4603      	mov	r3, r0
 8003f5a:	bf36      	itet	cc
 8003f5c:	0403      	lslcc	r3, r0, #16
 8003f5e:	2000      	movcs	r0, #0
 8003f60:	2010      	movcc	r0, #16
 8003f62:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003f66:	bf3c      	itt	cc
 8003f68:	021b      	lslcc	r3, r3, #8
 8003f6a:	3008      	addcc	r0, #8
 8003f6c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003f70:	bf3c      	itt	cc
 8003f72:	011b      	lslcc	r3, r3, #4
 8003f74:	3004      	addcc	r0, #4
 8003f76:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003f7a:	bf3c      	itt	cc
 8003f7c:	009b      	lslcc	r3, r3, #2
 8003f7e:	3002      	addcc	r0, #2
 8003f80:	2b00      	cmp	r3, #0
 8003f82:	db05      	blt.n	8003f90 <__hi0bits+0x3c>
 8003f84:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8003f88:	f100 0001 	add.w	r0, r0, #1
 8003f8c:	bf08      	it	eq
 8003f8e:	2020      	moveq	r0, #32
 8003f90:	4770      	bx	lr

08003f92 <__lo0bits>:
 8003f92:	6803      	ldr	r3, [r0, #0]
 8003f94:	4602      	mov	r2, r0
 8003f96:	f013 0007 	ands.w	r0, r3, #7
 8003f9a:	d00b      	beq.n	8003fb4 <__lo0bits+0x22>
 8003f9c:	07d9      	lsls	r1, r3, #31
 8003f9e:	d421      	bmi.n	8003fe4 <__lo0bits+0x52>
 8003fa0:	0798      	lsls	r0, r3, #30
 8003fa2:	bf49      	itett	mi
 8003fa4:	085b      	lsrmi	r3, r3, #1
 8003fa6:	089b      	lsrpl	r3, r3, #2
 8003fa8:	2001      	movmi	r0, #1
 8003faa:	6013      	strmi	r3, [r2, #0]
 8003fac:	bf5c      	itt	pl
 8003fae:	6013      	strpl	r3, [r2, #0]
 8003fb0:	2002      	movpl	r0, #2
 8003fb2:	4770      	bx	lr
 8003fb4:	b299      	uxth	r1, r3
 8003fb6:	b909      	cbnz	r1, 8003fbc <__lo0bits+0x2a>
 8003fb8:	0c1b      	lsrs	r3, r3, #16
 8003fba:	2010      	movs	r0, #16
 8003fbc:	b2d9      	uxtb	r1, r3
 8003fbe:	b909      	cbnz	r1, 8003fc4 <__lo0bits+0x32>
 8003fc0:	3008      	adds	r0, #8
 8003fc2:	0a1b      	lsrs	r3, r3, #8
 8003fc4:	0719      	lsls	r1, r3, #28
 8003fc6:	bf04      	itt	eq
 8003fc8:	091b      	lsreq	r3, r3, #4
 8003fca:	3004      	addeq	r0, #4
 8003fcc:	0799      	lsls	r1, r3, #30
 8003fce:	bf04      	itt	eq
 8003fd0:	089b      	lsreq	r3, r3, #2
 8003fd2:	3002      	addeq	r0, #2
 8003fd4:	07d9      	lsls	r1, r3, #31
 8003fd6:	d403      	bmi.n	8003fe0 <__lo0bits+0x4e>
 8003fd8:	085b      	lsrs	r3, r3, #1
 8003fda:	f100 0001 	add.w	r0, r0, #1
 8003fde:	d003      	beq.n	8003fe8 <__lo0bits+0x56>
 8003fe0:	6013      	str	r3, [r2, #0]
 8003fe2:	4770      	bx	lr
 8003fe4:	2000      	movs	r0, #0
 8003fe6:	4770      	bx	lr
 8003fe8:	2020      	movs	r0, #32
 8003fea:	4770      	bx	lr

08003fec <__i2b>:
 8003fec:	b510      	push	{r4, lr}
 8003fee:	460c      	mov	r4, r1
 8003ff0:	2101      	movs	r1, #1
 8003ff2:	f7ff febd 	bl	8003d70 <_Balloc>
 8003ff6:	4602      	mov	r2, r0
 8003ff8:	b928      	cbnz	r0, 8004006 <__i2b+0x1a>
 8003ffa:	4b05      	ldr	r3, [pc, #20]	@ (8004010 <__i2b+0x24>)
 8003ffc:	4805      	ldr	r0, [pc, #20]	@ (8004014 <__i2b+0x28>)
 8003ffe:	f240 1145 	movw	r1, #325	@ 0x145
 8004002:	f001 fe19 	bl	8005c38 <__assert_func>
 8004006:	2301      	movs	r3, #1
 8004008:	6144      	str	r4, [r0, #20]
 800400a:	6103      	str	r3, [r0, #16]
 800400c:	bd10      	pop	{r4, pc}
 800400e:	bf00      	nop
 8004010:	080067d0 	.word	0x080067d0
 8004014:	080067e1 	.word	0x080067e1

08004018 <__multiply>:
 8004018:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800401c:	4614      	mov	r4, r2
 800401e:	690a      	ldr	r2, [r1, #16]
 8004020:	6923      	ldr	r3, [r4, #16]
 8004022:	429a      	cmp	r2, r3
 8004024:	bfa8      	it	ge
 8004026:	4623      	movge	r3, r4
 8004028:	460f      	mov	r7, r1
 800402a:	bfa4      	itt	ge
 800402c:	460c      	movge	r4, r1
 800402e:	461f      	movge	r7, r3
 8004030:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8004034:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8004038:	68a3      	ldr	r3, [r4, #8]
 800403a:	6861      	ldr	r1, [r4, #4]
 800403c:	eb0a 0609 	add.w	r6, sl, r9
 8004040:	42b3      	cmp	r3, r6
 8004042:	b085      	sub	sp, #20
 8004044:	bfb8      	it	lt
 8004046:	3101      	addlt	r1, #1
 8004048:	f7ff fe92 	bl	8003d70 <_Balloc>
 800404c:	b930      	cbnz	r0, 800405c <__multiply+0x44>
 800404e:	4602      	mov	r2, r0
 8004050:	4b44      	ldr	r3, [pc, #272]	@ (8004164 <__multiply+0x14c>)
 8004052:	4845      	ldr	r0, [pc, #276]	@ (8004168 <__multiply+0x150>)
 8004054:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8004058:	f001 fdee 	bl	8005c38 <__assert_func>
 800405c:	f100 0514 	add.w	r5, r0, #20
 8004060:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8004064:	462b      	mov	r3, r5
 8004066:	2200      	movs	r2, #0
 8004068:	4543      	cmp	r3, r8
 800406a:	d321      	bcc.n	80040b0 <__multiply+0x98>
 800406c:	f107 0114 	add.w	r1, r7, #20
 8004070:	f104 0214 	add.w	r2, r4, #20
 8004074:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8004078:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 800407c:	9302      	str	r3, [sp, #8]
 800407e:	1b13      	subs	r3, r2, r4
 8004080:	3b15      	subs	r3, #21
 8004082:	f023 0303 	bic.w	r3, r3, #3
 8004086:	3304      	adds	r3, #4
 8004088:	f104 0715 	add.w	r7, r4, #21
 800408c:	42ba      	cmp	r2, r7
 800408e:	bf38      	it	cc
 8004090:	2304      	movcc	r3, #4
 8004092:	9301      	str	r3, [sp, #4]
 8004094:	9b02      	ldr	r3, [sp, #8]
 8004096:	9103      	str	r1, [sp, #12]
 8004098:	428b      	cmp	r3, r1
 800409a:	d80c      	bhi.n	80040b6 <__multiply+0x9e>
 800409c:	2e00      	cmp	r6, #0
 800409e:	dd03      	ble.n	80040a8 <__multiply+0x90>
 80040a0:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80040a4:	2b00      	cmp	r3, #0
 80040a6:	d05b      	beq.n	8004160 <__multiply+0x148>
 80040a8:	6106      	str	r6, [r0, #16]
 80040aa:	b005      	add	sp, #20
 80040ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80040b0:	f843 2b04 	str.w	r2, [r3], #4
 80040b4:	e7d8      	b.n	8004068 <__multiply+0x50>
 80040b6:	f8b1 a000 	ldrh.w	sl, [r1]
 80040ba:	f1ba 0f00 	cmp.w	sl, #0
 80040be:	d024      	beq.n	800410a <__multiply+0xf2>
 80040c0:	f104 0e14 	add.w	lr, r4, #20
 80040c4:	46a9      	mov	r9, r5
 80040c6:	f04f 0c00 	mov.w	ip, #0
 80040ca:	f85e 7b04 	ldr.w	r7, [lr], #4
 80040ce:	f8d9 3000 	ldr.w	r3, [r9]
 80040d2:	fa1f fb87 	uxth.w	fp, r7
 80040d6:	b29b      	uxth	r3, r3
 80040d8:	fb0a 330b 	mla	r3, sl, fp, r3
 80040dc:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 80040e0:	f8d9 7000 	ldr.w	r7, [r9]
 80040e4:	4463      	add	r3, ip
 80040e6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 80040ea:	fb0a c70b 	mla	r7, sl, fp, ip
 80040ee:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 80040f2:	b29b      	uxth	r3, r3
 80040f4:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 80040f8:	4572      	cmp	r2, lr
 80040fa:	f849 3b04 	str.w	r3, [r9], #4
 80040fe:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8004102:	d8e2      	bhi.n	80040ca <__multiply+0xb2>
 8004104:	9b01      	ldr	r3, [sp, #4]
 8004106:	f845 c003 	str.w	ip, [r5, r3]
 800410a:	9b03      	ldr	r3, [sp, #12]
 800410c:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8004110:	3104      	adds	r1, #4
 8004112:	f1b9 0f00 	cmp.w	r9, #0
 8004116:	d021      	beq.n	800415c <__multiply+0x144>
 8004118:	682b      	ldr	r3, [r5, #0]
 800411a:	f104 0c14 	add.w	ip, r4, #20
 800411e:	46ae      	mov	lr, r5
 8004120:	f04f 0a00 	mov.w	sl, #0
 8004124:	f8bc b000 	ldrh.w	fp, [ip]
 8004128:	f8be 7002 	ldrh.w	r7, [lr, #2]
 800412c:	fb09 770b 	mla	r7, r9, fp, r7
 8004130:	4457      	add	r7, sl
 8004132:	b29b      	uxth	r3, r3
 8004134:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8004138:	f84e 3b04 	str.w	r3, [lr], #4
 800413c:	f85c 3b04 	ldr.w	r3, [ip], #4
 8004140:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8004144:	f8be 3000 	ldrh.w	r3, [lr]
 8004148:	fb09 330a 	mla	r3, r9, sl, r3
 800414c:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8004150:	4562      	cmp	r2, ip
 8004152:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8004156:	d8e5      	bhi.n	8004124 <__multiply+0x10c>
 8004158:	9f01      	ldr	r7, [sp, #4]
 800415a:	51eb      	str	r3, [r5, r7]
 800415c:	3504      	adds	r5, #4
 800415e:	e799      	b.n	8004094 <__multiply+0x7c>
 8004160:	3e01      	subs	r6, #1
 8004162:	e79b      	b.n	800409c <__multiply+0x84>
 8004164:	080067d0 	.word	0x080067d0
 8004168:	080067e1 	.word	0x080067e1

0800416c <__pow5mult>:
 800416c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004170:	4615      	mov	r5, r2
 8004172:	f012 0203 	ands.w	r2, r2, #3
 8004176:	4607      	mov	r7, r0
 8004178:	460e      	mov	r6, r1
 800417a:	d007      	beq.n	800418c <__pow5mult+0x20>
 800417c:	4c25      	ldr	r4, [pc, #148]	@ (8004214 <__pow5mult+0xa8>)
 800417e:	3a01      	subs	r2, #1
 8004180:	2300      	movs	r3, #0
 8004182:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8004186:	f7ff fe55 	bl	8003e34 <__multadd>
 800418a:	4606      	mov	r6, r0
 800418c:	10ad      	asrs	r5, r5, #2
 800418e:	d03d      	beq.n	800420c <__pow5mult+0xa0>
 8004190:	69fc      	ldr	r4, [r7, #28]
 8004192:	b97c      	cbnz	r4, 80041b4 <__pow5mult+0x48>
 8004194:	2010      	movs	r0, #16
 8004196:	f7ff fd35 	bl	8003c04 <malloc>
 800419a:	4602      	mov	r2, r0
 800419c:	61f8      	str	r0, [r7, #28]
 800419e:	b928      	cbnz	r0, 80041ac <__pow5mult+0x40>
 80041a0:	4b1d      	ldr	r3, [pc, #116]	@ (8004218 <__pow5mult+0xac>)
 80041a2:	481e      	ldr	r0, [pc, #120]	@ (800421c <__pow5mult+0xb0>)
 80041a4:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80041a8:	f001 fd46 	bl	8005c38 <__assert_func>
 80041ac:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80041b0:	6004      	str	r4, [r0, #0]
 80041b2:	60c4      	str	r4, [r0, #12]
 80041b4:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80041b8:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80041bc:	b94c      	cbnz	r4, 80041d2 <__pow5mult+0x66>
 80041be:	f240 2171 	movw	r1, #625	@ 0x271
 80041c2:	4638      	mov	r0, r7
 80041c4:	f7ff ff12 	bl	8003fec <__i2b>
 80041c8:	2300      	movs	r3, #0
 80041ca:	f8c8 0008 	str.w	r0, [r8, #8]
 80041ce:	4604      	mov	r4, r0
 80041d0:	6003      	str	r3, [r0, #0]
 80041d2:	f04f 0900 	mov.w	r9, #0
 80041d6:	07eb      	lsls	r3, r5, #31
 80041d8:	d50a      	bpl.n	80041f0 <__pow5mult+0x84>
 80041da:	4631      	mov	r1, r6
 80041dc:	4622      	mov	r2, r4
 80041de:	4638      	mov	r0, r7
 80041e0:	f7ff ff1a 	bl	8004018 <__multiply>
 80041e4:	4631      	mov	r1, r6
 80041e6:	4680      	mov	r8, r0
 80041e8:	4638      	mov	r0, r7
 80041ea:	f7ff fe01 	bl	8003df0 <_Bfree>
 80041ee:	4646      	mov	r6, r8
 80041f0:	106d      	asrs	r5, r5, #1
 80041f2:	d00b      	beq.n	800420c <__pow5mult+0xa0>
 80041f4:	6820      	ldr	r0, [r4, #0]
 80041f6:	b938      	cbnz	r0, 8004208 <__pow5mult+0x9c>
 80041f8:	4622      	mov	r2, r4
 80041fa:	4621      	mov	r1, r4
 80041fc:	4638      	mov	r0, r7
 80041fe:	f7ff ff0b 	bl	8004018 <__multiply>
 8004202:	6020      	str	r0, [r4, #0]
 8004204:	f8c0 9000 	str.w	r9, [r0]
 8004208:	4604      	mov	r4, r0
 800420a:	e7e4      	b.n	80041d6 <__pow5mult+0x6a>
 800420c:	4630      	mov	r0, r6
 800420e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004212:	bf00      	nop
 8004214:	0800683c 	.word	0x0800683c
 8004218:	08006761 	.word	0x08006761
 800421c:	080067e1 	.word	0x080067e1

08004220 <__lshift>:
 8004220:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004224:	460c      	mov	r4, r1
 8004226:	6849      	ldr	r1, [r1, #4]
 8004228:	6923      	ldr	r3, [r4, #16]
 800422a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800422e:	68a3      	ldr	r3, [r4, #8]
 8004230:	4607      	mov	r7, r0
 8004232:	4691      	mov	r9, r2
 8004234:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8004238:	f108 0601 	add.w	r6, r8, #1
 800423c:	42b3      	cmp	r3, r6
 800423e:	db0b      	blt.n	8004258 <__lshift+0x38>
 8004240:	4638      	mov	r0, r7
 8004242:	f7ff fd95 	bl	8003d70 <_Balloc>
 8004246:	4605      	mov	r5, r0
 8004248:	b948      	cbnz	r0, 800425e <__lshift+0x3e>
 800424a:	4602      	mov	r2, r0
 800424c:	4b28      	ldr	r3, [pc, #160]	@ (80042f0 <__lshift+0xd0>)
 800424e:	4829      	ldr	r0, [pc, #164]	@ (80042f4 <__lshift+0xd4>)
 8004250:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8004254:	f001 fcf0 	bl	8005c38 <__assert_func>
 8004258:	3101      	adds	r1, #1
 800425a:	005b      	lsls	r3, r3, #1
 800425c:	e7ee      	b.n	800423c <__lshift+0x1c>
 800425e:	2300      	movs	r3, #0
 8004260:	f100 0114 	add.w	r1, r0, #20
 8004264:	f100 0210 	add.w	r2, r0, #16
 8004268:	4618      	mov	r0, r3
 800426a:	4553      	cmp	r3, sl
 800426c:	db33      	blt.n	80042d6 <__lshift+0xb6>
 800426e:	6920      	ldr	r0, [r4, #16]
 8004270:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8004274:	f104 0314 	add.w	r3, r4, #20
 8004278:	f019 091f 	ands.w	r9, r9, #31
 800427c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8004280:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8004284:	d02b      	beq.n	80042de <__lshift+0xbe>
 8004286:	f1c9 0e20 	rsb	lr, r9, #32
 800428a:	468a      	mov	sl, r1
 800428c:	2200      	movs	r2, #0
 800428e:	6818      	ldr	r0, [r3, #0]
 8004290:	fa00 f009 	lsl.w	r0, r0, r9
 8004294:	4310      	orrs	r0, r2
 8004296:	f84a 0b04 	str.w	r0, [sl], #4
 800429a:	f853 2b04 	ldr.w	r2, [r3], #4
 800429e:	459c      	cmp	ip, r3
 80042a0:	fa22 f20e 	lsr.w	r2, r2, lr
 80042a4:	d8f3      	bhi.n	800428e <__lshift+0x6e>
 80042a6:	ebac 0304 	sub.w	r3, ip, r4
 80042aa:	3b15      	subs	r3, #21
 80042ac:	f023 0303 	bic.w	r3, r3, #3
 80042b0:	3304      	adds	r3, #4
 80042b2:	f104 0015 	add.w	r0, r4, #21
 80042b6:	4584      	cmp	ip, r0
 80042b8:	bf38      	it	cc
 80042ba:	2304      	movcc	r3, #4
 80042bc:	50ca      	str	r2, [r1, r3]
 80042be:	b10a      	cbz	r2, 80042c4 <__lshift+0xa4>
 80042c0:	f108 0602 	add.w	r6, r8, #2
 80042c4:	3e01      	subs	r6, #1
 80042c6:	4638      	mov	r0, r7
 80042c8:	612e      	str	r6, [r5, #16]
 80042ca:	4621      	mov	r1, r4
 80042cc:	f7ff fd90 	bl	8003df0 <_Bfree>
 80042d0:	4628      	mov	r0, r5
 80042d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80042d6:	f842 0f04 	str.w	r0, [r2, #4]!
 80042da:	3301      	adds	r3, #1
 80042dc:	e7c5      	b.n	800426a <__lshift+0x4a>
 80042de:	3904      	subs	r1, #4
 80042e0:	f853 2b04 	ldr.w	r2, [r3], #4
 80042e4:	f841 2f04 	str.w	r2, [r1, #4]!
 80042e8:	459c      	cmp	ip, r3
 80042ea:	d8f9      	bhi.n	80042e0 <__lshift+0xc0>
 80042ec:	e7ea      	b.n	80042c4 <__lshift+0xa4>
 80042ee:	bf00      	nop
 80042f0:	080067d0 	.word	0x080067d0
 80042f4:	080067e1 	.word	0x080067e1

080042f8 <__mcmp>:
 80042f8:	690a      	ldr	r2, [r1, #16]
 80042fa:	4603      	mov	r3, r0
 80042fc:	6900      	ldr	r0, [r0, #16]
 80042fe:	1a80      	subs	r0, r0, r2
 8004300:	b530      	push	{r4, r5, lr}
 8004302:	d10e      	bne.n	8004322 <__mcmp+0x2a>
 8004304:	3314      	adds	r3, #20
 8004306:	3114      	adds	r1, #20
 8004308:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800430c:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8004310:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8004314:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8004318:	4295      	cmp	r5, r2
 800431a:	d003      	beq.n	8004324 <__mcmp+0x2c>
 800431c:	d205      	bcs.n	800432a <__mcmp+0x32>
 800431e:	f04f 30ff 	mov.w	r0, #4294967295
 8004322:	bd30      	pop	{r4, r5, pc}
 8004324:	42a3      	cmp	r3, r4
 8004326:	d3f3      	bcc.n	8004310 <__mcmp+0x18>
 8004328:	e7fb      	b.n	8004322 <__mcmp+0x2a>
 800432a:	2001      	movs	r0, #1
 800432c:	e7f9      	b.n	8004322 <__mcmp+0x2a>
	...

08004330 <__mdiff>:
 8004330:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004334:	4689      	mov	r9, r1
 8004336:	4606      	mov	r6, r0
 8004338:	4611      	mov	r1, r2
 800433a:	4648      	mov	r0, r9
 800433c:	4614      	mov	r4, r2
 800433e:	f7ff ffdb 	bl	80042f8 <__mcmp>
 8004342:	1e05      	subs	r5, r0, #0
 8004344:	d112      	bne.n	800436c <__mdiff+0x3c>
 8004346:	4629      	mov	r1, r5
 8004348:	4630      	mov	r0, r6
 800434a:	f7ff fd11 	bl	8003d70 <_Balloc>
 800434e:	4602      	mov	r2, r0
 8004350:	b928      	cbnz	r0, 800435e <__mdiff+0x2e>
 8004352:	4b3f      	ldr	r3, [pc, #252]	@ (8004450 <__mdiff+0x120>)
 8004354:	f240 2137 	movw	r1, #567	@ 0x237
 8004358:	483e      	ldr	r0, [pc, #248]	@ (8004454 <__mdiff+0x124>)
 800435a:	f001 fc6d 	bl	8005c38 <__assert_func>
 800435e:	2301      	movs	r3, #1
 8004360:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8004364:	4610      	mov	r0, r2
 8004366:	b003      	add	sp, #12
 8004368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800436c:	bfbc      	itt	lt
 800436e:	464b      	movlt	r3, r9
 8004370:	46a1      	movlt	r9, r4
 8004372:	4630      	mov	r0, r6
 8004374:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8004378:	bfba      	itte	lt
 800437a:	461c      	movlt	r4, r3
 800437c:	2501      	movlt	r5, #1
 800437e:	2500      	movge	r5, #0
 8004380:	f7ff fcf6 	bl	8003d70 <_Balloc>
 8004384:	4602      	mov	r2, r0
 8004386:	b918      	cbnz	r0, 8004390 <__mdiff+0x60>
 8004388:	4b31      	ldr	r3, [pc, #196]	@ (8004450 <__mdiff+0x120>)
 800438a:	f240 2145 	movw	r1, #581	@ 0x245
 800438e:	e7e3      	b.n	8004358 <__mdiff+0x28>
 8004390:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8004394:	6926      	ldr	r6, [r4, #16]
 8004396:	60c5      	str	r5, [r0, #12]
 8004398:	f109 0310 	add.w	r3, r9, #16
 800439c:	f109 0514 	add.w	r5, r9, #20
 80043a0:	f104 0e14 	add.w	lr, r4, #20
 80043a4:	f100 0b14 	add.w	fp, r0, #20
 80043a8:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 80043ac:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 80043b0:	9301      	str	r3, [sp, #4]
 80043b2:	46d9      	mov	r9, fp
 80043b4:	f04f 0c00 	mov.w	ip, #0
 80043b8:	9b01      	ldr	r3, [sp, #4]
 80043ba:	f85e 0b04 	ldr.w	r0, [lr], #4
 80043be:	f853 af04 	ldr.w	sl, [r3, #4]!
 80043c2:	9301      	str	r3, [sp, #4]
 80043c4:	fa1f f38a 	uxth.w	r3, sl
 80043c8:	4619      	mov	r1, r3
 80043ca:	b283      	uxth	r3, r0
 80043cc:	1acb      	subs	r3, r1, r3
 80043ce:	0c00      	lsrs	r0, r0, #16
 80043d0:	4463      	add	r3, ip
 80043d2:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80043d6:	eb00 4023 	add.w	r0, r0, r3, asr #16
 80043da:	b29b      	uxth	r3, r3
 80043dc:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 80043e0:	4576      	cmp	r6, lr
 80043e2:	f849 3b04 	str.w	r3, [r9], #4
 80043e6:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80043ea:	d8e5      	bhi.n	80043b8 <__mdiff+0x88>
 80043ec:	1b33      	subs	r3, r6, r4
 80043ee:	3b15      	subs	r3, #21
 80043f0:	f023 0303 	bic.w	r3, r3, #3
 80043f4:	3415      	adds	r4, #21
 80043f6:	3304      	adds	r3, #4
 80043f8:	42a6      	cmp	r6, r4
 80043fa:	bf38      	it	cc
 80043fc:	2304      	movcc	r3, #4
 80043fe:	441d      	add	r5, r3
 8004400:	445b      	add	r3, fp
 8004402:	461e      	mov	r6, r3
 8004404:	462c      	mov	r4, r5
 8004406:	4544      	cmp	r4, r8
 8004408:	d30e      	bcc.n	8004428 <__mdiff+0xf8>
 800440a:	f108 0103 	add.w	r1, r8, #3
 800440e:	1b49      	subs	r1, r1, r5
 8004410:	f021 0103 	bic.w	r1, r1, #3
 8004414:	3d03      	subs	r5, #3
 8004416:	45a8      	cmp	r8, r5
 8004418:	bf38      	it	cc
 800441a:	2100      	movcc	r1, #0
 800441c:	440b      	add	r3, r1
 800441e:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004422:	b191      	cbz	r1, 800444a <__mdiff+0x11a>
 8004424:	6117      	str	r7, [r2, #16]
 8004426:	e79d      	b.n	8004364 <__mdiff+0x34>
 8004428:	f854 1b04 	ldr.w	r1, [r4], #4
 800442c:	46e6      	mov	lr, ip
 800442e:	0c08      	lsrs	r0, r1, #16
 8004430:	fa1c fc81 	uxtah	ip, ip, r1
 8004434:	4471      	add	r1, lr
 8004436:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800443a:	b289      	uxth	r1, r1
 800443c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8004440:	f846 1b04 	str.w	r1, [r6], #4
 8004444:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8004448:	e7dd      	b.n	8004406 <__mdiff+0xd6>
 800444a:	3f01      	subs	r7, #1
 800444c:	e7e7      	b.n	800441e <__mdiff+0xee>
 800444e:	bf00      	nop
 8004450:	080067d0 	.word	0x080067d0
 8004454:	080067e1 	.word	0x080067e1

08004458 <__ulp>:
 8004458:	b082      	sub	sp, #8
 800445a:	ed8d 0b00 	vstr	d0, [sp]
 800445e:	9a01      	ldr	r2, [sp, #4]
 8004460:	4b0f      	ldr	r3, [pc, #60]	@ (80044a0 <__ulp+0x48>)
 8004462:	4013      	ands	r3, r2
 8004464:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 8004468:	2b00      	cmp	r3, #0
 800446a:	dc08      	bgt.n	800447e <__ulp+0x26>
 800446c:	425b      	negs	r3, r3
 800446e:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 8004472:	ea4f 5223 	mov.w	r2, r3, asr #20
 8004476:	da04      	bge.n	8004482 <__ulp+0x2a>
 8004478:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 800447c:	4113      	asrs	r3, r2
 800447e:	2200      	movs	r2, #0
 8004480:	e008      	b.n	8004494 <__ulp+0x3c>
 8004482:	f1a2 0314 	sub.w	r3, r2, #20
 8004486:	2b1e      	cmp	r3, #30
 8004488:	bfda      	itte	le
 800448a:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 800448e:	40da      	lsrle	r2, r3
 8004490:	2201      	movgt	r2, #1
 8004492:	2300      	movs	r3, #0
 8004494:	4619      	mov	r1, r3
 8004496:	4610      	mov	r0, r2
 8004498:	ec41 0b10 	vmov	d0, r0, r1
 800449c:	b002      	add	sp, #8
 800449e:	4770      	bx	lr
 80044a0:	7ff00000 	.word	0x7ff00000

080044a4 <__b2d>:
 80044a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80044a8:	6906      	ldr	r6, [r0, #16]
 80044aa:	f100 0814 	add.w	r8, r0, #20
 80044ae:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 80044b2:	1f37      	subs	r7, r6, #4
 80044b4:	f856 2c04 	ldr.w	r2, [r6, #-4]
 80044b8:	4610      	mov	r0, r2
 80044ba:	f7ff fd4b 	bl	8003f54 <__hi0bits>
 80044be:	f1c0 0320 	rsb	r3, r0, #32
 80044c2:	280a      	cmp	r0, #10
 80044c4:	600b      	str	r3, [r1, #0]
 80044c6:	491b      	ldr	r1, [pc, #108]	@ (8004534 <__b2d+0x90>)
 80044c8:	dc15      	bgt.n	80044f6 <__b2d+0x52>
 80044ca:	f1c0 0c0b 	rsb	ip, r0, #11
 80044ce:	fa22 f30c 	lsr.w	r3, r2, ip
 80044d2:	45b8      	cmp	r8, r7
 80044d4:	ea43 0501 	orr.w	r5, r3, r1
 80044d8:	bf34      	ite	cc
 80044da:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 80044de:	2300      	movcs	r3, #0
 80044e0:	3015      	adds	r0, #21
 80044e2:	fa02 f000 	lsl.w	r0, r2, r0
 80044e6:	fa23 f30c 	lsr.w	r3, r3, ip
 80044ea:	4303      	orrs	r3, r0
 80044ec:	461c      	mov	r4, r3
 80044ee:	ec45 4b10 	vmov	d0, r4, r5
 80044f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80044f6:	45b8      	cmp	r8, r7
 80044f8:	bf3a      	itte	cc
 80044fa:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 80044fe:	f1a6 0708 	subcc.w	r7, r6, #8
 8004502:	2300      	movcs	r3, #0
 8004504:	380b      	subs	r0, #11
 8004506:	d012      	beq.n	800452e <__b2d+0x8a>
 8004508:	f1c0 0120 	rsb	r1, r0, #32
 800450c:	fa23 f401 	lsr.w	r4, r3, r1
 8004510:	4082      	lsls	r2, r0
 8004512:	4322      	orrs	r2, r4
 8004514:	4547      	cmp	r7, r8
 8004516:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 800451a:	bf8c      	ite	hi
 800451c:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 8004520:	2200      	movls	r2, #0
 8004522:	4083      	lsls	r3, r0
 8004524:	40ca      	lsrs	r2, r1
 8004526:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 800452a:	4313      	orrs	r3, r2
 800452c:	e7de      	b.n	80044ec <__b2d+0x48>
 800452e:	ea42 0501 	orr.w	r5, r2, r1
 8004532:	e7db      	b.n	80044ec <__b2d+0x48>
 8004534:	3ff00000 	.word	0x3ff00000

08004538 <__d2b>:
 8004538:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800453c:	460f      	mov	r7, r1
 800453e:	2101      	movs	r1, #1
 8004540:	ec59 8b10 	vmov	r8, r9, d0
 8004544:	4616      	mov	r6, r2
 8004546:	f7ff fc13 	bl	8003d70 <_Balloc>
 800454a:	4604      	mov	r4, r0
 800454c:	b930      	cbnz	r0, 800455c <__d2b+0x24>
 800454e:	4602      	mov	r2, r0
 8004550:	4b23      	ldr	r3, [pc, #140]	@ (80045e0 <__d2b+0xa8>)
 8004552:	4824      	ldr	r0, [pc, #144]	@ (80045e4 <__d2b+0xac>)
 8004554:	f240 310f 	movw	r1, #783	@ 0x30f
 8004558:	f001 fb6e 	bl	8005c38 <__assert_func>
 800455c:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8004560:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004564:	b10d      	cbz	r5, 800456a <__d2b+0x32>
 8004566:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800456a:	9301      	str	r3, [sp, #4]
 800456c:	f1b8 0300 	subs.w	r3, r8, #0
 8004570:	d023      	beq.n	80045ba <__d2b+0x82>
 8004572:	4668      	mov	r0, sp
 8004574:	9300      	str	r3, [sp, #0]
 8004576:	f7ff fd0c 	bl	8003f92 <__lo0bits>
 800457a:	e9dd 1200 	ldrd	r1, r2, [sp]
 800457e:	b1d0      	cbz	r0, 80045b6 <__d2b+0x7e>
 8004580:	f1c0 0320 	rsb	r3, r0, #32
 8004584:	fa02 f303 	lsl.w	r3, r2, r3
 8004588:	430b      	orrs	r3, r1
 800458a:	40c2      	lsrs	r2, r0
 800458c:	6163      	str	r3, [r4, #20]
 800458e:	9201      	str	r2, [sp, #4]
 8004590:	9b01      	ldr	r3, [sp, #4]
 8004592:	61a3      	str	r3, [r4, #24]
 8004594:	2b00      	cmp	r3, #0
 8004596:	bf0c      	ite	eq
 8004598:	2201      	moveq	r2, #1
 800459a:	2202      	movne	r2, #2
 800459c:	6122      	str	r2, [r4, #16]
 800459e:	b1a5      	cbz	r5, 80045ca <__d2b+0x92>
 80045a0:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80045a4:	4405      	add	r5, r0
 80045a6:	603d      	str	r5, [r7, #0]
 80045a8:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80045ac:	6030      	str	r0, [r6, #0]
 80045ae:	4620      	mov	r0, r4
 80045b0:	b003      	add	sp, #12
 80045b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80045b6:	6161      	str	r1, [r4, #20]
 80045b8:	e7ea      	b.n	8004590 <__d2b+0x58>
 80045ba:	a801      	add	r0, sp, #4
 80045bc:	f7ff fce9 	bl	8003f92 <__lo0bits>
 80045c0:	9b01      	ldr	r3, [sp, #4]
 80045c2:	6163      	str	r3, [r4, #20]
 80045c4:	3020      	adds	r0, #32
 80045c6:	2201      	movs	r2, #1
 80045c8:	e7e8      	b.n	800459c <__d2b+0x64>
 80045ca:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80045ce:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80045d2:	6038      	str	r0, [r7, #0]
 80045d4:	6918      	ldr	r0, [r3, #16]
 80045d6:	f7ff fcbd 	bl	8003f54 <__hi0bits>
 80045da:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80045de:	e7e5      	b.n	80045ac <__d2b+0x74>
 80045e0:	080067d0 	.word	0x080067d0
 80045e4:	080067e1 	.word	0x080067e1

080045e8 <__ratio>:
 80045e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80045ec:	b085      	sub	sp, #20
 80045ee:	e9cd 1000 	strd	r1, r0, [sp]
 80045f2:	a902      	add	r1, sp, #8
 80045f4:	f7ff ff56 	bl	80044a4 <__b2d>
 80045f8:	9800      	ldr	r0, [sp, #0]
 80045fa:	a903      	add	r1, sp, #12
 80045fc:	ec55 4b10 	vmov	r4, r5, d0
 8004600:	f7ff ff50 	bl	80044a4 <__b2d>
 8004604:	9b01      	ldr	r3, [sp, #4]
 8004606:	6919      	ldr	r1, [r3, #16]
 8004608:	9b00      	ldr	r3, [sp, #0]
 800460a:	691b      	ldr	r3, [r3, #16]
 800460c:	1ac9      	subs	r1, r1, r3
 800460e:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8004612:	1a9b      	subs	r3, r3, r2
 8004614:	ec5b ab10 	vmov	sl, fp, d0
 8004618:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800461c:	2b00      	cmp	r3, #0
 800461e:	bfce      	itee	gt
 8004620:	462a      	movgt	r2, r5
 8004622:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8004626:	465a      	movle	r2, fp
 8004628:	462f      	mov	r7, r5
 800462a:	46d9      	mov	r9, fp
 800462c:	bfcc      	ite	gt
 800462e:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8004632:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 8004636:	464b      	mov	r3, r9
 8004638:	4652      	mov	r2, sl
 800463a:	4620      	mov	r0, r4
 800463c:	4639      	mov	r1, r7
 800463e:	f7fc f925 	bl	800088c <__aeabi_ddiv>
 8004642:	ec41 0b10 	vmov	d0, r0, r1
 8004646:	b005      	add	sp, #20
 8004648:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800464c <__copybits>:
 800464c:	3901      	subs	r1, #1
 800464e:	b570      	push	{r4, r5, r6, lr}
 8004650:	1149      	asrs	r1, r1, #5
 8004652:	6914      	ldr	r4, [r2, #16]
 8004654:	3101      	adds	r1, #1
 8004656:	f102 0314 	add.w	r3, r2, #20
 800465a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800465e:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8004662:	1f05      	subs	r5, r0, #4
 8004664:	42a3      	cmp	r3, r4
 8004666:	d30c      	bcc.n	8004682 <__copybits+0x36>
 8004668:	1aa3      	subs	r3, r4, r2
 800466a:	3b11      	subs	r3, #17
 800466c:	f023 0303 	bic.w	r3, r3, #3
 8004670:	3211      	adds	r2, #17
 8004672:	42a2      	cmp	r2, r4
 8004674:	bf88      	it	hi
 8004676:	2300      	movhi	r3, #0
 8004678:	4418      	add	r0, r3
 800467a:	2300      	movs	r3, #0
 800467c:	4288      	cmp	r0, r1
 800467e:	d305      	bcc.n	800468c <__copybits+0x40>
 8004680:	bd70      	pop	{r4, r5, r6, pc}
 8004682:	f853 6b04 	ldr.w	r6, [r3], #4
 8004686:	f845 6f04 	str.w	r6, [r5, #4]!
 800468a:	e7eb      	b.n	8004664 <__copybits+0x18>
 800468c:	f840 3b04 	str.w	r3, [r0], #4
 8004690:	e7f4      	b.n	800467c <__copybits+0x30>

08004692 <__any_on>:
 8004692:	f100 0214 	add.w	r2, r0, #20
 8004696:	6900      	ldr	r0, [r0, #16]
 8004698:	114b      	asrs	r3, r1, #5
 800469a:	4298      	cmp	r0, r3
 800469c:	b510      	push	{r4, lr}
 800469e:	db11      	blt.n	80046c4 <__any_on+0x32>
 80046a0:	dd0a      	ble.n	80046b8 <__any_on+0x26>
 80046a2:	f011 011f 	ands.w	r1, r1, #31
 80046a6:	d007      	beq.n	80046b8 <__any_on+0x26>
 80046a8:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80046ac:	fa24 f001 	lsr.w	r0, r4, r1
 80046b0:	fa00 f101 	lsl.w	r1, r0, r1
 80046b4:	428c      	cmp	r4, r1
 80046b6:	d10b      	bne.n	80046d0 <__any_on+0x3e>
 80046b8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80046bc:	4293      	cmp	r3, r2
 80046be:	d803      	bhi.n	80046c8 <__any_on+0x36>
 80046c0:	2000      	movs	r0, #0
 80046c2:	bd10      	pop	{r4, pc}
 80046c4:	4603      	mov	r3, r0
 80046c6:	e7f7      	b.n	80046b8 <__any_on+0x26>
 80046c8:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80046cc:	2900      	cmp	r1, #0
 80046ce:	d0f5      	beq.n	80046bc <__any_on+0x2a>
 80046d0:	2001      	movs	r0, #1
 80046d2:	e7f6      	b.n	80046c2 <__any_on+0x30>

080046d4 <sulp>:
 80046d4:	b570      	push	{r4, r5, r6, lr}
 80046d6:	4604      	mov	r4, r0
 80046d8:	460d      	mov	r5, r1
 80046da:	ec45 4b10 	vmov	d0, r4, r5
 80046de:	4616      	mov	r6, r2
 80046e0:	f7ff feba 	bl	8004458 <__ulp>
 80046e4:	ec51 0b10 	vmov	r0, r1, d0
 80046e8:	b17e      	cbz	r6, 800470a <sulp+0x36>
 80046ea:	f3c5 530a 	ubfx	r3, r5, #20, #11
 80046ee:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 80046f2:	2b00      	cmp	r3, #0
 80046f4:	dd09      	ble.n	800470a <sulp+0x36>
 80046f6:	051b      	lsls	r3, r3, #20
 80046f8:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 80046fc:	2400      	movs	r4, #0
 80046fe:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 8004702:	4622      	mov	r2, r4
 8004704:	462b      	mov	r3, r5
 8004706:	f7fb ff97 	bl	8000638 <__aeabi_dmul>
 800470a:	ec41 0b10 	vmov	d0, r0, r1
 800470e:	bd70      	pop	{r4, r5, r6, pc}

08004710 <_strtod_l>:
 8004710:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004714:	b09f      	sub	sp, #124	@ 0x7c
 8004716:	460c      	mov	r4, r1
 8004718:	9217      	str	r2, [sp, #92]	@ 0x5c
 800471a:	2200      	movs	r2, #0
 800471c:	921a      	str	r2, [sp, #104]	@ 0x68
 800471e:	9005      	str	r0, [sp, #20]
 8004720:	f04f 0a00 	mov.w	sl, #0
 8004724:	f04f 0b00 	mov.w	fp, #0
 8004728:	460a      	mov	r2, r1
 800472a:	9219      	str	r2, [sp, #100]	@ 0x64
 800472c:	7811      	ldrb	r1, [r2, #0]
 800472e:	292b      	cmp	r1, #43	@ 0x2b
 8004730:	d04a      	beq.n	80047c8 <_strtod_l+0xb8>
 8004732:	d838      	bhi.n	80047a6 <_strtod_l+0x96>
 8004734:	290d      	cmp	r1, #13
 8004736:	d832      	bhi.n	800479e <_strtod_l+0x8e>
 8004738:	2908      	cmp	r1, #8
 800473a:	d832      	bhi.n	80047a2 <_strtod_l+0x92>
 800473c:	2900      	cmp	r1, #0
 800473e:	d03b      	beq.n	80047b8 <_strtod_l+0xa8>
 8004740:	2200      	movs	r2, #0
 8004742:	920b      	str	r2, [sp, #44]	@ 0x2c
 8004744:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 8004746:	782a      	ldrb	r2, [r5, #0]
 8004748:	2a30      	cmp	r2, #48	@ 0x30
 800474a:	f040 80b3 	bne.w	80048b4 <_strtod_l+0x1a4>
 800474e:	786a      	ldrb	r2, [r5, #1]
 8004750:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 8004754:	2a58      	cmp	r2, #88	@ 0x58
 8004756:	d16e      	bne.n	8004836 <_strtod_l+0x126>
 8004758:	9302      	str	r3, [sp, #8]
 800475a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800475c:	9301      	str	r3, [sp, #4]
 800475e:	ab1a      	add	r3, sp, #104	@ 0x68
 8004760:	9300      	str	r3, [sp, #0]
 8004762:	4a8e      	ldr	r2, [pc, #568]	@ (800499c <_strtod_l+0x28c>)
 8004764:	9805      	ldr	r0, [sp, #20]
 8004766:	ab1b      	add	r3, sp, #108	@ 0x6c
 8004768:	a919      	add	r1, sp, #100	@ 0x64
 800476a:	f001 faff 	bl	8005d6c <__gethex>
 800476e:	f010 060f 	ands.w	r6, r0, #15
 8004772:	4604      	mov	r4, r0
 8004774:	d005      	beq.n	8004782 <_strtod_l+0x72>
 8004776:	2e06      	cmp	r6, #6
 8004778:	d128      	bne.n	80047cc <_strtod_l+0xbc>
 800477a:	3501      	adds	r5, #1
 800477c:	2300      	movs	r3, #0
 800477e:	9519      	str	r5, [sp, #100]	@ 0x64
 8004780:	930b      	str	r3, [sp, #44]	@ 0x2c
 8004782:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8004784:	2b00      	cmp	r3, #0
 8004786:	f040 858e 	bne.w	80052a6 <_strtod_l+0xb96>
 800478a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800478c:	b1cb      	cbz	r3, 80047c2 <_strtod_l+0xb2>
 800478e:	4652      	mov	r2, sl
 8004790:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 8004794:	ec43 2b10 	vmov	d0, r2, r3
 8004798:	b01f      	add	sp, #124	@ 0x7c
 800479a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800479e:	2920      	cmp	r1, #32
 80047a0:	d1ce      	bne.n	8004740 <_strtod_l+0x30>
 80047a2:	3201      	adds	r2, #1
 80047a4:	e7c1      	b.n	800472a <_strtod_l+0x1a>
 80047a6:	292d      	cmp	r1, #45	@ 0x2d
 80047a8:	d1ca      	bne.n	8004740 <_strtod_l+0x30>
 80047aa:	2101      	movs	r1, #1
 80047ac:	910b      	str	r1, [sp, #44]	@ 0x2c
 80047ae:	1c51      	adds	r1, r2, #1
 80047b0:	9119      	str	r1, [sp, #100]	@ 0x64
 80047b2:	7852      	ldrb	r2, [r2, #1]
 80047b4:	2a00      	cmp	r2, #0
 80047b6:	d1c5      	bne.n	8004744 <_strtod_l+0x34>
 80047b8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80047ba:	9419      	str	r4, [sp, #100]	@ 0x64
 80047bc:	2b00      	cmp	r3, #0
 80047be:	f040 8570 	bne.w	80052a2 <_strtod_l+0xb92>
 80047c2:	4652      	mov	r2, sl
 80047c4:	465b      	mov	r3, fp
 80047c6:	e7e5      	b.n	8004794 <_strtod_l+0x84>
 80047c8:	2100      	movs	r1, #0
 80047ca:	e7ef      	b.n	80047ac <_strtod_l+0x9c>
 80047cc:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 80047ce:	b13a      	cbz	r2, 80047e0 <_strtod_l+0xd0>
 80047d0:	2135      	movs	r1, #53	@ 0x35
 80047d2:	a81c      	add	r0, sp, #112	@ 0x70
 80047d4:	f7ff ff3a 	bl	800464c <__copybits>
 80047d8:	991a      	ldr	r1, [sp, #104]	@ 0x68
 80047da:	9805      	ldr	r0, [sp, #20]
 80047dc:	f7ff fb08 	bl	8003df0 <_Bfree>
 80047e0:	3e01      	subs	r6, #1
 80047e2:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 80047e4:	2e04      	cmp	r6, #4
 80047e6:	d806      	bhi.n	80047f6 <_strtod_l+0xe6>
 80047e8:	e8df f006 	tbb	[pc, r6]
 80047ec:	201d0314 	.word	0x201d0314
 80047f0:	14          	.byte	0x14
 80047f1:	00          	.byte	0x00
 80047f2:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 80047f6:	05e1      	lsls	r1, r4, #23
 80047f8:	bf48      	it	mi
 80047fa:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 80047fe:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004802:	0d1b      	lsrs	r3, r3, #20
 8004804:	051b      	lsls	r3, r3, #20
 8004806:	2b00      	cmp	r3, #0
 8004808:	d1bb      	bne.n	8004782 <_strtod_l+0x72>
 800480a:	f7fe fb2f 	bl	8002e6c <__errno>
 800480e:	2322      	movs	r3, #34	@ 0x22
 8004810:	6003      	str	r3, [r0, #0]
 8004812:	e7b6      	b.n	8004782 <_strtod_l+0x72>
 8004814:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 8004818:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 800481c:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8004820:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8004824:	e7e7      	b.n	80047f6 <_strtod_l+0xe6>
 8004826:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 80049a4 <_strtod_l+0x294>
 800482a:	e7e4      	b.n	80047f6 <_strtod_l+0xe6>
 800482c:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 8004830:	f04f 3aff 	mov.w	sl, #4294967295
 8004834:	e7df      	b.n	80047f6 <_strtod_l+0xe6>
 8004836:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004838:	1c5a      	adds	r2, r3, #1
 800483a:	9219      	str	r2, [sp, #100]	@ 0x64
 800483c:	785b      	ldrb	r3, [r3, #1]
 800483e:	2b30      	cmp	r3, #48	@ 0x30
 8004840:	d0f9      	beq.n	8004836 <_strtod_l+0x126>
 8004842:	2b00      	cmp	r3, #0
 8004844:	d09d      	beq.n	8004782 <_strtod_l+0x72>
 8004846:	2301      	movs	r3, #1
 8004848:	9309      	str	r3, [sp, #36]	@ 0x24
 800484a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800484c:	930c      	str	r3, [sp, #48]	@ 0x30
 800484e:	2300      	movs	r3, #0
 8004850:	9308      	str	r3, [sp, #32]
 8004852:	930a      	str	r3, [sp, #40]	@ 0x28
 8004854:	461f      	mov	r7, r3
 8004856:	220a      	movs	r2, #10
 8004858:	9819      	ldr	r0, [sp, #100]	@ 0x64
 800485a:	7805      	ldrb	r5, [r0, #0]
 800485c:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 8004860:	b2d9      	uxtb	r1, r3
 8004862:	2909      	cmp	r1, #9
 8004864:	d928      	bls.n	80048b8 <_strtod_l+0x1a8>
 8004866:	494e      	ldr	r1, [pc, #312]	@ (80049a0 <_strtod_l+0x290>)
 8004868:	2201      	movs	r2, #1
 800486a:	f001 f9ab 	bl	8005bc4 <strncmp>
 800486e:	2800      	cmp	r0, #0
 8004870:	d032      	beq.n	80048d8 <_strtod_l+0x1c8>
 8004872:	2000      	movs	r0, #0
 8004874:	462a      	mov	r2, r5
 8004876:	4681      	mov	r9, r0
 8004878:	463d      	mov	r5, r7
 800487a:	4603      	mov	r3, r0
 800487c:	2a65      	cmp	r2, #101	@ 0x65
 800487e:	d001      	beq.n	8004884 <_strtod_l+0x174>
 8004880:	2a45      	cmp	r2, #69	@ 0x45
 8004882:	d114      	bne.n	80048ae <_strtod_l+0x19e>
 8004884:	b91d      	cbnz	r5, 800488e <_strtod_l+0x17e>
 8004886:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004888:	4302      	orrs	r2, r0
 800488a:	d095      	beq.n	80047b8 <_strtod_l+0xa8>
 800488c:	2500      	movs	r5, #0
 800488e:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8004890:	1c62      	adds	r2, r4, #1
 8004892:	9219      	str	r2, [sp, #100]	@ 0x64
 8004894:	7862      	ldrb	r2, [r4, #1]
 8004896:	2a2b      	cmp	r2, #43	@ 0x2b
 8004898:	d077      	beq.n	800498a <_strtod_l+0x27a>
 800489a:	2a2d      	cmp	r2, #45	@ 0x2d
 800489c:	d07b      	beq.n	8004996 <_strtod_l+0x286>
 800489e:	f04f 0c00 	mov.w	ip, #0
 80048a2:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 80048a6:	2909      	cmp	r1, #9
 80048a8:	f240 8082 	bls.w	80049b0 <_strtod_l+0x2a0>
 80048ac:	9419      	str	r4, [sp, #100]	@ 0x64
 80048ae:	f04f 0800 	mov.w	r8, #0
 80048b2:	e0a2      	b.n	80049fa <_strtod_l+0x2ea>
 80048b4:	2300      	movs	r3, #0
 80048b6:	e7c7      	b.n	8004848 <_strtod_l+0x138>
 80048b8:	2f08      	cmp	r7, #8
 80048ba:	bfd5      	itete	le
 80048bc:	990a      	ldrle	r1, [sp, #40]	@ 0x28
 80048be:	9908      	ldrgt	r1, [sp, #32]
 80048c0:	fb02 3301 	mlale	r3, r2, r1, r3
 80048c4:	fb02 3301 	mlagt	r3, r2, r1, r3
 80048c8:	f100 0001 	add.w	r0, r0, #1
 80048cc:	bfd4      	ite	le
 80048ce:	930a      	strle	r3, [sp, #40]	@ 0x28
 80048d0:	9308      	strgt	r3, [sp, #32]
 80048d2:	3701      	adds	r7, #1
 80048d4:	9019      	str	r0, [sp, #100]	@ 0x64
 80048d6:	e7bf      	b.n	8004858 <_strtod_l+0x148>
 80048d8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80048da:	1c5a      	adds	r2, r3, #1
 80048dc:	9219      	str	r2, [sp, #100]	@ 0x64
 80048de:	785a      	ldrb	r2, [r3, #1]
 80048e0:	b37f      	cbz	r7, 8004942 <_strtod_l+0x232>
 80048e2:	4681      	mov	r9, r0
 80048e4:	463d      	mov	r5, r7
 80048e6:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 80048ea:	2b09      	cmp	r3, #9
 80048ec:	d912      	bls.n	8004914 <_strtod_l+0x204>
 80048ee:	2301      	movs	r3, #1
 80048f0:	e7c4      	b.n	800487c <_strtod_l+0x16c>
 80048f2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80048f4:	1c5a      	adds	r2, r3, #1
 80048f6:	9219      	str	r2, [sp, #100]	@ 0x64
 80048f8:	785a      	ldrb	r2, [r3, #1]
 80048fa:	3001      	adds	r0, #1
 80048fc:	2a30      	cmp	r2, #48	@ 0x30
 80048fe:	d0f8      	beq.n	80048f2 <_strtod_l+0x1e2>
 8004900:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8004904:	2b08      	cmp	r3, #8
 8004906:	f200 84d3 	bhi.w	80052b0 <_strtod_l+0xba0>
 800490a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800490c:	930c      	str	r3, [sp, #48]	@ 0x30
 800490e:	4681      	mov	r9, r0
 8004910:	2000      	movs	r0, #0
 8004912:	4605      	mov	r5, r0
 8004914:	3a30      	subs	r2, #48	@ 0x30
 8004916:	f100 0301 	add.w	r3, r0, #1
 800491a:	d02a      	beq.n	8004972 <_strtod_l+0x262>
 800491c:	4499      	add	r9, r3
 800491e:	eb00 0c05 	add.w	ip, r0, r5
 8004922:	462b      	mov	r3, r5
 8004924:	210a      	movs	r1, #10
 8004926:	4563      	cmp	r3, ip
 8004928:	d10d      	bne.n	8004946 <_strtod_l+0x236>
 800492a:	1c69      	adds	r1, r5, #1
 800492c:	4401      	add	r1, r0
 800492e:	4428      	add	r0, r5
 8004930:	2808      	cmp	r0, #8
 8004932:	dc16      	bgt.n	8004962 <_strtod_l+0x252>
 8004934:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8004936:	230a      	movs	r3, #10
 8004938:	fb03 2300 	mla	r3, r3, r0, r2
 800493c:	930a      	str	r3, [sp, #40]	@ 0x28
 800493e:	2300      	movs	r3, #0
 8004940:	e018      	b.n	8004974 <_strtod_l+0x264>
 8004942:	4638      	mov	r0, r7
 8004944:	e7da      	b.n	80048fc <_strtod_l+0x1ec>
 8004946:	2b08      	cmp	r3, #8
 8004948:	f103 0301 	add.w	r3, r3, #1
 800494c:	dc03      	bgt.n	8004956 <_strtod_l+0x246>
 800494e:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8004950:	434e      	muls	r6, r1
 8004952:	960a      	str	r6, [sp, #40]	@ 0x28
 8004954:	e7e7      	b.n	8004926 <_strtod_l+0x216>
 8004956:	2b10      	cmp	r3, #16
 8004958:	bfde      	ittt	le
 800495a:	9e08      	ldrle	r6, [sp, #32]
 800495c:	434e      	mulle	r6, r1
 800495e:	9608      	strle	r6, [sp, #32]
 8004960:	e7e1      	b.n	8004926 <_strtod_l+0x216>
 8004962:	280f      	cmp	r0, #15
 8004964:	dceb      	bgt.n	800493e <_strtod_l+0x22e>
 8004966:	9808      	ldr	r0, [sp, #32]
 8004968:	230a      	movs	r3, #10
 800496a:	fb03 2300 	mla	r3, r3, r0, r2
 800496e:	9308      	str	r3, [sp, #32]
 8004970:	e7e5      	b.n	800493e <_strtod_l+0x22e>
 8004972:	4629      	mov	r1, r5
 8004974:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004976:	1c50      	adds	r0, r2, #1
 8004978:	9019      	str	r0, [sp, #100]	@ 0x64
 800497a:	7852      	ldrb	r2, [r2, #1]
 800497c:	4618      	mov	r0, r3
 800497e:	460d      	mov	r5, r1
 8004980:	e7b1      	b.n	80048e6 <_strtod_l+0x1d6>
 8004982:	f04f 0900 	mov.w	r9, #0
 8004986:	2301      	movs	r3, #1
 8004988:	e77d      	b.n	8004886 <_strtod_l+0x176>
 800498a:	f04f 0c00 	mov.w	ip, #0
 800498e:	1ca2      	adds	r2, r4, #2
 8004990:	9219      	str	r2, [sp, #100]	@ 0x64
 8004992:	78a2      	ldrb	r2, [r4, #2]
 8004994:	e785      	b.n	80048a2 <_strtod_l+0x192>
 8004996:	f04f 0c01 	mov.w	ip, #1
 800499a:	e7f8      	b.n	800498e <_strtod_l+0x27e>
 800499c:	08006950 	.word	0x08006950
 80049a0:	08006938 	.word	0x08006938
 80049a4:	7ff00000 	.word	0x7ff00000
 80049a8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80049aa:	1c51      	adds	r1, r2, #1
 80049ac:	9119      	str	r1, [sp, #100]	@ 0x64
 80049ae:	7852      	ldrb	r2, [r2, #1]
 80049b0:	2a30      	cmp	r2, #48	@ 0x30
 80049b2:	d0f9      	beq.n	80049a8 <_strtod_l+0x298>
 80049b4:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 80049b8:	2908      	cmp	r1, #8
 80049ba:	f63f af78 	bhi.w	80048ae <_strtod_l+0x19e>
 80049be:	3a30      	subs	r2, #48	@ 0x30
 80049c0:	920e      	str	r2, [sp, #56]	@ 0x38
 80049c2:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80049c4:	920f      	str	r2, [sp, #60]	@ 0x3c
 80049c6:	f04f 080a 	mov.w	r8, #10
 80049ca:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80049cc:	1c56      	adds	r6, r2, #1
 80049ce:	9619      	str	r6, [sp, #100]	@ 0x64
 80049d0:	7852      	ldrb	r2, [r2, #1]
 80049d2:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 80049d6:	f1be 0f09 	cmp.w	lr, #9
 80049da:	d939      	bls.n	8004a50 <_strtod_l+0x340>
 80049dc:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80049de:	1a76      	subs	r6, r6, r1
 80049e0:	2e08      	cmp	r6, #8
 80049e2:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 80049e6:	dc03      	bgt.n	80049f0 <_strtod_l+0x2e0>
 80049e8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80049ea:	4588      	cmp	r8, r1
 80049ec:	bfa8      	it	ge
 80049ee:	4688      	movge	r8, r1
 80049f0:	f1bc 0f00 	cmp.w	ip, #0
 80049f4:	d001      	beq.n	80049fa <_strtod_l+0x2ea>
 80049f6:	f1c8 0800 	rsb	r8, r8, #0
 80049fa:	2d00      	cmp	r5, #0
 80049fc:	d14e      	bne.n	8004a9c <_strtod_l+0x38c>
 80049fe:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004a00:	4308      	orrs	r0, r1
 8004a02:	f47f aebe 	bne.w	8004782 <_strtod_l+0x72>
 8004a06:	2b00      	cmp	r3, #0
 8004a08:	f47f aed6 	bne.w	80047b8 <_strtod_l+0xa8>
 8004a0c:	2a69      	cmp	r2, #105	@ 0x69
 8004a0e:	d028      	beq.n	8004a62 <_strtod_l+0x352>
 8004a10:	dc25      	bgt.n	8004a5e <_strtod_l+0x34e>
 8004a12:	2a49      	cmp	r2, #73	@ 0x49
 8004a14:	d025      	beq.n	8004a62 <_strtod_l+0x352>
 8004a16:	2a4e      	cmp	r2, #78	@ 0x4e
 8004a18:	f47f aece 	bne.w	80047b8 <_strtod_l+0xa8>
 8004a1c:	499b      	ldr	r1, [pc, #620]	@ (8004c8c <_strtod_l+0x57c>)
 8004a1e:	a819      	add	r0, sp, #100	@ 0x64
 8004a20:	f001 fbc6 	bl	80061b0 <__match>
 8004a24:	2800      	cmp	r0, #0
 8004a26:	f43f aec7 	beq.w	80047b8 <_strtod_l+0xa8>
 8004a2a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004a2c:	781b      	ldrb	r3, [r3, #0]
 8004a2e:	2b28      	cmp	r3, #40	@ 0x28
 8004a30:	d12e      	bne.n	8004a90 <_strtod_l+0x380>
 8004a32:	4997      	ldr	r1, [pc, #604]	@ (8004c90 <_strtod_l+0x580>)
 8004a34:	aa1c      	add	r2, sp, #112	@ 0x70
 8004a36:	a819      	add	r0, sp, #100	@ 0x64
 8004a38:	f001 fbce 	bl	80061d8 <__hexnan>
 8004a3c:	2805      	cmp	r0, #5
 8004a3e:	d127      	bne.n	8004a90 <_strtod_l+0x380>
 8004a40:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8004a42:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 8004a46:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 8004a4a:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 8004a4e:	e698      	b.n	8004782 <_strtod_l+0x72>
 8004a50:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8004a52:	fb08 2101 	mla	r1, r8, r1, r2
 8004a56:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 8004a5a:	920e      	str	r2, [sp, #56]	@ 0x38
 8004a5c:	e7b5      	b.n	80049ca <_strtod_l+0x2ba>
 8004a5e:	2a6e      	cmp	r2, #110	@ 0x6e
 8004a60:	e7da      	b.n	8004a18 <_strtod_l+0x308>
 8004a62:	498c      	ldr	r1, [pc, #560]	@ (8004c94 <_strtod_l+0x584>)
 8004a64:	a819      	add	r0, sp, #100	@ 0x64
 8004a66:	f001 fba3 	bl	80061b0 <__match>
 8004a6a:	2800      	cmp	r0, #0
 8004a6c:	f43f aea4 	beq.w	80047b8 <_strtod_l+0xa8>
 8004a70:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004a72:	4989      	ldr	r1, [pc, #548]	@ (8004c98 <_strtod_l+0x588>)
 8004a74:	3b01      	subs	r3, #1
 8004a76:	a819      	add	r0, sp, #100	@ 0x64
 8004a78:	9319      	str	r3, [sp, #100]	@ 0x64
 8004a7a:	f001 fb99 	bl	80061b0 <__match>
 8004a7e:	b910      	cbnz	r0, 8004a86 <_strtod_l+0x376>
 8004a80:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004a82:	3301      	adds	r3, #1
 8004a84:	9319      	str	r3, [sp, #100]	@ 0x64
 8004a86:	f8df b220 	ldr.w	fp, [pc, #544]	@ 8004ca8 <_strtod_l+0x598>
 8004a8a:	f04f 0a00 	mov.w	sl, #0
 8004a8e:	e678      	b.n	8004782 <_strtod_l+0x72>
 8004a90:	4882      	ldr	r0, [pc, #520]	@ (8004c9c <_strtod_l+0x58c>)
 8004a92:	f001 f8c9 	bl	8005c28 <nan>
 8004a96:	ec5b ab10 	vmov	sl, fp, d0
 8004a9a:	e672      	b.n	8004782 <_strtod_l+0x72>
 8004a9c:	eba8 0309 	sub.w	r3, r8, r9
 8004aa0:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8004aa2:	9309      	str	r3, [sp, #36]	@ 0x24
 8004aa4:	2f00      	cmp	r7, #0
 8004aa6:	bf08      	it	eq
 8004aa8:	462f      	moveq	r7, r5
 8004aaa:	2d10      	cmp	r5, #16
 8004aac:	462c      	mov	r4, r5
 8004aae:	bfa8      	it	ge
 8004ab0:	2410      	movge	r4, #16
 8004ab2:	f7fb fd47 	bl	8000544 <__aeabi_ui2d>
 8004ab6:	2d09      	cmp	r5, #9
 8004ab8:	4682      	mov	sl, r0
 8004aba:	468b      	mov	fp, r1
 8004abc:	dc13      	bgt.n	8004ae6 <_strtod_l+0x3d6>
 8004abe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004ac0:	2b00      	cmp	r3, #0
 8004ac2:	f43f ae5e 	beq.w	8004782 <_strtod_l+0x72>
 8004ac6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004ac8:	dd78      	ble.n	8004bbc <_strtod_l+0x4ac>
 8004aca:	2b16      	cmp	r3, #22
 8004acc:	dc5f      	bgt.n	8004b8e <_strtod_l+0x47e>
 8004ace:	4974      	ldr	r1, [pc, #464]	@ (8004ca0 <_strtod_l+0x590>)
 8004ad0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004ad4:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004ad8:	4652      	mov	r2, sl
 8004ada:	465b      	mov	r3, fp
 8004adc:	f7fb fdac 	bl	8000638 <__aeabi_dmul>
 8004ae0:	4682      	mov	sl, r0
 8004ae2:	468b      	mov	fp, r1
 8004ae4:	e64d      	b.n	8004782 <_strtod_l+0x72>
 8004ae6:	4b6e      	ldr	r3, [pc, #440]	@ (8004ca0 <_strtod_l+0x590>)
 8004ae8:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8004aec:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8004af0:	f7fb fda2 	bl	8000638 <__aeabi_dmul>
 8004af4:	4682      	mov	sl, r0
 8004af6:	9808      	ldr	r0, [sp, #32]
 8004af8:	468b      	mov	fp, r1
 8004afa:	f7fb fd23 	bl	8000544 <__aeabi_ui2d>
 8004afe:	4602      	mov	r2, r0
 8004b00:	460b      	mov	r3, r1
 8004b02:	4650      	mov	r0, sl
 8004b04:	4659      	mov	r1, fp
 8004b06:	f7fb fbe1 	bl	80002cc <__adddf3>
 8004b0a:	2d0f      	cmp	r5, #15
 8004b0c:	4682      	mov	sl, r0
 8004b0e:	468b      	mov	fp, r1
 8004b10:	ddd5      	ble.n	8004abe <_strtod_l+0x3ae>
 8004b12:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004b14:	1b2c      	subs	r4, r5, r4
 8004b16:	441c      	add	r4, r3
 8004b18:	2c00      	cmp	r4, #0
 8004b1a:	f340 8096 	ble.w	8004c4a <_strtod_l+0x53a>
 8004b1e:	f014 030f 	ands.w	r3, r4, #15
 8004b22:	d00a      	beq.n	8004b3a <_strtod_l+0x42a>
 8004b24:	495e      	ldr	r1, [pc, #376]	@ (8004ca0 <_strtod_l+0x590>)
 8004b26:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004b2a:	4652      	mov	r2, sl
 8004b2c:	465b      	mov	r3, fp
 8004b2e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004b32:	f7fb fd81 	bl	8000638 <__aeabi_dmul>
 8004b36:	4682      	mov	sl, r0
 8004b38:	468b      	mov	fp, r1
 8004b3a:	f034 040f 	bics.w	r4, r4, #15
 8004b3e:	d073      	beq.n	8004c28 <_strtod_l+0x518>
 8004b40:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 8004b44:	dd48      	ble.n	8004bd8 <_strtod_l+0x4c8>
 8004b46:	2400      	movs	r4, #0
 8004b48:	46a0      	mov	r8, r4
 8004b4a:	940a      	str	r4, [sp, #40]	@ 0x28
 8004b4c:	46a1      	mov	r9, r4
 8004b4e:	9a05      	ldr	r2, [sp, #20]
 8004b50:	f8df b154 	ldr.w	fp, [pc, #340]	@ 8004ca8 <_strtod_l+0x598>
 8004b54:	2322      	movs	r3, #34	@ 0x22
 8004b56:	6013      	str	r3, [r2, #0]
 8004b58:	f04f 0a00 	mov.w	sl, #0
 8004b5c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004b5e:	2b00      	cmp	r3, #0
 8004b60:	f43f ae0f 	beq.w	8004782 <_strtod_l+0x72>
 8004b64:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004b66:	9805      	ldr	r0, [sp, #20]
 8004b68:	f7ff f942 	bl	8003df0 <_Bfree>
 8004b6c:	9805      	ldr	r0, [sp, #20]
 8004b6e:	4649      	mov	r1, r9
 8004b70:	f7ff f93e 	bl	8003df0 <_Bfree>
 8004b74:	9805      	ldr	r0, [sp, #20]
 8004b76:	4641      	mov	r1, r8
 8004b78:	f7ff f93a 	bl	8003df0 <_Bfree>
 8004b7c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004b7e:	9805      	ldr	r0, [sp, #20]
 8004b80:	f7ff f936 	bl	8003df0 <_Bfree>
 8004b84:	9805      	ldr	r0, [sp, #20]
 8004b86:	4621      	mov	r1, r4
 8004b88:	f7ff f932 	bl	8003df0 <_Bfree>
 8004b8c:	e5f9      	b.n	8004782 <_strtod_l+0x72>
 8004b8e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004b90:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 8004b94:	4293      	cmp	r3, r2
 8004b96:	dbbc      	blt.n	8004b12 <_strtod_l+0x402>
 8004b98:	4c41      	ldr	r4, [pc, #260]	@ (8004ca0 <_strtod_l+0x590>)
 8004b9a:	f1c5 050f 	rsb	r5, r5, #15
 8004b9e:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8004ba2:	4652      	mov	r2, sl
 8004ba4:	465b      	mov	r3, fp
 8004ba6:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004baa:	f7fb fd45 	bl	8000638 <__aeabi_dmul>
 8004bae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004bb0:	1b5d      	subs	r5, r3, r5
 8004bb2:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8004bb6:	e9d4 2300 	ldrd	r2, r3, [r4]
 8004bba:	e78f      	b.n	8004adc <_strtod_l+0x3cc>
 8004bbc:	3316      	adds	r3, #22
 8004bbe:	dba8      	blt.n	8004b12 <_strtod_l+0x402>
 8004bc0:	4b37      	ldr	r3, [pc, #220]	@ (8004ca0 <_strtod_l+0x590>)
 8004bc2:	eba9 0808 	sub.w	r8, r9, r8
 8004bc6:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 8004bca:	e9d8 2300 	ldrd	r2, r3, [r8]
 8004bce:	4650      	mov	r0, sl
 8004bd0:	4659      	mov	r1, fp
 8004bd2:	f7fb fe5b 	bl	800088c <__aeabi_ddiv>
 8004bd6:	e783      	b.n	8004ae0 <_strtod_l+0x3d0>
 8004bd8:	4b32      	ldr	r3, [pc, #200]	@ (8004ca4 <_strtod_l+0x594>)
 8004bda:	9308      	str	r3, [sp, #32]
 8004bdc:	2300      	movs	r3, #0
 8004bde:	1124      	asrs	r4, r4, #4
 8004be0:	4650      	mov	r0, sl
 8004be2:	4659      	mov	r1, fp
 8004be4:	461e      	mov	r6, r3
 8004be6:	2c01      	cmp	r4, #1
 8004be8:	dc21      	bgt.n	8004c2e <_strtod_l+0x51e>
 8004bea:	b10b      	cbz	r3, 8004bf0 <_strtod_l+0x4e0>
 8004bec:	4682      	mov	sl, r0
 8004bee:	468b      	mov	fp, r1
 8004bf0:	492c      	ldr	r1, [pc, #176]	@ (8004ca4 <_strtod_l+0x594>)
 8004bf2:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 8004bf6:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8004bfa:	4652      	mov	r2, sl
 8004bfc:	465b      	mov	r3, fp
 8004bfe:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004c02:	f7fb fd19 	bl	8000638 <__aeabi_dmul>
 8004c06:	4b28      	ldr	r3, [pc, #160]	@ (8004ca8 <_strtod_l+0x598>)
 8004c08:	460a      	mov	r2, r1
 8004c0a:	400b      	ands	r3, r1
 8004c0c:	4927      	ldr	r1, [pc, #156]	@ (8004cac <_strtod_l+0x59c>)
 8004c0e:	428b      	cmp	r3, r1
 8004c10:	4682      	mov	sl, r0
 8004c12:	d898      	bhi.n	8004b46 <_strtod_l+0x436>
 8004c14:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8004c18:	428b      	cmp	r3, r1
 8004c1a:	bf86      	itte	hi
 8004c1c:	f8df b090 	ldrhi.w	fp, [pc, #144]	@ 8004cb0 <_strtod_l+0x5a0>
 8004c20:	f04f 3aff 	movhi.w	sl, #4294967295
 8004c24:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8004c28:	2300      	movs	r3, #0
 8004c2a:	9308      	str	r3, [sp, #32]
 8004c2c:	e07a      	b.n	8004d24 <_strtod_l+0x614>
 8004c2e:	07e2      	lsls	r2, r4, #31
 8004c30:	d505      	bpl.n	8004c3e <_strtod_l+0x52e>
 8004c32:	9b08      	ldr	r3, [sp, #32]
 8004c34:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c38:	f7fb fcfe 	bl	8000638 <__aeabi_dmul>
 8004c3c:	2301      	movs	r3, #1
 8004c3e:	9a08      	ldr	r2, [sp, #32]
 8004c40:	3208      	adds	r2, #8
 8004c42:	3601      	adds	r6, #1
 8004c44:	1064      	asrs	r4, r4, #1
 8004c46:	9208      	str	r2, [sp, #32]
 8004c48:	e7cd      	b.n	8004be6 <_strtod_l+0x4d6>
 8004c4a:	d0ed      	beq.n	8004c28 <_strtod_l+0x518>
 8004c4c:	4264      	negs	r4, r4
 8004c4e:	f014 020f 	ands.w	r2, r4, #15
 8004c52:	d00a      	beq.n	8004c6a <_strtod_l+0x55a>
 8004c54:	4b12      	ldr	r3, [pc, #72]	@ (8004ca0 <_strtod_l+0x590>)
 8004c56:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004c5a:	4650      	mov	r0, sl
 8004c5c:	4659      	mov	r1, fp
 8004c5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c62:	f7fb fe13 	bl	800088c <__aeabi_ddiv>
 8004c66:	4682      	mov	sl, r0
 8004c68:	468b      	mov	fp, r1
 8004c6a:	1124      	asrs	r4, r4, #4
 8004c6c:	d0dc      	beq.n	8004c28 <_strtod_l+0x518>
 8004c6e:	2c1f      	cmp	r4, #31
 8004c70:	dd20      	ble.n	8004cb4 <_strtod_l+0x5a4>
 8004c72:	2400      	movs	r4, #0
 8004c74:	46a0      	mov	r8, r4
 8004c76:	940a      	str	r4, [sp, #40]	@ 0x28
 8004c78:	46a1      	mov	r9, r4
 8004c7a:	9a05      	ldr	r2, [sp, #20]
 8004c7c:	2322      	movs	r3, #34	@ 0x22
 8004c7e:	f04f 0a00 	mov.w	sl, #0
 8004c82:	f04f 0b00 	mov.w	fp, #0
 8004c86:	6013      	str	r3, [r2, #0]
 8004c88:	e768      	b.n	8004b5c <_strtod_l+0x44c>
 8004c8a:	bf00      	nop
 8004c8c:	08006728 	.word	0x08006728
 8004c90:	0800693c 	.word	0x0800693c
 8004c94:	08006720 	.word	0x08006720
 8004c98:	08006757 	.word	0x08006757
 8004c9c:	080069e4 	.word	0x080069e4
 8004ca0:	08006870 	.word	0x08006870
 8004ca4:	08006848 	.word	0x08006848
 8004ca8:	7ff00000 	.word	0x7ff00000
 8004cac:	7ca00000 	.word	0x7ca00000
 8004cb0:	7fefffff 	.word	0x7fefffff
 8004cb4:	f014 0310 	ands.w	r3, r4, #16
 8004cb8:	bf18      	it	ne
 8004cba:	236a      	movne	r3, #106	@ 0x6a
 8004cbc:	4ea9      	ldr	r6, [pc, #676]	@ (8004f64 <_strtod_l+0x854>)
 8004cbe:	9308      	str	r3, [sp, #32]
 8004cc0:	4650      	mov	r0, sl
 8004cc2:	4659      	mov	r1, fp
 8004cc4:	2300      	movs	r3, #0
 8004cc6:	07e2      	lsls	r2, r4, #31
 8004cc8:	d504      	bpl.n	8004cd4 <_strtod_l+0x5c4>
 8004cca:	e9d6 2300 	ldrd	r2, r3, [r6]
 8004cce:	f7fb fcb3 	bl	8000638 <__aeabi_dmul>
 8004cd2:	2301      	movs	r3, #1
 8004cd4:	1064      	asrs	r4, r4, #1
 8004cd6:	f106 0608 	add.w	r6, r6, #8
 8004cda:	d1f4      	bne.n	8004cc6 <_strtod_l+0x5b6>
 8004cdc:	b10b      	cbz	r3, 8004ce2 <_strtod_l+0x5d2>
 8004cde:	4682      	mov	sl, r0
 8004ce0:	468b      	mov	fp, r1
 8004ce2:	9b08      	ldr	r3, [sp, #32]
 8004ce4:	b1b3      	cbz	r3, 8004d14 <_strtod_l+0x604>
 8004ce6:	f3cb 520a 	ubfx	r2, fp, #20, #11
 8004cea:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 8004cee:	2b00      	cmp	r3, #0
 8004cf0:	4659      	mov	r1, fp
 8004cf2:	dd0f      	ble.n	8004d14 <_strtod_l+0x604>
 8004cf4:	2b1f      	cmp	r3, #31
 8004cf6:	dd55      	ble.n	8004da4 <_strtod_l+0x694>
 8004cf8:	2b34      	cmp	r3, #52	@ 0x34
 8004cfa:	bfde      	ittt	le
 8004cfc:	f04f 33ff 	movle.w	r3, #4294967295
 8004d00:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 8004d04:	4093      	lslle	r3, r2
 8004d06:	f04f 0a00 	mov.w	sl, #0
 8004d0a:	bfcc      	ite	gt
 8004d0c:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 8004d10:	ea03 0b01 	andle.w	fp, r3, r1
 8004d14:	2200      	movs	r2, #0
 8004d16:	2300      	movs	r3, #0
 8004d18:	4650      	mov	r0, sl
 8004d1a:	4659      	mov	r1, fp
 8004d1c:	f7fb fef4 	bl	8000b08 <__aeabi_dcmpeq>
 8004d20:	2800      	cmp	r0, #0
 8004d22:	d1a6      	bne.n	8004c72 <_strtod_l+0x562>
 8004d24:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004d26:	9300      	str	r3, [sp, #0]
 8004d28:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8004d2a:	9805      	ldr	r0, [sp, #20]
 8004d2c:	462b      	mov	r3, r5
 8004d2e:	463a      	mov	r2, r7
 8004d30:	f7ff f8c6 	bl	8003ec0 <__s2b>
 8004d34:	900a      	str	r0, [sp, #40]	@ 0x28
 8004d36:	2800      	cmp	r0, #0
 8004d38:	f43f af05 	beq.w	8004b46 <_strtod_l+0x436>
 8004d3c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004d3e:	2a00      	cmp	r2, #0
 8004d40:	eba9 0308 	sub.w	r3, r9, r8
 8004d44:	bfa8      	it	ge
 8004d46:	2300      	movge	r3, #0
 8004d48:	9312      	str	r3, [sp, #72]	@ 0x48
 8004d4a:	2400      	movs	r4, #0
 8004d4c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8004d50:	9316      	str	r3, [sp, #88]	@ 0x58
 8004d52:	46a0      	mov	r8, r4
 8004d54:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004d56:	9805      	ldr	r0, [sp, #20]
 8004d58:	6859      	ldr	r1, [r3, #4]
 8004d5a:	f7ff f809 	bl	8003d70 <_Balloc>
 8004d5e:	4681      	mov	r9, r0
 8004d60:	2800      	cmp	r0, #0
 8004d62:	f43f aef4 	beq.w	8004b4e <_strtod_l+0x43e>
 8004d66:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004d68:	691a      	ldr	r2, [r3, #16]
 8004d6a:	3202      	adds	r2, #2
 8004d6c:	f103 010c 	add.w	r1, r3, #12
 8004d70:	0092      	lsls	r2, r2, #2
 8004d72:	300c      	adds	r0, #12
 8004d74:	f000 ff48 	bl	8005c08 <memcpy>
 8004d78:	ec4b ab10 	vmov	d0, sl, fp
 8004d7c:	9805      	ldr	r0, [sp, #20]
 8004d7e:	aa1c      	add	r2, sp, #112	@ 0x70
 8004d80:	a91b      	add	r1, sp, #108	@ 0x6c
 8004d82:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 8004d86:	f7ff fbd7 	bl	8004538 <__d2b>
 8004d8a:	901a      	str	r0, [sp, #104]	@ 0x68
 8004d8c:	2800      	cmp	r0, #0
 8004d8e:	f43f aede 	beq.w	8004b4e <_strtod_l+0x43e>
 8004d92:	9805      	ldr	r0, [sp, #20]
 8004d94:	2101      	movs	r1, #1
 8004d96:	f7ff f929 	bl	8003fec <__i2b>
 8004d9a:	4680      	mov	r8, r0
 8004d9c:	b948      	cbnz	r0, 8004db2 <_strtod_l+0x6a2>
 8004d9e:	f04f 0800 	mov.w	r8, #0
 8004da2:	e6d4      	b.n	8004b4e <_strtod_l+0x43e>
 8004da4:	f04f 32ff 	mov.w	r2, #4294967295
 8004da8:	fa02 f303 	lsl.w	r3, r2, r3
 8004dac:	ea03 0a0a 	and.w	sl, r3, sl
 8004db0:	e7b0      	b.n	8004d14 <_strtod_l+0x604>
 8004db2:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 8004db4:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8004db6:	2d00      	cmp	r5, #0
 8004db8:	bfab      	itete	ge
 8004dba:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 8004dbc:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 8004dbe:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 8004dc0:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 8004dc2:	bfac      	ite	ge
 8004dc4:	18ef      	addge	r7, r5, r3
 8004dc6:	1b5e      	sublt	r6, r3, r5
 8004dc8:	9b08      	ldr	r3, [sp, #32]
 8004dca:	1aed      	subs	r5, r5, r3
 8004dcc:	4415      	add	r5, r2
 8004dce:	4b66      	ldr	r3, [pc, #408]	@ (8004f68 <_strtod_l+0x858>)
 8004dd0:	3d01      	subs	r5, #1
 8004dd2:	429d      	cmp	r5, r3
 8004dd4:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 8004dd8:	da50      	bge.n	8004e7c <_strtod_l+0x76c>
 8004dda:	1b5b      	subs	r3, r3, r5
 8004ddc:	2b1f      	cmp	r3, #31
 8004dde:	eba2 0203 	sub.w	r2, r2, r3
 8004de2:	f04f 0101 	mov.w	r1, #1
 8004de6:	dc3d      	bgt.n	8004e64 <_strtod_l+0x754>
 8004de8:	fa01 f303 	lsl.w	r3, r1, r3
 8004dec:	9313      	str	r3, [sp, #76]	@ 0x4c
 8004dee:	2300      	movs	r3, #0
 8004df0:	9310      	str	r3, [sp, #64]	@ 0x40
 8004df2:	18bd      	adds	r5, r7, r2
 8004df4:	9b08      	ldr	r3, [sp, #32]
 8004df6:	42af      	cmp	r7, r5
 8004df8:	4416      	add	r6, r2
 8004dfa:	441e      	add	r6, r3
 8004dfc:	463b      	mov	r3, r7
 8004dfe:	bfa8      	it	ge
 8004e00:	462b      	movge	r3, r5
 8004e02:	42b3      	cmp	r3, r6
 8004e04:	bfa8      	it	ge
 8004e06:	4633      	movge	r3, r6
 8004e08:	2b00      	cmp	r3, #0
 8004e0a:	bfc2      	ittt	gt
 8004e0c:	1aed      	subgt	r5, r5, r3
 8004e0e:	1af6      	subgt	r6, r6, r3
 8004e10:	1aff      	subgt	r7, r7, r3
 8004e12:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8004e14:	2b00      	cmp	r3, #0
 8004e16:	dd16      	ble.n	8004e46 <_strtod_l+0x736>
 8004e18:	4641      	mov	r1, r8
 8004e1a:	9805      	ldr	r0, [sp, #20]
 8004e1c:	461a      	mov	r2, r3
 8004e1e:	f7ff f9a5 	bl	800416c <__pow5mult>
 8004e22:	4680      	mov	r8, r0
 8004e24:	2800      	cmp	r0, #0
 8004e26:	d0ba      	beq.n	8004d9e <_strtod_l+0x68e>
 8004e28:	4601      	mov	r1, r0
 8004e2a:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8004e2c:	9805      	ldr	r0, [sp, #20]
 8004e2e:	f7ff f8f3 	bl	8004018 <__multiply>
 8004e32:	900e      	str	r0, [sp, #56]	@ 0x38
 8004e34:	2800      	cmp	r0, #0
 8004e36:	f43f ae8a 	beq.w	8004b4e <_strtod_l+0x43e>
 8004e3a:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004e3c:	9805      	ldr	r0, [sp, #20]
 8004e3e:	f7fe ffd7 	bl	8003df0 <_Bfree>
 8004e42:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004e44:	931a      	str	r3, [sp, #104]	@ 0x68
 8004e46:	2d00      	cmp	r5, #0
 8004e48:	dc1d      	bgt.n	8004e86 <_strtod_l+0x776>
 8004e4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004e4c:	2b00      	cmp	r3, #0
 8004e4e:	dd23      	ble.n	8004e98 <_strtod_l+0x788>
 8004e50:	4649      	mov	r1, r9
 8004e52:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8004e54:	9805      	ldr	r0, [sp, #20]
 8004e56:	f7ff f989 	bl	800416c <__pow5mult>
 8004e5a:	4681      	mov	r9, r0
 8004e5c:	b9e0      	cbnz	r0, 8004e98 <_strtod_l+0x788>
 8004e5e:	f04f 0900 	mov.w	r9, #0
 8004e62:	e674      	b.n	8004b4e <_strtod_l+0x43e>
 8004e64:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 8004e68:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 8004e6c:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 8004e70:	35e2      	adds	r5, #226	@ 0xe2
 8004e72:	fa01 f305 	lsl.w	r3, r1, r5
 8004e76:	9310      	str	r3, [sp, #64]	@ 0x40
 8004e78:	9113      	str	r1, [sp, #76]	@ 0x4c
 8004e7a:	e7ba      	b.n	8004df2 <_strtod_l+0x6e2>
 8004e7c:	2300      	movs	r3, #0
 8004e7e:	9310      	str	r3, [sp, #64]	@ 0x40
 8004e80:	2301      	movs	r3, #1
 8004e82:	9313      	str	r3, [sp, #76]	@ 0x4c
 8004e84:	e7b5      	b.n	8004df2 <_strtod_l+0x6e2>
 8004e86:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004e88:	9805      	ldr	r0, [sp, #20]
 8004e8a:	462a      	mov	r2, r5
 8004e8c:	f7ff f9c8 	bl	8004220 <__lshift>
 8004e90:	901a      	str	r0, [sp, #104]	@ 0x68
 8004e92:	2800      	cmp	r0, #0
 8004e94:	d1d9      	bne.n	8004e4a <_strtod_l+0x73a>
 8004e96:	e65a      	b.n	8004b4e <_strtod_l+0x43e>
 8004e98:	2e00      	cmp	r6, #0
 8004e9a:	dd07      	ble.n	8004eac <_strtod_l+0x79c>
 8004e9c:	4649      	mov	r1, r9
 8004e9e:	9805      	ldr	r0, [sp, #20]
 8004ea0:	4632      	mov	r2, r6
 8004ea2:	f7ff f9bd 	bl	8004220 <__lshift>
 8004ea6:	4681      	mov	r9, r0
 8004ea8:	2800      	cmp	r0, #0
 8004eaa:	d0d8      	beq.n	8004e5e <_strtod_l+0x74e>
 8004eac:	2f00      	cmp	r7, #0
 8004eae:	dd08      	ble.n	8004ec2 <_strtod_l+0x7b2>
 8004eb0:	4641      	mov	r1, r8
 8004eb2:	9805      	ldr	r0, [sp, #20]
 8004eb4:	463a      	mov	r2, r7
 8004eb6:	f7ff f9b3 	bl	8004220 <__lshift>
 8004eba:	4680      	mov	r8, r0
 8004ebc:	2800      	cmp	r0, #0
 8004ebe:	f43f ae46 	beq.w	8004b4e <_strtod_l+0x43e>
 8004ec2:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004ec4:	9805      	ldr	r0, [sp, #20]
 8004ec6:	464a      	mov	r2, r9
 8004ec8:	f7ff fa32 	bl	8004330 <__mdiff>
 8004ecc:	4604      	mov	r4, r0
 8004ece:	2800      	cmp	r0, #0
 8004ed0:	f43f ae3d 	beq.w	8004b4e <_strtod_l+0x43e>
 8004ed4:	68c3      	ldr	r3, [r0, #12]
 8004ed6:	930f      	str	r3, [sp, #60]	@ 0x3c
 8004ed8:	2300      	movs	r3, #0
 8004eda:	60c3      	str	r3, [r0, #12]
 8004edc:	4641      	mov	r1, r8
 8004ede:	f7ff fa0b 	bl	80042f8 <__mcmp>
 8004ee2:	2800      	cmp	r0, #0
 8004ee4:	da46      	bge.n	8004f74 <_strtod_l+0x864>
 8004ee6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004ee8:	ea53 030a 	orrs.w	r3, r3, sl
 8004eec:	d16c      	bne.n	8004fc8 <_strtod_l+0x8b8>
 8004eee:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004ef2:	2b00      	cmp	r3, #0
 8004ef4:	d168      	bne.n	8004fc8 <_strtod_l+0x8b8>
 8004ef6:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004efa:	0d1b      	lsrs	r3, r3, #20
 8004efc:	051b      	lsls	r3, r3, #20
 8004efe:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8004f02:	d961      	bls.n	8004fc8 <_strtod_l+0x8b8>
 8004f04:	6963      	ldr	r3, [r4, #20]
 8004f06:	b913      	cbnz	r3, 8004f0e <_strtod_l+0x7fe>
 8004f08:	6923      	ldr	r3, [r4, #16]
 8004f0a:	2b01      	cmp	r3, #1
 8004f0c:	dd5c      	ble.n	8004fc8 <_strtod_l+0x8b8>
 8004f0e:	4621      	mov	r1, r4
 8004f10:	2201      	movs	r2, #1
 8004f12:	9805      	ldr	r0, [sp, #20]
 8004f14:	f7ff f984 	bl	8004220 <__lshift>
 8004f18:	4641      	mov	r1, r8
 8004f1a:	4604      	mov	r4, r0
 8004f1c:	f7ff f9ec 	bl	80042f8 <__mcmp>
 8004f20:	2800      	cmp	r0, #0
 8004f22:	dd51      	ble.n	8004fc8 <_strtod_l+0x8b8>
 8004f24:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004f28:	9a08      	ldr	r2, [sp, #32]
 8004f2a:	0d1b      	lsrs	r3, r3, #20
 8004f2c:	051b      	lsls	r3, r3, #20
 8004f2e:	2a00      	cmp	r2, #0
 8004f30:	d06b      	beq.n	800500a <_strtod_l+0x8fa>
 8004f32:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8004f36:	d868      	bhi.n	800500a <_strtod_l+0x8fa>
 8004f38:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 8004f3c:	f67f ae9d 	bls.w	8004c7a <_strtod_l+0x56a>
 8004f40:	4b0a      	ldr	r3, [pc, #40]	@ (8004f6c <_strtod_l+0x85c>)
 8004f42:	4650      	mov	r0, sl
 8004f44:	4659      	mov	r1, fp
 8004f46:	2200      	movs	r2, #0
 8004f48:	f7fb fb76 	bl	8000638 <__aeabi_dmul>
 8004f4c:	4b08      	ldr	r3, [pc, #32]	@ (8004f70 <_strtod_l+0x860>)
 8004f4e:	400b      	ands	r3, r1
 8004f50:	4682      	mov	sl, r0
 8004f52:	468b      	mov	fp, r1
 8004f54:	2b00      	cmp	r3, #0
 8004f56:	f47f ae05 	bne.w	8004b64 <_strtod_l+0x454>
 8004f5a:	9a05      	ldr	r2, [sp, #20]
 8004f5c:	2322      	movs	r3, #34	@ 0x22
 8004f5e:	6013      	str	r3, [r2, #0]
 8004f60:	e600      	b.n	8004b64 <_strtod_l+0x454>
 8004f62:	bf00      	nop
 8004f64:	08006968 	.word	0x08006968
 8004f68:	fffffc02 	.word	0xfffffc02
 8004f6c:	39500000 	.word	0x39500000
 8004f70:	7ff00000 	.word	0x7ff00000
 8004f74:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 8004f78:	d165      	bne.n	8005046 <_strtod_l+0x936>
 8004f7a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8004f7c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004f80:	b35a      	cbz	r2, 8004fda <_strtod_l+0x8ca>
 8004f82:	4a9f      	ldr	r2, [pc, #636]	@ (8005200 <_strtod_l+0xaf0>)
 8004f84:	4293      	cmp	r3, r2
 8004f86:	d12b      	bne.n	8004fe0 <_strtod_l+0x8d0>
 8004f88:	9b08      	ldr	r3, [sp, #32]
 8004f8a:	4651      	mov	r1, sl
 8004f8c:	b303      	cbz	r3, 8004fd0 <_strtod_l+0x8c0>
 8004f8e:	4b9d      	ldr	r3, [pc, #628]	@ (8005204 <_strtod_l+0xaf4>)
 8004f90:	465a      	mov	r2, fp
 8004f92:	4013      	ands	r3, r2
 8004f94:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 8004f98:	f04f 32ff 	mov.w	r2, #4294967295
 8004f9c:	d81b      	bhi.n	8004fd6 <_strtod_l+0x8c6>
 8004f9e:	0d1b      	lsrs	r3, r3, #20
 8004fa0:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8004fa4:	fa02 f303 	lsl.w	r3, r2, r3
 8004fa8:	4299      	cmp	r1, r3
 8004faa:	d119      	bne.n	8004fe0 <_strtod_l+0x8d0>
 8004fac:	4b96      	ldr	r3, [pc, #600]	@ (8005208 <_strtod_l+0xaf8>)
 8004fae:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004fb0:	429a      	cmp	r2, r3
 8004fb2:	d102      	bne.n	8004fba <_strtod_l+0x8aa>
 8004fb4:	3101      	adds	r1, #1
 8004fb6:	f43f adca 	beq.w	8004b4e <_strtod_l+0x43e>
 8004fba:	4b92      	ldr	r3, [pc, #584]	@ (8005204 <_strtod_l+0xaf4>)
 8004fbc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004fbe:	401a      	ands	r2, r3
 8004fc0:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 8004fc4:	f04f 0a00 	mov.w	sl, #0
 8004fc8:	9b08      	ldr	r3, [sp, #32]
 8004fca:	2b00      	cmp	r3, #0
 8004fcc:	d1b8      	bne.n	8004f40 <_strtod_l+0x830>
 8004fce:	e5c9      	b.n	8004b64 <_strtod_l+0x454>
 8004fd0:	f04f 33ff 	mov.w	r3, #4294967295
 8004fd4:	e7e8      	b.n	8004fa8 <_strtod_l+0x898>
 8004fd6:	4613      	mov	r3, r2
 8004fd8:	e7e6      	b.n	8004fa8 <_strtod_l+0x898>
 8004fda:	ea53 030a 	orrs.w	r3, r3, sl
 8004fde:	d0a1      	beq.n	8004f24 <_strtod_l+0x814>
 8004fe0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8004fe2:	b1db      	cbz	r3, 800501c <_strtod_l+0x90c>
 8004fe4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004fe6:	4213      	tst	r3, r2
 8004fe8:	d0ee      	beq.n	8004fc8 <_strtod_l+0x8b8>
 8004fea:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004fec:	9a08      	ldr	r2, [sp, #32]
 8004fee:	4650      	mov	r0, sl
 8004ff0:	4659      	mov	r1, fp
 8004ff2:	b1bb      	cbz	r3, 8005024 <_strtod_l+0x914>
 8004ff4:	f7ff fb6e 	bl	80046d4 <sulp>
 8004ff8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004ffc:	ec53 2b10 	vmov	r2, r3, d0
 8005000:	f7fb f964 	bl	80002cc <__adddf3>
 8005004:	4682      	mov	sl, r0
 8005006:	468b      	mov	fp, r1
 8005008:	e7de      	b.n	8004fc8 <_strtod_l+0x8b8>
 800500a:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 800500e:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8005012:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8005016:	f04f 3aff 	mov.w	sl, #4294967295
 800501a:	e7d5      	b.n	8004fc8 <_strtod_l+0x8b8>
 800501c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800501e:	ea13 0f0a 	tst.w	r3, sl
 8005022:	e7e1      	b.n	8004fe8 <_strtod_l+0x8d8>
 8005024:	f7ff fb56 	bl	80046d4 <sulp>
 8005028:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800502c:	ec53 2b10 	vmov	r2, r3, d0
 8005030:	f7fb f94a 	bl	80002c8 <__aeabi_dsub>
 8005034:	2200      	movs	r2, #0
 8005036:	2300      	movs	r3, #0
 8005038:	4682      	mov	sl, r0
 800503a:	468b      	mov	fp, r1
 800503c:	f7fb fd64 	bl	8000b08 <__aeabi_dcmpeq>
 8005040:	2800      	cmp	r0, #0
 8005042:	d0c1      	beq.n	8004fc8 <_strtod_l+0x8b8>
 8005044:	e619      	b.n	8004c7a <_strtod_l+0x56a>
 8005046:	4641      	mov	r1, r8
 8005048:	4620      	mov	r0, r4
 800504a:	f7ff facd 	bl	80045e8 <__ratio>
 800504e:	ec57 6b10 	vmov	r6, r7, d0
 8005052:	2200      	movs	r2, #0
 8005054:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8005058:	4630      	mov	r0, r6
 800505a:	4639      	mov	r1, r7
 800505c:	f7fb fd68 	bl	8000b30 <__aeabi_dcmple>
 8005060:	2800      	cmp	r0, #0
 8005062:	d06f      	beq.n	8005144 <_strtod_l+0xa34>
 8005064:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005066:	2b00      	cmp	r3, #0
 8005068:	d17a      	bne.n	8005160 <_strtod_l+0xa50>
 800506a:	f1ba 0f00 	cmp.w	sl, #0
 800506e:	d158      	bne.n	8005122 <_strtod_l+0xa12>
 8005070:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005072:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005076:	2b00      	cmp	r3, #0
 8005078:	d15a      	bne.n	8005130 <_strtod_l+0xa20>
 800507a:	4b64      	ldr	r3, [pc, #400]	@ (800520c <_strtod_l+0xafc>)
 800507c:	2200      	movs	r2, #0
 800507e:	4630      	mov	r0, r6
 8005080:	4639      	mov	r1, r7
 8005082:	f7fb fd4b 	bl	8000b1c <__aeabi_dcmplt>
 8005086:	2800      	cmp	r0, #0
 8005088:	d159      	bne.n	800513e <_strtod_l+0xa2e>
 800508a:	4630      	mov	r0, r6
 800508c:	4639      	mov	r1, r7
 800508e:	4b60      	ldr	r3, [pc, #384]	@ (8005210 <_strtod_l+0xb00>)
 8005090:	2200      	movs	r2, #0
 8005092:	f7fb fad1 	bl	8000638 <__aeabi_dmul>
 8005096:	4606      	mov	r6, r0
 8005098:	460f      	mov	r7, r1
 800509a:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 800509e:	9606      	str	r6, [sp, #24]
 80050a0:	9307      	str	r3, [sp, #28]
 80050a2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80050a6:	4d57      	ldr	r5, [pc, #348]	@ (8005204 <_strtod_l+0xaf4>)
 80050a8:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 80050ac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80050ae:	401d      	ands	r5, r3
 80050b0:	4b58      	ldr	r3, [pc, #352]	@ (8005214 <_strtod_l+0xb04>)
 80050b2:	429d      	cmp	r5, r3
 80050b4:	f040 80b2 	bne.w	800521c <_strtod_l+0xb0c>
 80050b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80050ba:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 80050be:	ec4b ab10 	vmov	d0, sl, fp
 80050c2:	f7ff f9c9 	bl	8004458 <__ulp>
 80050c6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80050ca:	ec51 0b10 	vmov	r0, r1, d0
 80050ce:	f7fb fab3 	bl	8000638 <__aeabi_dmul>
 80050d2:	4652      	mov	r2, sl
 80050d4:	465b      	mov	r3, fp
 80050d6:	f7fb f8f9 	bl	80002cc <__adddf3>
 80050da:	460b      	mov	r3, r1
 80050dc:	4949      	ldr	r1, [pc, #292]	@ (8005204 <_strtod_l+0xaf4>)
 80050de:	4a4e      	ldr	r2, [pc, #312]	@ (8005218 <_strtod_l+0xb08>)
 80050e0:	4019      	ands	r1, r3
 80050e2:	4291      	cmp	r1, r2
 80050e4:	4682      	mov	sl, r0
 80050e6:	d942      	bls.n	800516e <_strtod_l+0xa5e>
 80050e8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80050ea:	4b47      	ldr	r3, [pc, #284]	@ (8005208 <_strtod_l+0xaf8>)
 80050ec:	429a      	cmp	r2, r3
 80050ee:	d103      	bne.n	80050f8 <_strtod_l+0x9e8>
 80050f0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80050f2:	3301      	adds	r3, #1
 80050f4:	f43f ad2b 	beq.w	8004b4e <_strtod_l+0x43e>
 80050f8:	f8df b10c 	ldr.w	fp, [pc, #268]	@ 8005208 <_strtod_l+0xaf8>
 80050fc:	f04f 3aff 	mov.w	sl, #4294967295
 8005100:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8005102:	9805      	ldr	r0, [sp, #20]
 8005104:	f7fe fe74 	bl	8003df0 <_Bfree>
 8005108:	9805      	ldr	r0, [sp, #20]
 800510a:	4649      	mov	r1, r9
 800510c:	f7fe fe70 	bl	8003df0 <_Bfree>
 8005110:	9805      	ldr	r0, [sp, #20]
 8005112:	4641      	mov	r1, r8
 8005114:	f7fe fe6c 	bl	8003df0 <_Bfree>
 8005118:	9805      	ldr	r0, [sp, #20]
 800511a:	4621      	mov	r1, r4
 800511c:	f7fe fe68 	bl	8003df0 <_Bfree>
 8005120:	e618      	b.n	8004d54 <_strtod_l+0x644>
 8005122:	f1ba 0f01 	cmp.w	sl, #1
 8005126:	d103      	bne.n	8005130 <_strtod_l+0xa20>
 8005128:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800512a:	2b00      	cmp	r3, #0
 800512c:	f43f ada5 	beq.w	8004c7a <_strtod_l+0x56a>
 8005130:	ed9f 7b2b 	vldr	d7, [pc, #172]	@ 80051e0 <_strtod_l+0xad0>
 8005134:	4f35      	ldr	r7, [pc, #212]	@ (800520c <_strtod_l+0xafc>)
 8005136:	ed8d 7b06 	vstr	d7, [sp, #24]
 800513a:	2600      	movs	r6, #0
 800513c:	e7b1      	b.n	80050a2 <_strtod_l+0x992>
 800513e:	4f34      	ldr	r7, [pc, #208]	@ (8005210 <_strtod_l+0xb00>)
 8005140:	2600      	movs	r6, #0
 8005142:	e7aa      	b.n	800509a <_strtod_l+0x98a>
 8005144:	4b32      	ldr	r3, [pc, #200]	@ (8005210 <_strtod_l+0xb00>)
 8005146:	4630      	mov	r0, r6
 8005148:	4639      	mov	r1, r7
 800514a:	2200      	movs	r2, #0
 800514c:	f7fb fa74 	bl	8000638 <__aeabi_dmul>
 8005150:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005152:	4606      	mov	r6, r0
 8005154:	460f      	mov	r7, r1
 8005156:	2b00      	cmp	r3, #0
 8005158:	d09f      	beq.n	800509a <_strtod_l+0x98a>
 800515a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 800515e:	e7a0      	b.n	80050a2 <_strtod_l+0x992>
 8005160:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 80051e8 <_strtod_l+0xad8>
 8005164:	ed8d 7b06 	vstr	d7, [sp, #24]
 8005168:	ec57 6b17 	vmov	r6, r7, d7
 800516c:	e799      	b.n	80050a2 <_strtod_l+0x992>
 800516e:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 8005172:	9b08      	ldr	r3, [sp, #32]
 8005174:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 8005178:	2b00      	cmp	r3, #0
 800517a:	d1c1      	bne.n	8005100 <_strtod_l+0x9f0>
 800517c:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8005180:	0d1b      	lsrs	r3, r3, #20
 8005182:	051b      	lsls	r3, r3, #20
 8005184:	429d      	cmp	r5, r3
 8005186:	d1bb      	bne.n	8005100 <_strtod_l+0x9f0>
 8005188:	4630      	mov	r0, r6
 800518a:	4639      	mov	r1, r7
 800518c:	f7fb fd9c 	bl	8000cc8 <__aeabi_d2lz>
 8005190:	f7fb fa24 	bl	80005dc <__aeabi_l2d>
 8005194:	4602      	mov	r2, r0
 8005196:	460b      	mov	r3, r1
 8005198:	4630      	mov	r0, r6
 800519a:	4639      	mov	r1, r7
 800519c:	f7fb f894 	bl	80002c8 <__aeabi_dsub>
 80051a0:	460b      	mov	r3, r1
 80051a2:	4602      	mov	r2, r0
 80051a4:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 80051a8:	f3cb 0613 	ubfx	r6, fp, #0, #20
 80051ac:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80051ae:	ea46 060a 	orr.w	r6, r6, sl
 80051b2:	431e      	orrs	r6, r3
 80051b4:	d06f      	beq.n	8005296 <_strtod_l+0xb86>
 80051b6:	a30e      	add	r3, pc, #56	@ (adr r3, 80051f0 <_strtod_l+0xae0>)
 80051b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80051bc:	f7fb fcae 	bl	8000b1c <__aeabi_dcmplt>
 80051c0:	2800      	cmp	r0, #0
 80051c2:	f47f accf 	bne.w	8004b64 <_strtod_l+0x454>
 80051c6:	a30c      	add	r3, pc, #48	@ (adr r3, 80051f8 <_strtod_l+0xae8>)
 80051c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80051cc:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80051d0:	f7fb fcc2 	bl	8000b58 <__aeabi_dcmpgt>
 80051d4:	2800      	cmp	r0, #0
 80051d6:	d093      	beq.n	8005100 <_strtod_l+0x9f0>
 80051d8:	e4c4      	b.n	8004b64 <_strtod_l+0x454>
 80051da:	bf00      	nop
 80051dc:	f3af 8000 	nop.w
 80051e0:	00000000 	.word	0x00000000
 80051e4:	bff00000 	.word	0xbff00000
 80051e8:	00000000 	.word	0x00000000
 80051ec:	3ff00000 	.word	0x3ff00000
 80051f0:	94a03595 	.word	0x94a03595
 80051f4:	3fdfffff 	.word	0x3fdfffff
 80051f8:	35afe535 	.word	0x35afe535
 80051fc:	3fe00000 	.word	0x3fe00000
 8005200:	000fffff 	.word	0x000fffff
 8005204:	7ff00000 	.word	0x7ff00000
 8005208:	7fefffff 	.word	0x7fefffff
 800520c:	3ff00000 	.word	0x3ff00000
 8005210:	3fe00000 	.word	0x3fe00000
 8005214:	7fe00000 	.word	0x7fe00000
 8005218:	7c9fffff 	.word	0x7c9fffff
 800521c:	9b08      	ldr	r3, [sp, #32]
 800521e:	b323      	cbz	r3, 800526a <_strtod_l+0xb5a>
 8005220:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 8005224:	d821      	bhi.n	800526a <_strtod_l+0xb5a>
 8005226:	a328      	add	r3, pc, #160	@ (adr r3, 80052c8 <_strtod_l+0xbb8>)
 8005228:	e9d3 2300 	ldrd	r2, r3, [r3]
 800522c:	4630      	mov	r0, r6
 800522e:	4639      	mov	r1, r7
 8005230:	f7fb fc7e 	bl	8000b30 <__aeabi_dcmple>
 8005234:	b1a0      	cbz	r0, 8005260 <_strtod_l+0xb50>
 8005236:	4639      	mov	r1, r7
 8005238:	4630      	mov	r0, r6
 800523a:	f7fb fcd5 	bl	8000be8 <__aeabi_d2uiz>
 800523e:	2801      	cmp	r0, #1
 8005240:	bf38      	it	cc
 8005242:	2001      	movcc	r0, #1
 8005244:	f7fb f97e 	bl	8000544 <__aeabi_ui2d>
 8005248:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800524a:	4606      	mov	r6, r0
 800524c:	460f      	mov	r7, r1
 800524e:	b9fb      	cbnz	r3, 8005290 <_strtod_l+0xb80>
 8005250:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8005254:	9014      	str	r0, [sp, #80]	@ 0x50
 8005256:	9315      	str	r3, [sp, #84]	@ 0x54
 8005258:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 800525c:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8005260:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8005262:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 8005266:	1b5b      	subs	r3, r3, r5
 8005268:	9311      	str	r3, [sp, #68]	@ 0x44
 800526a:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 800526e:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 8005272:	f7ff f8f1 	bl	8004458 <__ulp>
 8005276:	4650      	mov	r0, sl
 8005278:	ec53 2b10 	vmov	r2, r3, d0
 800527c:	4659      	mov	r1, fp
 800527e:	f7fb f9db 	bl	8000638 <__aeabi_dmul>
 8005282:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8005286:	f7fb f821 	bl	80002cc <__adddf3>
 800528a:	4682      	mov	sl, r0
 800528c:	468b      	mov	fp, r1
 800528e:	e770      	b.n	8005172 <_strtod_l+0xa62>
 8005290:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 8005294:	e7e0      	b.n	8005258 <_strtod_l+0xb48>
 8005296:	a30e      	add	r3, pc, #56	@ (adr r3, 80052d0 <_strtod_l+0xbc0>)
 8005298:	e9d3 2300 	ldrd	r2, r3, [r3]
 800529c:	f7fb fc3e 	bl	8000b1c <__aeabi_dcmplt>
 80052a0:	e798      	b.n	80051d4 <_strtod_l+0xac4>
 80052a2:	2300      	movs	r3, #0
 80052a4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80052a6:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 80052a8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80052aa:	6013      	str	r3, [r2, #0]
 80052ac:	f7ff ba6d 	b.w	800478a <_strtod_l+0x7a>
 80052b0:	2a65      	cmp	r2, #101	@ 0x65
 80052b2:	f43f ab66 	beq.w	8004982 <_strtod_l+0x272>
 80052b6:	2a45      	cmp	r2, #69	@ 0x45
 80052b8:	f43f ab63 	beq.w	8004982 <_strtod_l+0x272>
 80052bc:	2301      	movs	r3, #1
 80052be:	f7ff bb9e 	b.w	80049fe <_strtod_l+0x2ee>
 80052c2:	bf00      	nop
 80052c4:	f3af 8000 	nop.w
 80052c8:	ffc00000 	.word	0xffc00000
 80052cc:	41dfffff 	.word	0x41dfffff
 80052d0:	94a03595 	.word	0x94a03595
 80052d4:	3fcfffff 	.word	0x3fcfffff

080052d8 <_strtod_r>:
 80052d8:	4b01      	ldr	r3, [pc, #4]	@ (80052e0 <_strtod_r+0x8>)
 80052da:	f7ff ba19 	b.w	8004710 <_strtod_l>
 80052de:	bf00      	nop
 80052e0:	20000080 	.word	0x20000080

080052e4 <_strtol_l.constprop.0>:
 80052e4:	2b24      	cmp	r3, #36	@ 0x24
 80052e6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80052ea:	4686      	mov	lr, r0
 80052ec:	4690      	mov	r8, r2
 80052ee:	d801      	bhi.n	80052f4 <_strtol_l.constprop.0+0x10>
 80052f0:	2b01      	cmp	r3, #1
 80052f2:	d106      	bne.n	8005302 <_strtol_l.constprop.0+0x1e>
 80052f4:	f7fd fdba 	bl	8002e6c <__errno>
 80052f8:	2316      	movs	r3, #22
 80052fa:	6003      	str	r3, [r0, #0]
 80052fc:	2000      	movs	r0, #0
 80052fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005302:	4834      	ldr	r0, [pc, #208]	@ (80053d4 <_strtol_l.constprop.0+0xf0>)
 8005304:	460d      	mov	r5, r1
 8005306:	462a      	mov	r2, r5
 8005308:	f815 4b01 	ldrb.w	r4, [r5], #1
 800530c:	5d06      	ldrb	r6, [r0, r4]
 800530e:	f016 0608 	ands.w	r6, r6, #8
 8005312:	d1f8      	bne.n	8005306 <_strtol_l.constprop.0+0x22>
 8005314:	2c2d      	cmp	r4, #45	@ 0x2d
 8005316:	d12d      	bne.n	8005374 <_strtol_l.constprop.0+0x90>
 8005318:	782c      	ldrb	r4, [r5, #0]
 800531a:	2601      	movs	r6, #1
 800531c:	1c95      	adds	r5, r2, #2
 800531e:	f033 0210 	bics.w	r2, r3, #16
 8005322:	d109      	bne.n	8005338 <_strtol_l.constprop.0+0x54>
 8005324:	2c30      	cmp	r4, #48	@ 0x30
 8005326:	d12a      	bne.n	800537e <_strtol_l.constprop.0+0x9a>
 8005328:	782a      	ldrb	r2, [r5, #0]
 800532a:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 800532e:	2a58      	cmp	r2, #88	@ 0x58
 8005330:	d125      	bne.n	800537e <_strtol_l.constprop.0+0x9a>
 8005332:	786c      	ldrb	r4, [r5, #1]
 8005334:	2310      	movs	r3, #16
 8005336:	3502      	adds	r5, #2
 8005338:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 800533c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8005340:	2200      	movs	r2, #0
 8005342:	fbbc f9f3 	udiv	r9, ip, r3
 8005346:	4610      	mov	r0, r2
 8005348:	fb03 ca19 	mls	sl, r3, r9, ip
 800534c:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 8005350:	2f09      	cmp	r7, #9
 8005352:	d81b      	bhi.n	800538c <_strtol_l.constprop.0+0xa8>
 8005354:	463c      	mov	r4, r7
 8005356:	42a3      	cmp	r3, r4
 8005358:	dd27      	ble.n	80053aa <_strtol_l.constprop.0+0xc6>
 800535a:	1c57      	adds	r7, r2, #1
 800535c:	d007      	beq.n	800536e <_strtol_l.constprop.0+0x8a>
 800535e:	4581      	cmp	r9, r0
 8005360:	d320      	bcc.n	80053a4 <_strtol_l.constprop.0+0xc0>
 8005362:	d101      	bne.n	8005368 <_strtol_l.constprop.0+0x84>
 8005364:	45a2      	cmp	sl, r4
 8005366:	db1d      	blt.n	80053a4 <_strtol_l.constprop.0+0xc0>
 8005368:	fb00 4003 	mla	r0, r0, r3, r4
 800536c:	2201      	movs	r2, #1
 800536e:	f815 4b01 	ldrb.w	r4, [r5], #1
 8005372:	e7eb      	b.n	800534c <_strtol_l.constprop.0+0x68>
 8005374:	2c2b      	cmp	r4, #43	@ 0x2b
 8005376:	bf04      	itt	eq
 8005378:	782c      	ldrbeq	r4, [r5, #0]
 800537a:	1c95      	addeq	r5, r2, #2
 800537c:	e7cf      	b.n	800531e <_strtol_l.constprop.0+0x3a>
 800537e:	2b00      	cmp	r3, #0
 8005380:	d1da      	bne.n	8005338 <_strtol_l.constprop.0+0x54>
 8005382:	2c30      	cmp	r4, #48	@ 0x30
 8005384:	bf0c      	ite	eq
 8005386:	2308      	moveq	r3, #8
 8005388:	230a      	movne	r3, #10
 800538a:	e7d5      	b.n	8005338 <_strtol_l.constprop.0+0x54>
 800538c:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8005390:	2f19      	cmp	r7, #25
 8005392:	d801      	bhi.n	8005398 <_strtol_l.constprop.0+0xb4>
 8005394:	3c37      	subs	r4, #55	@ 0x37
 8005396:	e7de      	b.n	8005356 <_strtol_l.constprop.0+0x72>
 8005398:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 800539c:	2f19      	cmp	r7, #25
 800539e:	d804      	bhi.n	80053aa <_strtol_l.constprop.0+0xc6>
 80053a0:	3c57      	subs	r4, #87	@ 0x57
 80053a2:	e7d8      	b.n	8005356 <_strtol_l.constprop.0+0x72>
 80053a4:	f04f 32ff 	mov.w	r2, #4294967295
 80053a8:	e7e1      	b.n	800536e <_strtol_l.constprop.0+0x8a>
 80053aa:	1c53      	adds	r3, r2, #1
 80053ac:	d108      	bne.n	80053c0 <_strtol_l.constprop.0+0xdc>
 80053ae:	2322      	movs	r3, #34	@ 0x22
 80053b0:	f8ce 3000 	str.w	r3, [lr]
 80053b4:	4660      	mov	r0, ip
 80053b6:	f1b8 0f00 	cmp.w	r8, #0
 80053ba:	d0a0      	beq.n	80052fe <_strtol_l.constprop.0+0x1a>
 80053bc:	1e69      	subs	r1, r5, #1
 80053be:	e006      	b.n	80053ce <_strtol_l.constprop.0+0xea>
 80053c0:	b106      	cbz	r6, 80053c4 <_strtol_l.constprop.0+0xe0>
 80053c2:	4240      	negs	r0, r0
 80053c4:	f1b8 0f00 	cmp.w	r8, #0
 80053c8:	d099      	beq.n	80052fe <_strtol_l.constprop.0+0x1a>
 80053ca:	2a00      	cmp	r2, #0
 80053cc:	d1f6      	bne.n	80053bc <_strtol_l.constprop.0+0xd8>
 80053ce:	f8c8 1000 	str.w	r1, [r8]
 80053d2:	e794      	b.n	80052fe <_strtol_l.constprop.0+0x1a>
 80053d4:	0800661b 	.word	0x0800661b

080053d8 <_strtol_r>:
 80053d8:	f7ff bf84 	b.w	80052e4 <_strtol_l.constprop.0>

080053dc <__ssputs_r>:
 80053dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80053e0:	688e      	ldr	r6, [r1, #8]
 80053e2:	461f      	mov	r7, r3
 80053e4:	42be      	cmp	r6, r7
 80053e6:	680b      	ldr	r3, [r1, #0]
 80053e8:	4682      	mov	sl, r0
 80053ea:	460c      	mov	r4, r1
 80053ec:	4690      	mov	r8, r2
 80053ee:	d82d      	bhi.n	800544c <__ssputs_r+0x70>
 80053f0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80053f4:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80053f8:	d026      	beq.n	8005448 <__ssputs_r+0x6c>
 80053fa:	6965      	ldr	r5, [r4, #20]
 80053fc:	6909      	ldr	r1, [r1, #16]
 80053fe:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005402:	eba3 0901 	sub.w	r9, r3, r1
 8005406:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800540a:	1c7b      	adds	r3, r7, #1
 800540c:	444b      	add	r3, r9
 800540e:	106d      	asrs	r5, r5, #1
 8005410:	429d      	cmp	r5, r3
 8005412:	bf38      	it	cc
 8005414:	461d      	movcc	r5, r3
 8005416:	0553      	lsls	r3, r2, #21
 8005418:	d527      	bpl.n	800546a <__ssputs_r+0x8e>
 800541a:	4629      	mov	r1, r5
 800541c:	f7fe fc1c 	bl	8003c58 <_malloc_r>
 8005420:	4606      	mov	r6, r0
 8005422:	b360      	cbz	r0, 800547e <__ssputs_r+0xa2>
 8005424:	6921      	ldr	r1, [r4, #16]
 8005426:	464a      	mov	r2, r9
 8005428:	f000 fbee 	bl	8005c08 <memcpy>
 800542c:	89a3      	ldrh	r3, [r4, #12]
 800542e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8005432:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005436:	81a3      	strh	r3, [r4, #12]
 8005438:	6126      	str	r6, [r4, #16]
 800543a:	6165      	str	r5, [r4, #20]
 800543c:	444e      	add	r6, r9
 800543e:	eba5 0509 	sub.w	r5, r5, r9
 8005442:	6026      	str	r6, [r4, #0]
 8005444:	60a5      	str	r5, [r4, #8]
 8005446:	463e      	mov	r6, r7
 8005448:	42be      	cmp	r6, r7
 800544a:	d900      	bls.n	800544e <__ssputs_r+0x72>
 800544c:	463e      	mov	r6, r7
 800544e:	6820      	ldr	r0, [r4, #0]
 8005450:	4632      	mov	r2, r6
 8005452:	4641      	mov	r1, r8
 8005454:	f000 fb9c 	bl	8005b90 <memmove>
 8005458:	68a3      	ldr	r3, [r4, #8]
 800545a:	1b9b      	subs	r3, r3, r6
 800545c:	60a3      	str	r3, [r4, #8]
 800545e:	6823      	ldr	r3, [r4, #0]
 8005460:	4433      	add	r3, r6
 8005462:	6023      	str	r3, [r4, #0]
 8005464:	2000      	movs	r0, #0
 8005466:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800546a:	462a      	mov	r2, r5
 800546c:	f000 ff61 	bl	8006332 <_realloc_r>
 8005470:	4606      	mov	r6, r0
 8005472:	2800      	cmp	r0, #0
 8005474:	d1e0      	bne.n	8005438 <__ssputs_r+0x5c>
 8005476:	6921      	ldr	r1, [r4, #16]
 8005478:	4650      	mov	r0, sl
 800547a:	f7fe fb79 	bl	8003b70 <_free_r>
 800547e:	230c      	movs	r3, #12
 8005480:	f8ca 3000 	str.w	r3, [sl]
 8005484:	89a3      	ldrh	r3, [r4, #12]
 8005486:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800548a:	81a3      	strh	r3, [r4, #12]
 800548c:	f04f 30ff 	mov.w	r0, #4294967295
 8005490:	e7e9      	b.n	8005466 <__ssputs_r+0x8a>
	...

08005494 <_svfiprintf_r>:
 8005494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005498:	4698      	mov	r8, r3
 800549a:	898b      	ldrh	r3, [r1, #12]
 800549c:	061b      	lsls	r3, r3, #24
 800549e:	b09d      	sub	sp, #116	@ 0x74
 80054a0:	4607      	mov	r7, r0
 80054a2:	460d      	mov	r5, r1
 80054a4:	4614      	mov	r4, r2
 80054a6:	d510      	bpl.n	80054ca <_svfiprintf_r+0x36>
 80054a8:	690b      	ldr	r3, [r1, #16]
 80054aa:	b973      	cbnz	r3, 80054ca <_svfiprintf_r+0x36>
 80054ac:	2140      	movs	r1, #64	@ 0x40
 80054ae:	f7fe fbd3 	bl	8003c58 <_malloc_r>
 80054b2:	6028      	str	r0, [r5, #0]
 80054b4:	6128      	str	r0, [r5, #16]
 80054b6:	b930      	cbnz	r0, 80054c6 <_svfiprintf_r+0x32>
 80054b8:	230c      	movs	r3, #12
 80054ba:	603b      	str	r3, [r7, #0]
 80054bc:	f04f 30ff 	mov.w	r0, #4294967295
 80054c0:	b01d      	add	sp, #116	@ 0x74
 80054c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80054c6:	2340      	movs	r3, #64	@ 0x40
 80054c8:	616b      	str	r3, [r5, #20]
 80054ca:	2300      	movs	r3, #0
 80054cc:	9309      	str	r3, [sp, #36]	@ 0x24
 80054ce:	2320      	movs	r3, #32
 80054d0:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80054d4:	f8cd 800c 	str.w	r8, [sp, #12]
 80054d8:	2330      	movs	r3, #48	@ 0x30
 80054da:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8005678 <_svfiprintf_r+0x1e4>
 80054de:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80054e2:	f04f 0901 	mov.w	r9, #1
 80054e6:	4623      	mov	r3, r4
 80054e8:	469a      	mov	sl, r3
 80054ea:	f813 2b01 	ldrb.w	r2, [r3], #1
 80054ee:	b10a      	cbz	r2, 80054f4 <_svfiprintf_r+0x60>
 80054f0:	2a25      	cmp	r2, #37	@ 0x25
 80054f2:	d1f9      	bne.n	80054e8 <_svfiprintf_r+0x54>
 80054f4:	ebba 0b04 	subs.w	fp, sl, r4
 80054f8:	d00b      	beq.n	8005512 <_svfiprintf_r+0x7e>
 80054fa:	465b      	mov	r3, fp
 80054fc:	4622      	mov	r2, r4
 80054fe:	4629      	mov	r1, r5
 8005500:	4638      	mov	r0, r7
 8005502:	f7ff ff6b 	bl	80053dc <__ssputs_r>
 8005506:	3001      	adds	r0, #1
 8005508:	f000 80a7 	beq.w	800565a <_svfiprintf_r+0x1c6>
 800550c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800550e:	445a      	add	r2, fp
 8005510:	9209      	str	r2, [sp, #36]	@ 0x24
 8005512:	f89a 3000 	ldrb.w	r3, [sl]
 8005516:	2b00      	cmp	r3, #0
 8005518:	f000 809f 	beq.w	800565a <_svfiprintf_r+0x1c6>
 800551c:	2300      	movs	r3, #0
 800551e:	f04f 32ff 	mov.w	r2, #4294967295
 8005522:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005526:	f10a 0a01 	add.w	sl, sl, #1
 800552a:	9304      	str	r3, [sp, #16]
 800552c:	9307      	str	r3, [sp, #28]
 800552e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8005532:	931a      	str	r3, [sp, #104]	@ 0x68
 8005534:	4654      	mov	r4, sl
 8005536:	2205      	movs	r2, #5
 8005538:	f814 1b01 	ldrb.w	r1, [r4], #1
 800553c:	484e      	ldr	r0, [pc, #312]	@ (8005678 <_svfiprintf_r+0x1e4>)
 800553e:	f7fa fe67 	bl	8000210 <memchr>
 8005542:	9a04      	ldr	r2, [sp, #16]
 8005544:	b9d8      	cbnz	r0, 800557e <_svfiprintf_r+0xea>
 8005546:	06d0      	lsls	r0, r2, #27
 8005548:	bf44      	itt	mi
 800554a:	2320      	movmi	r3, #32
 800554c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005550:	0711      	lsls	r1, r2, #28
 8005552:	bf44      	itt	mi
 8005554:	232b      	movmi	r3, #43	@ 0x2b
 8005556:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800555a:	f89a 3000 	ldrb.w	r3, [sl]
 800555e:	2b2a      	cmp	r3, #42	@ 0x2a
 8005560:	d015      	beq.n	800558e <_svfiprintf_r+0xfa>
 8005562:	9a07      	ldr	r2, [sp, #28]
 8005564:	4654      	mov	r4, sl
 8005566:	2000      	movs	r0, #0
 8005568:	f04f 0c0a 	mov.w	ip, #10
 800556c:	4621      	mov	r1, r4
 800556e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005572:	3b30      	subs	r3, #48	@ 0x30
 8005574:	2b09      	cmp	r3, #9
 8005576:	d94b      	bls.n	8005610 <_svfiprintf_r+0x17c>
 8005578:	b1b0      	cbz	r0, 80055a8 <_svfiprintf_r+0x114>
 800557a:	9207      	str	r2, [sp, #28]
 800557c:	e014      	b.n	80055a8 <_svfiprintf_r+0x114>
 800557e:	eba0 0308 	sub.w	r3, r0, r8
 8005582:	fa09 f303 	lsl.w	r3, r9, r3
 8005586:	4313      	orrs	r3, r2
 8005588:	9304      	str	r3, [sp, #16]
 800558a:	46a2      	mov	sl, r4
 800558c:	e7d2      	b.n	8005534 <_svfiprintf_r+0xa0>
 800558e:	9b03      	ldr	r3, [sp, #12]
 8005590:	1d19      	adds	r1, r3, #4
 8005592:	681b      	ldr	r3, [r3, #0]
 8005594:	9103      	str	r1, [sp, #12]
 8005596:	2b00      	cmp	r3, #0
 8005598:	bfbb      	ittet	lt
 800559a:	425b      	neglt	r3, r3
 800559c:	f042 0202 	orrlt.w	r2, r2, #2
 80055a0:	9307      	strge	r3, [sp, #28]
 80055a2:	9307      	strlt	r3, [sp, #28]
 80055a4:	bfb8      	it	lt
 80055a6:	9204      	strlt	r2, [sp, #16]
 80055a8:	7823      	ldrb	r3, [r4, #0]
 80055aa:	2b2e      	cmp	r3, #46	@ 0x2e
 80055ac:	d10a      	bne.n	80055c4 <_svfiprintf_r+0x130>
 80055ae:	7863      	ldrb	r3, [r4, #1]
 80055b0:	2b2a      	cmp	r3, #42	@ 0x2a
 80055b2:	d132      	bne.n	800561a <_svfiprintf_r+0x186>
 80055b4:	9b03      	ldr	r3, [sp, #12]
 80055b6:	1d1a      	adds	r2, r3, #4
 80055b8:	681b      	ldr	r3, [r3, #0]
 80055ba:	9203      	str	r2, [sp, #12]
 80055bc:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80055c0:	3402      	adds	r4, #2
 80055c2:	9305      	str	r3, [sp, #20]
 80055c4:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8005688 <_svfiprintf_r+0x1f4>
 80055c8:	7821      	ldrb	r1, [r4, #0]
 80055ca:	2203      	movs	r2, #3
 80055cc:	4650      	mov	r0, sl
 80055ce:	f7fa fe1f 	bl	8000210 <memchr>
 80055d2:	b138      	cbz	r0, 80055e4 <_svfiprintf_r+0x150>
 80055d4:	9b04      	ldr	r3, [sp, #16]
 80055d6:	eba0 000a 	sub.w	r0, r0, sl
 80055da:	2240      	movs	r2, #64	@ 0x40
 80055dc:	4082      	lsls	r2, r0
 80055de:	4313      	orrs	r3, r2
 80055e0:	3401      	adds	r4, #1
 80055e2:	9304      	str	r3, [sp, #16]
 80055e4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80055e8:	4824      	ldr	r0, [pc, #144]	@ (800567c <_svfiprintf_r+0x1e8>)
 80055ea:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80055ee:	2206      	movs	r2, #6
 80055f0:	f7fa fe0e 	bl	8000210 <memchr>
 80055f4:	2800      	cmp	r0, #0
 80055f6:	d036      	beq.n	8005666 <_svfiprintf_r+0x1d2>
 80055f8:	4b21      	ldr	r3, [pc, #132]	@ (8005680 <_svfiprintf_r+0x1ec>)
 80055fa:	bb1b      	cbnz	r3, 8005644 <_svfiprintf_r+0x1b0>
 80055fc:	9b03      	ldr	r3, [sp, #12]
 80055fe:	3307      	adds	r3, #7
 8005600:	f023 0307 	bic.w	r3, r3, #7
 8005604:	3308      	adds	r3, #8
 8005606:	9303      	str	r3, [sp, #12]
 8005608:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800560a:	4433      	add	r3, r6
 800560c:	9309      	str	r3, [sp, #36]	@ 0x24
 800560e:	e76a      	b.n	80054e6 <_svfiprintf_r+0x52>
 8005610:	fb0c 3202 	mla	r2, ip, r2, r3
 8005614:	460c      	mov	r4, r1
 8005616:	2001      	movs	r0, #1
 8005618:	e7a8      	b.n	800556c <_svfiprintf_r+0xd8>
 800561a:	2300      	movs	r3, #0
 800561c:	3401      	adds	r4, #1
 800561e:	9305      	str	r3, [sp, #20]
 8005620:	4619      	mov	r1, r3
 8005622:	f04f 0c0a 	mov.w	ip, #10
 8005626:	4620      	mov	r0, r4
 8005628:	f810 2b01 	ldrb.w	r2, [r0], #1
 800562c:	3a30      	subs	r2, #48	@ 0x30
 800562e:	2a09      	cmp	r2, #9
 8005630:	d903      	bls.n	800563a <_svfiprintf_r+0x1a6>
 8005632:	2b00      	cmp	r3, #0
 8005634:	d0c6      	beq.n	80055c4 <_svfiprintf_r+0x130>
 8005636:	9105      	str	r1, [sp, #20]
 8005638:	e7c4      	b.n	80055c4 <_svfiprintf_r+0x130>
 800563a:	fb0c 2101 	mla	r1, ip, r1, r2
 800563e:	4604      	mov	r4, r0
 8005640:	2301      	movs	r3, #1
 8005642:	e7f0      	b.n	8005626 <_svfiprintf_r+0x192>
 8005644:	ab03      	add	r3, sp, #12
 8005646:	9300      	str	r3, [sp, #0]
 8005648:	462a      	mov	r2, r5
 800564a:	4b0e      	ldr	r3, [pc, #56]	@ (8005684 <_svfiprintf_r+0x1f0>)
 800564c:	a904      	add	r1, sp, #16
 800564e:	4638      	mov	r0, r7
 8005650:	f7fc fca0 	bl	8001f94 <_printf_float>
 8005654:	1c42      	adds	r2, r0, #1
 8005656:	4606      	mov	r6, r0
 8005658:	d1d6      	bne.n	8005608 <_svfiprintf_r+0x174>
 800565a:	89ab      	ldrh	r3, [r5, #12]
 800565c:	065b      	lsls	r3, r3, #25
 800565e:	f53f af2d 	bmi.w	80054bc <_svfiprintf_r+0x28>
 8005662:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005664:	e72c      	b.n	80054c0 <_svfiprintf_r+0x2c>
 8005666:	ab03      	add	r3, sp, #12
 8005668:	9300      	str	r3, [sp, #0]
 800566a:	462a      	mov	r2, r5
 800566c:	4b05      	ldr	r3, [pc, #20]	@ (8005684 <_svfiprintf_r+0x1f0>)
 800566e:	a904      	add	r1, sp, #16
 8005670:	4638      	mov	r0, r7
 8005672:	f7fc ff27 	bl	80024c4 <_printf_i>
 8005676:	e7ed      	b.n	8005654 <_svfiprintf_r+0x1c0>
 8005678:	08006990 	.word	0x08006990
 800567c:	0800699a 	.word	0x0800699a
 8005680:	08001f95 	.word	0x08001f95
 8005684:	080053dd 	.word	0x080053dd
 8005688:	08006996 	.word	0x08006996

0800568c <__sfputc_r>:
 800568c:	6893      	ldr	r3, [r2, #8]
 800568e:	3b01      	subs	r3, #1
 8005690:	2b00      	cmp	r3, #0
 8005692:	b410      	push	{r4}
 8005694:	6093      	str	r3, [r2, #8]
 8005696:	da08      	bge.n	80056aa <__sfputc_r+0x1e>
 8005698:	6994      	ldr	r4, [r2, #24]
 800569a:	42a3      	cmp	r3, r4
 800569c:	db01      	blt.n	80056a2 <__sfputc_r+0x16>
 800569e:	290a      	cmp	r1, #10
 80056a0:	d103      	bne.n	80056aa <__sfputc_r+0x1e>
 80056a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80056a6:	f000 b9df 	b.w	8005a68 <__swbuf_r>
 80056aa:	6813      	ldr	r3, [r2, #0]
 80056ac:	1c58      	adds	r0, r3, #1
 80056ae:	6010      	str	r0, [r2, #0]
 80056b0:	7019      	strb	r1, [r3, #0]
 80056b2:	4608      	mov	r0, r1
 80056b4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80056b8:	4770      	bx	lr

080056ba <__sfputs_r>:
 80056ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80056bc:	4606      	mov	r6, r0
 80056be:	460f      	mov	r7, r1
 80056c0:	4614      	mov	r4, r2
 80056c2:	18d5      	adds	r5, r2, r3
 80056c4:	42ac      	cmp	r4, r5
 80056c6:	d101      	bne.n	80056cc <__sfputs_r+0x12>
 80056c8:	2000      	movs	r0, #0
 80056ca:	e007      	b.n	80056dc <__sfputs_r+0x22>
 80056cc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80056d0:	463a      	mov	r2, r7
 80056d2:	4630      	mov	r0, r6
 80056d4:	f7ff ffda 	bl	800568c <__sfputc_r>
 80056d8:	1c43      	adds	r3, r0, #1
 80056da:	d1f3      	bne.n	80056c4 <__sfputs_r+0xa>
 80056dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080056e0 <_vfiprintf_r>:
 80056e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80056e4:	460d      	mov	r5, r1
 80056e6:	b09d      	sub	sp, #116	@ 0x74
 80056e8:	4614      	mov	r4, r2
 80056ea:	4698      	mov	r8, r3
 80056ec:	4606      	mov	r6, r0
 80056ee:	b118      	cbz	r0, 80056f8 <_vfiprintf_r+0x18>
 80056f0:	6a03      	ldr	r3, [r0, #32]
 80056f2:	b90b      	cbnz	r3, 80056f8 <_vfiprintf_r+0x18>
 80056f4:	f7fd faa6 	bl	8002c44 <__sinit>
 80056f8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80056fa:	07d9      	lsls	r1, r3, #31
 80056fc:	d405      	bmi.n	800570a <_vfiprintf_r+0x2a>
 80056fe:	89ab      	ldrh	r3, [r5, #12]
 8005700:	059a      	lsls	r2, r3, #22
 8005702:	d402      	bmi.n	800570a <_vfiprintf_r+0x2a>
 8005704:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8005706:	f7fd fbdc 	bl	8002ec2 <__retarget_lock_acquire_recursive>
 800570a:	89ab      	ldrh	r3, [r5, #12]
 800570c:	071b      	lsls	r3, r3, #28
 800570e:	d501      	bpl.n	8005714 <_vfiprintf_r+0x34>
 8005710:	692b      	ldr	r3, [r5, #16]
 8005712:	b99b      	cbnz	r3, 800573c <_vfiprintf_r+0x5c>
 8005714:	4629      	mov	r1, r5
 8005716:	4630      	mov	r0, r6
 8005718:	f000 f9e4 	bl	8005ae4 <__swsetup_r>
 800571c:	b170      	cbz	r0, 800573c <_vfiprintf_r+0x5c>
 800571e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8005720:	07dc      	lsls	r4, r3, #31
 8005722:	d504      	bpl.n	800572e <_vfiprintf_r+0x4e>
 8005724:	f04f 30ff 	mov.w	r0, #4294967295
 8005728:	b01d      	add	sp, #116	@ 0x74
 800572a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800572e:	89ab      	ldrh	r3, [r5, #12]
 8005730:	0598      	lsls	r0, r3, #22
 8005732:	d4f7      	bmi.n	8005724 <_vfiprintf_r+0x44>
 8005734:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8005736:	f7fd fbc5 	bl	8002ec4 <__retarget_lock_release_recursive>
 800573a:	e7f3      	b.n	8005724 <_vfiprintf_r+0x44>
 800573c:	2300      	movs	r3, #0
 800573e:	9309      	str	r3, [sp, #36]	@ 0x24
 8005740:	2320      	movs	r3, #32
 8005742:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8005746:	f8cd 800c 	str.w	r8, [sp, #12]
 800574a:	2330      	movs	r3, #48	@ 0x30
 800574c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80058fc <_vfiprintf_r+0x21c>
 8005750:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8005754:	f04f 0901 	mov.w	r9, #1
 8005758:	4623      	mov	r3, r4
 800575a:	469a      	mov	sl, r3
 800575c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005760:	b10a      	cbz	r2, 8005766 <_vfiprintf_r+0x86>
 8005762:	2a25      	cmp	r2, #37	@ 0x25
 8005764:	d1f9      	bne.n	800575a <_vfiprintf_r+0x7a>
 8005766:	ebba 0b04 	subs.w	fp, sl, r4
 800576a:	d00b      	beq.n	8005784 <_vfiprintf_r+0xa4>
 800576c:	465b      	mov	r3, fp
 800576e:	4622      	mov	r2, r4
 8005770:	4629      	mov	r1, r5
 8005772:	4630      	mov	r0, r6
 8005774:	f7ff ffa1 	bl	80056ba <__sfputs_r>
 8005778:	3001      	adds	r0, #1
 800577a:	f000 80a7 	beq.w	80058cc <_vfiprintf_r+0x1ec>
 800577e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005780:	445a      	add	r2, fp
 8005782:	9209      	str	r2, [sp, #36]	@ 0x24
 8005784:	f89a 3000 	ldrb.w	r3, [sl]
 8005788:	2b00      	cmp	r3, #0
 800578a:	f000 809f 	beq.w	80058cc <_vfiprintf_r+0x1ec>
 800578e:	2300      	movs	r3, #0
 8005790:	f04f 32ff 	mov.w	r2, #4294967295
 8005794:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005798:	f10a 0a01 	add.w	sl, sl, #1
 800579c:	9304      	str	r3, [sp, #16]
 800579e:	9307      	str	r3, [sp, #28]
 80057a0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80057a4:	931a      	str	r3, [sp, #104]	@ 0x68
 80057a6:	4654      	mov	r4, sl
 80057a8:	2205      	movs	r2, #5
 80057aa:	f814 1b01 	ldrb.w	r1, [r4], #1
 80057ae:	4853      	ldr	r0, [pc, #332]	@ (80058fc <_vfiprintf_r+0x21c>)
 80057b0:	f7fa fd2e 	bl	8000210 <memchr>
 80057b4:	9a04      	ldr	r2, [sp, #16]
 80057b6:	b9d8      	cbnz	r0, 80057f0 <_vfiprintf_r+0x110>
 80057b8:	06d1      	lsls	r1, r2, #27
 80057ba:	bf44      	itt	mi
 80057bc:	2320      	movmi	r3, #32
 80057be:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80057c2:	0713      	lsls	r3, r2, #28
 80057c4:	bf44      	itt	mi
 80057c6:	232b      	movmi	r3, #43	@ 0x2b
 80057c8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80057cc:	f89a 3000 	ldrb.w	r3, [sl]
 80057d0:	2b2a      	cmp	r3, #42	@ 0x2a
 80057d2:	d015      	beq.n	8005800 <_vfiprintf_r+0x120>
 80057d4:	9a07      	ldr	r2, [sp, #28]
 80057d6:	4654      	mov	r4, sl
 80057d8:	2000      	movs	r0, #0
 80057da:	f04f 0c0a 	mov.w	ip, #10
 80057de:	4621      	mov	r1, r4
 80057e0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80057e4:	3b30      	subs	r3, #48	@ 0x30
 80057e6:	2b09      	cmp	r3, #9
 80057e8:	d94b      	bls.n	8005882 <_vfiprintf_r+0x1a2>
 80057ea:	b1b0      	cbz	r0, 800581a <_vfiprintf_r+0x13a>
 80057ec:	9207      	str	r2, [sp, #28]
 80057ee:	e014      	b.n	800581a <_vfiprintf_r+0x13a>
 80057f0:	eba0 0308 	sub.w	r3, r0, r8
 80057f4:	fa09 f303 	lsl.w	r3, r9, r3
 80057f8:	4313      	orrs	r3, r2
 80057fa:	9304      	str	r3, [sp, #16]
 80057fc:	46a2      	mov	sl, r4
 80057fe:	e7d2      	b.n	80057a6 <_vfiprintf_r+0xc6>
 8005800:	9b03      	ldr	r3, [sp, #12]
 8005802:	1d19      	adds	r1, r3, #4
 8005804:	681b      	ldr	r3, [r3, #0]
 8005806:	9103      	str	r1, [sp, #12]
 8005808:	2b00      	cmp	r3, #0
 800580a:	bfbb      	ittet	lt
 800580c:	425b      	neglt	r3, r3
 800580e:	f042 0202 	orrlt.w	r2, r2, #2
 8005812:	9307      	strge	r3, [sp, #28]
 8005814:	9307      	strlt	r3, [sp, #28]
 8005816:	bfb8      	it	lt
 8005818:	9204      	strlt	r2, [sp, #16]
 800581a:	7823      	ldrb	r3, [r4, #0]
 800581c:	2b2e      	cmp	r3, #46	@ 0x2e
 800581e:	d10a      	bne.n	8005836 <_vfiprintf_r+0x156>
 8005820:	7863      	ldrb	r3, [r4, #1]
 8005822:	2b2a      	cmp	r3, #42	@ 0x2a
 8005824:	d132      	bne.n	800588c <_vfiprintf_r+0x1ac>
 8005826:	9b03      	ldr	r3, [sp, #12]
 8005828:	1d1a      	adds	r2, r3, #4
 800582a:	681b      	ldr	r3, [r3, #0]
 800582c:	9203      	str	r2, [sp, #12]
 800582e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005832:	3402      	adds	r4, #2
 8005834:	9305      	str	r3, [sp, #20]
 8005836:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800590c <_vfiprintf_r+0x22c>
 800583a:	7821      	ldrb	r1, [r4, #0]
 800583c:	2203      	movs	r2, #3
 800583e:	4650      	mov	r0, sl
 8005840:	f7fa fce6 	bl	8000210 <memchr>
 8005844:	b138      	cbz	r0, 8005856 <_vfiprintf_r+0x176>
 8005846:	9b04      	ldr	r3, [sp, #16]
 8005848:	eba0 000a 	sub.w	r0, r0, sl
 800584c:	2240      	movs	r2, #64	@ 0x40
 800584e:	4082      	lsls	r2, r0
 8005850:	4313      	orrs	r3, r2
 8005852:	3401      	adds	r4, #1
 8005854:	9304      	str	r3, [sp, #16]
 8005856:	f814 1b01 	ldrb.w	r1, [r4], #1
 800585a:	4829      	ldr	r0, [pc, #164]	@ (8005900 <_vfiprintf_r+0x220>)
 800585c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8005860:	2206      	movs	r2, #6
 8005862:	f7fa fcd5 	bl	8000210 <memchr>
 8005866:	2800      	cmp	r0, #0
 8005868:	d03f      	beq.n	80058ea <_vfiprintf_r+0x20a>
 800586a:	4b26      	ldr	r3, [pc, #152]	@ (8005904 <_vfiprintf_r+0x224>)
 800586c:	bb1b      	cbnz	r3, 80058b6 <_vfiprintf_r+0x1d6>
 800586e:	9b03      	ldr	r3, [sp, #12]
 8005870:	3307      	adds	r3, #7
 8005872:	f023 0307 	bic.w	r3, r3, #7
 8005876:	3308      	adds	r3, #8
 8005878:	9303      	str	r3, [sp, #12]
 800587a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800587c:	443b      	add	r3, r7
 800587e:	9309      	str	r3, [sp, #36]	@ 0x24
 8005880:	e76a      	b.n	8005758 <_vfiprintf_r+0x78>
 8005882:	fb0c 3202 	mla	r2, ip, r2, r3
 8005886:	460c      	mov	r4, r1
 8005888:	2001      	movs	r0, #1
 800588a:	e7a8      	b.n	80057de <_vfiprintf_r+0xfe>
 800588c:	2300      	movs	r3, #0
 800588e:	3401      	adds	r4, #1
 8005890:	9305      	str	r3, [sp, #20]
 8005892:	4619      	mov	r1, r3
 8005894:	f04f 0c0a 	mov.w	ip, #10
 8005898:	4620      	mov	r0, r4
 800589a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800589e:	3a30      	subs	r2, #48	@ 0x30
 80058a0:	2a09      	cmp	r2, #9
 80058a2:	d903      	bls.n	80058ac <_vfiprintf_r+0x1cc>
 80058a4:	2b00      	cmp	r3, #0
 80058a6:	d0c6      	beq.n	8005836 <_vfiprintf_r+0x156>
 80058a8:	9105      	str	r1, [sp, #20]
 80058aa:	e7c4      	b.n	8005836 <_vfiprintf_r+0x156>
 80058ac:	fb0c 2101 	mla	r1, ip, r1, r2
 80058b0:	4604      	mov	r4, r0
 80058b2:	2301      	movs	r3, #1
 80058b4:	e7f0      	b.n	8005898 <_vfiprintf_r+0x1b8>
 80058b6:	ab03      	add	r3, sp, #12
 80058b8:	9300      	str	r3, [sp, #0]
 80058ba:	462a      	mov	r2, r5
 80058bc:	4b12      	ldr	r3, [pc, #72]	@ (8005908 <_vfiprintf_r+0x228>)
 80058be:	a904      	add	r1, sp, #16
 80058c0:	4630      	mov	r0, r6
 80058c2:	f7fc fb67 	bl	8001f94 <_printf_float>
 80058c6:	4607      	mov	r7, r0
 80058c8:	1c78      	adds	r0, r7, #1
 80058ca:	d1d6      	bne.n	800587a <_vfiprintf_r+0x19a>
 80058cc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80058ce:	07d9      	lsls	r1, r3, #31
 80058d0:	d405      	bmi.n	80058de <_vfiprintf_r+0x1fe>
 80058d2:	89ab      	ldrh	r3, [r5, #12]
 80058d4:	059a      	lsls	r2, r3, #22
 80058d6:	d402      	bmi.n	80058de <_vfiprintf_r+0x1fe>
 80058d8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80058da:	f7fd faf3 	bl	8002ec4 <__retarget_lock_release_recursive>
 80058de:	89ab      	ldrh	r3, [r5, #12]
 80058e0:	065b      	lsls	r3, r3, #25
 80058e2:	f53f af1f 	bmi.w	8005724 <_vfiprintf_r+0x44>
 80058e6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80058e8:	e71e      	b.n	8005728 <_vfiprintf_r+0x48>
 80058ea:	ab03      	add	r3, sp, #12
 80058ec:	9300      	str	r3, [sp, #0]
 80058ee:	462a      	mov	r2, r5
 80058f0:	4b05      	ldr	r3, [pc, #20]	@ (8005908 <_vfiprintf_r+0x228>)
 80058f2:	a904      	add	r1, sp, #16
 80058f4:	4630      	mov	r0, r6
 80058f6:	f7fc fde5 	bl	80024c4 <_printf_i>
 80058fa:	e7e4      	b.n	80058c6 <_vfiprintf_r+0x1e6>
 80058fc:	08006990 	.word	0x08006990
 8005900:	0800699a 	.word	0x0800699a
 8005904:	08001f95 	.word	0x08001f95
 8005908:	080056bb 	.word	0x080056bb
 800590c:	08006996 	.word	0x08006996

08005910 <__sflush_r>:
 8005910:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005914:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005918:	0716      	lsls	r6, r2, #28
 800591a:	4605      	mov	r5, r0
 800591c:	460c      	mov	r4, r1
 800591e:	d454      	bmi.n	80059ca <__sflush_r+0xba>
 8005920:	684b      	ldr	r3, [r1, #4]
 8005922:	2b00      	cmp	r3, #0
 8005924:	dc02      	bgt.n	800592c <__sflush_r+0x1c>
 8005926:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8005928:	2b00      	cmp	r3, #0
 800592a:	dd48      	ble.n	80059be <__sflush_r+0xae>
 800592c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800592e:	2e00      	cmp	r6, #0
 8005930:	d045      	beq.n	80059be <__sflush_r+0xae>
 8005932:	2300      	movs	r3, #0
 8005934:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8005938:	682f      	ldr	r7, [r5, #0]
 800593a:	6a21      	ldr	r1, [r4, #32]
 800593c:	602b      	str	r3, [r5, #0]
 800593e:	d030      	beq.n	80059a2 <__sflush_r+0x92>
 8005940:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005942:	89a3      	ldrh	r3, [r4, #12]
 8005944:	0759      	lsls	r1, r3, #29
 8005946:	d505      	bpl.n	8005954 <__sflush_r+0x44>
 8005948:	6863      	ldr	r3, [r4, #4]
 800594a:	1ad2      	subs	r2, r2, r3
 800594c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800594e:	b10b      	cbz	r3, 8005954 <__sflush_r+0x44>
 8005950:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005952:	1ad2      	subs	r2, r2, r3
 8005954:	2300      	movs	r3, #0
 8005956:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005958:	6a21      	ldr	r1, [r4, #32]
 800595a:	4628      	mov	r0, r5
 800595c:	47b0      	blx	r6
 800595e:	1c43      	adds	r3, r0, #1
 8005960:	89a3      	ldrh	r3, [r4, #12]
 8005962:	d106      	bne.n	8005972 <__sflush_r+0x62>
 8005964:	6829      	ldr	r1, [r5, #0]
 8005966:	291d      	cmp	r1, #29
 8005968:	d82b      	bhi.n	80059c2 <__sflush_r+0xb2>
 800596a:	4a2a      	ldr	r2, [pc, #168]	@ (8005a14 <__sflush_r+0x104>)
 800596c:	410a      	asrs	r2, r1
 800596e:	07d6      	lsls	r6, r2, #31
 8005970:	d427      	bmi.n	80059c2 <__sflush_r+0xb2>
 8005972:	2200      	movs	r2, #0
 8005974:	6062      	str	r2, [r4, #4]
 8005976:	04d9      	lsls	r1, r3, #19
 8005978:	6922      	ldr	r2, [r4, #16]
 800597a:	6022      	str	r2, [r4, #0]
 800597c:	d504      	bpl.n	8005988 <__sflush_r+0x78>
 800597e:	1c42      	adds	r2, r0, #1
 8005980:	d101      	bne.n	8005986 <__sflush_r+0x76>
 8005982:	682b      	ldr	r3, [r5, #0]
 8005984:	b903      	cbnz	r3, 8005988 <__sflush_r+0x78>
 8005986:	6560      	str	r0, [r4, #84]	@ 0x54
 8005988:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800598a:	602f      	str	r7, [r5, #0]
 800598c:	b1b9      	cbz	r1, 80059be <__sflush_r+0xae>
 800598e:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8005992:	4299      	cmp	r1, r3
 8005994:	d002      	beq.n	800599c <__sflush_r+0x8c>
 8005996:	4628      	mov	r0, r5
 8005998:	f7fe f8ea 	bl	8003b70 <_free_r>
 800599c:	2300      	movs	r3, #0
 800599e:	6363      	str	r3, [r4, #52]	@ 0x34
 80059a0:	e00d      	b.n	80059be <__sflush_r+0xae>
 80059a2:	2301      	movs	r3, #1
 80059a4:	4628      	mov	r0, r5
 80059a6:	47b0      	blx	r6
 80059a8:	4602      	mov	r2, r0
 80059aa:	1c50      	adds	r0, r2, #1
 80059ac:	d1c9      	bne.n	8005942 <__sflush_r+0x32>
 80059ae:	682b      	ldr	r3, [r5, #0]
 80059b0:	2b00      	cmp	r3, #0
 80059b2:	d0c6      	beq.n	8005942 <__sflush_r+0x32>
 80059b4:	2b1d      	cmp	r3, #29
 80059b6:	d001      	beq.n	80059bc <__sflush_r+0xac>
 80059b8:	2b16      	cmp	r3, #22
 80059ba:	d11e      	bne.n	80059fa <__sflush_r+0xea>
 80059bc:	602f      	str	r7, [r5, #0]
 80059be:	2000      	movs	r0, #0
 80059c0:	e022      	b.n	8005a08 <__sflush_r+0xf8>
 80059c2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80059c6:	b21b      	sxth	r3, r3
 80059c8:	e01b      	b.n	8005a02 <__sflush_r+0xf2>
 80059ca:	690f      	ldr	r7, [r1, #16]
 80059cc:	2f00      	cmp	r7, #0
 80059ce:	d0f6      	beq.n	80059be <__sflush_r+0xae>
 80059d0:	0793      	lsls	r3, r2, #30
 80059d2:	680e      	ldr	r6, [r1, #0]
 80059d4:	bf08      	it	eq
 80059d6:	694b      	ldreq	r3, [r1, #20]
 80059d8:	600f      	str	r7, [r1, #0]
 80059da:	bf18      	it	ne
 80059dc:	2300      	movne	r3, #0
 80059de:	eba6 0807 	sub.w	r8, r6, r7
 80059e2:	608b      	str	r3, [r1, #8]
 80059e4:	f1b8 0f00 	cmp.w	r8, #0
 80059e8:	dde9      	ble.n	80059be <__sflush_r+0xae>
 80059ea:	6a21      	ldr	r1, [r4, #32]
 80059ec:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80059ee:	4643      	mov	r3, r8
 80059f0:	463a      	mov	r2, r7
 80059f2:	4628      	mov	r0, r5
 80059f4:	47b0      	blx	r6
 80059f6:	2800      	cmp	r0, #0
 80059f8:	dc08      	bgt.n	8005a0c <__sflush_r+0xfc>
 80059fa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80059fe:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005a02:	81a3      	strh	r3, [r4, #12]
 8005a04:	f04f 30ff 	mov.w	r0, #4294967295
 8005a08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005a0c:	4407      	add	r7, r0
 8005a0e:	eba8 0800 	sub.w	r8, r8, r0
 8005a12:	e7e7      	b.n	80059e4 <__sflush_r+0xd4>
 8005a14:	dfbffffe 	.word	0xdfbffffe

08005a18 <_fflush_r>:
 8005a18:	b538      	push	{r3, r4, r5, lr}
 8005a1a:	690b      	ldr	r3, [r1, #16]
 8005a1c:	4605      	mov	r5, r0
 8005a1e:	460c      	mov	r4, r1
 8005a20:	b913      	cbnz	r3, 8005a28 <_fflush_r+0x10>
 8005a22:	2500      	movs	r5, #0
 8005a24:	4628      	mov	r0, r5
 8005a26:	bd38      	pop	{r3, r4, r5, pc}
 8005a28:	b118      	cbz	r0, 8005a32 <_fflush_r+0x1a>
 8005a2a:	6a03      	ldr	r3, [r0, #32]
 8005a2c:	b90b      	cbnz	r3, 8005a32 <_fflush_r+0x1a>
 8005a2e:	f7fd f909 	bl	8002c44 <__sinit>
 8005a32:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005a36:	2b00      	cmp	r3, #0
 8005a38:	d0f3      	beq.n	8005a22 <_fflush_r+0xa>
 8005a3a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8005a3c:	07d0      	lsls	r0, r2, #31
 8005a3e:	d404      	bmi.n	8005a4a <_fflush_r+0x32>
 8005a40:	0599      	lsls	r1, r3, #22
 8005a42:	d402      	bmi.n	8005a4a <_fflush_r+0x32>
 8005a44:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005a46:	f7fd fa3c 	bl	8002ec2 <__retarget_lock_acquire_recursive>
 8005a4a:	4628      	mov	r0, r5
 8005a4c:	4621      	mov	r1, r4
 8005a4e:	f7ff ff5f 	bl	8005910 <__sflush_r>
 8005a52:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005a54:	07da      	lsls	r2, r3, #31
 8005a56:	4605      	mov	r5, r0
 8005a58:	d4e4      	bmi.n	8005a24 <_fflush_r+0xc>
 8005a5a:	89a3      	ldrh	r3, [r4, #12]
 8005a5c:	059b      	lsls	r3, r3, #22
 8005a5e:	d4e1      	bmi.n	8005a24 <_fflush_r+0xc>
 8005a60:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005a62:	f7fd fa2f 	bl	8002ec4 <__retarget_lock_release_recursive>
 8005a66:	e7dd      	b.n	8005a24 <_fflush_r+0xc>

08005a68 <__swbuf_r>:
 8005a68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005a6a:	460e      	mov	r6, r1
 8005a6c:	4614      	mov	r4, r2
 8005a6e:	4605      	mov	r5, r0
 8005a70:	b118      	cbz	r0, 8005a7a <__swbuf_r+0x12>
 8005a72:	6a03      	ldr	r3, [r0, #32]
 8005a74:	b90b      	cbnz	r3, 8005a7a <__swbuf_r+0x12>
 8005a76:	f7fd f8e5 	bl	8002c44 <__sinit>
 8005a7a:	69a3      	ldr	r3, [r4, #24]
 8005a7c:	60a3      	str	r3, [r4, #8]
 8005a7e:	89a3      	ldrh	r3, [r4, #12]
 8005a80:	071a      	lsls	r2, r3, #28
 8005a82:	d501      	bpl.n	8005a88 <__swbuf_r+0x20>
 8005a84:	6923      	ldr	r3, [r4, #16]
 8005a86:	b943      	cbnz	r3, 8005a9a <__swbuf_r+0x32>
 8005a88:	4621      	mov	r1, r4
 8005a8a:	4628      	mov	r0, r5
 8005a8c:	f000 f82a 	bl	8005ae4 <__swsetup_r>
 8005a90:	b118      	cbz	r0, 8005a9a <__swbuf_r+0x32>
 8005a92:	f04f 37ff 	mov.w	r7, #4294967295
 8005a96:	4638      	mov	r0, r7
 8005a98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005a9a:	6823      	ldr	r3, [r4, #0]
 8005a9c:	6922      	ldr	r2, [r4, #16]
 8005a9e:	1a98      	subs	r0, r3, r2
 8005aa0:	6963      	ldr	r3, [r4, #20]
 8005aa2:	b2f6      	uxtb	r6, r6
 8005aa4:	4283      	cmp	r3, r0
 8005aa6:	4637      	mov	r7, r6
 8005aa8:	dc05      	bgt.n	8005ab6 <__swbuf_r+0x4e>
 8005aaa:	4621      	mov	r1, r4
 8005aac:	4628      	mov	r0, r5
 8005aae:	f7ff ffb3 	bl	8005a18 <_fflush_r>
 8005ab2:	2800      	cmp	r0, #0
 8005ab4:	d1ed      	bne.n	8005a92 <__swbuf_r+0x2a>
 8005ab6:	68a3      	ldr	r3, [r4, #8]
 8005ab8:	3b01      	subs	r3, #1
 8005aba:	60a3      	str	r3, [r4, #8]
 8005abc:	6823      	ldr	r3, [r4, #0]
 8005abe:	1c5a      	adds	r2, r3, #1
 8005ac0:	6022      	str	r2, [r4, #0]
 8005ac2:	701e      	strb	r6, [r3, #0]
 8005ac4:	6962      	ldr	r2, [r4, #20]
 8005ac6:	1c43      	adds	r3, r0, #1
 8005ac8:	429a      	cmp	r2, r3
 8005aca:	d004      	beq.n	8005ad6 <__swbuf_r+0x6e>
 8005acc:	89a3      	ldrh	r3, [r4, #12]
 8005ace:	07db      	lsls	r3, r3, #31
 8005ad0:	d5e1      	bpl.n	8005a96 <__swbuf_r+0x2e>
 8005ad2:	2e0a      	cmp	r6, #10
 8005ad4:	d1df      	bne.n	8005a96 <__swbuf_r+0x2e>
 8005ad6:	4621      	mov	r1, r4
 8005ad8:	4628      	mov	r0, r5
 8005ada:	f7ff ff9d 	bl	8005a18 <_fflush_r>
 8005ade:	2800      	cmp	r0, #0
 8005ae0:	d0d9      	beq.n	8005a96 <__swbuf_r+0x2e>
 8005ae2:	e7d6      	b.n	8005a92 <__swbuf_r+0x2a>

08005ae4 <__swsetup_r>:
 8005ae4:	b538      	push	{r3, r4, r5, lr}
 8005ae6:	4b29      	ldr	r3, [pc, #164]	@ (8005b8c <__swsetup_r+0xa8>)
 8005ae8:	4605      	mov	r5, r0
 8005aea:	6818      	ldr	r0, [r3, #0]
 8005aec:	460c      	mov	r4, r1
 8005aee:	b118      	cbz	r0, 8005af8 <__swsetup_r+0x14>
 8005af0:	6a03      	ldr	r3, [r0, #32]
 8005af2:	b90b      	cbnz	r3, 8005af8 <__swsetup_r+0x14>
 8005af4:	f7fd f8a6 	bl	8002c44 <__sinit>
 8005af8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005afc:	0719      	lsls	r1, r3, #28
 8005afe:	d422      	bmi.n	8005b46 <__swsetup_r+0x62>
 8005b00:	06da      	lsls	r2, r3, #27
 8005b02:	d407      	bmi.n	8005b14 <__swsetup_r+0x30>
 8005b04:	2209      	movs	r2, #9
 8005b06:	602a      	str	r2, [r5, #0]
 8005b08:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005b0c:	81a3      	strh	r3, [r4, #12]
 8005b0e:	f04f 30ff 	mov.w	r0, #4294967295
 8005b12:	e033      	b.n	8005b7c <__swsetup_r+0x98>
 8005b14:	0758      	lsls	r0, r3, #29
 8005b16:	d512      	bpl.n	8005b3e <__swsetup_r+0x5a>
 8005b18:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8005b1a:	b141      	cbz	r1, 8005b2e <__swsetup_r+0x4a>
 8005b1c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8005b20:	4299      	cmp	r1, r3
 8005b22:	d002      	beq.n	8005b2a <__swsetup_r+0x46>
 8005b24:	4628      	mov	r0, r5
 8005b26:	f7fe f823 	bl	8003b70 <_free_r>
 8005b2a:	2300      	movs	r3, #0
 8005b2c:	6363      	str	r3, [r4, #52]	@ 0x34
 8005b2e:	89a3      	ldrh	r3, [r4, #12]
 8005b30:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8005b34:	81a3      	strh	r3, [r4, #12]
 8005b36:	2300      	movs	r3, #0
 8005b38:	6063      	str	r3, [r4, #4]
 8005b3a:	6923      	ldr	r3, [r4, #16]
 8005b3c:	6023      	str	r3, [r4, #0]
 8005b3e:	89a3      	ldrh	r3, [r4, #12]
 8005b40:	f043 0308 	orr.w	r3, r3, #8
 8005b44:	81a3      	strh	r3, [r4, #12]
 8005b46:	6923      	ldr	r3, [r4, #16]
 8005b48:	b94b      	cbnz	r3, 8005b5e <__swsetup_r+0x7a>
 8005b4a:	89a3      	ldrh	r3, [r4, #12]
 8005b4c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8005b50:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8005b54:	d003      	beq.n	8005b5e <__swsetup_r+0x7a>
 8005b56:	4621      	mov	r1, r4
 8005b58:	4628      	mov	r0, r5
 8005b5a:	f000 fc5d 	bl	8006418 <__smakebuf_r>
 8005b5e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005b62:	f013 0201 	ands.w	r2, r3, #1
 8005b66:	d00a      	beq.n	8005b7e <__swsetup_r+0x9a>
 8005b68:	2200      	movs	r2, #0
 8005b6a:	60a2      	str	r2, [r4, #8]
 8005b6c:	6962      	ldr	r2, [r4, #20]
 8005b6e:	4252      	negs	r2, r2
 8005b70:	61a2      	str	r2, [r4, #24]
 8005b72:	6922      	ldr	r2, [r4, #16]
 8005b74:	b942      	cbnz	r2, 8005b88 <__swsetup_r+0xa4>
 8005b76:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8005b7a:	d1c5      	bne.n	8005b08 <__swsetup_r+0x24>
 8005b7c:	bd38      	pop	{r3, r4, r5, pc}
 8005b7e:	0799      	lsls	r1, r3, #30
 8005b80:	bf58      	it	pl
 8005b82:	6962      	ldrpl	r2, [r4, #20]
 8005b84:	60a2      	str	r2, [r4, #8]
 8005b86:	e7f4      	b.n	8005b72 <__swsetup_r+0x8e>
 8005b88:	2000      	movs	r0, #0
 8005b8a:	e7f7      	b.n	8005b7c <__swsetup_r+0x98>
 8005b8c:	20000030 	.word	0x20000030

08005b90 <memmove>:
 8005b90:	4288      	cmp	r0, r1
 8005b92:	b510      	push	{r4, lr}
 8005b94:	eb01 0402 	add.w	r4, r1, r2
 8005b98:	d902      	bls.n	8005ba0 <memmove+0x10>
 8005b9a:	4284      	cmp	r4, r0
 8005b9c:	4623      	mov	r3, r4
 8005b9e:	d807      	bhi.n	8005bb0 <memmove+0x20>
 8005ba0:	1e43      	subs	r3, r0, #1
 8005ba2:	42a1      	cmp	r1, r4
 8005ba4:	d008      	beq.n	8005bb8 <memmove+0x28>
 8005ba6:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005baa:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005bae:	e7f8      	b.n	8005ba2 <memmove+0x12>
 8005bb0:	4402      	add	r2, r0
 8005bb2:	4601      	mov	r1, r0
 8005bb4:	428a      	cmp	r2, r1
 8005bb6:	d100      	bne.n	8005bba <memmove+0x2a>
 8005bb8:	bd10      	pop	{r4, pc}
 8005bba:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005bbe:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005bc2:	e7f7      	b.n	8005bb4 <memmove+0x24>

08005bc4 <strncmp>:
 8005bc4:	b510      	push	{r4, lr}
 8005bc6:	b16a      	cbz	r2, 8005be4 <strncmp+0x20>
 8005bc8:	3901      	subs	r1, #1
 8005bca:	1884      	adds	r4, r0, r2
 8005bcc:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005bd0:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8005bd4:	429a      	cmp	r2, r3
 8005bd6:	d103      	bne.n	8005be0 <strncmp+0x1c>
 8005bd8:	42a0      	cmp	r0, r4
 8005bda:	d001      	beq.n	8005be0 <strncmp+0x1c>
 8005bdc:	2a00      	cmp	r2, #0
 8005bde:	d1f5      	bne.n	8005bcc <strncmp+0x8>
 8005be0:	1ad0      	subs	r0, r2, r3
 8005be2:	bd10      	pop	{r4, pc}
 8005be4:	4610      	mov	r0, r2
 8005be6:	e7fc      	b.n	8005be2 <strncmp+0x1e>

08005be8 <_sbrk_r>:
 8005be8:	b538      	push	{r3, r4, r5, lr}
 8005bea:	4d06      	ldr	r5, [pc, #24]	@ (8005c04 <_sbrk_r+0x1c>)
 8005bec:	2300      	movs	r3, #0
 8005bee:	4604      	mov	r4, r0
 8005bf0:	4608      	mov	r0, r1
 8005bf2:	602b      	str	r3, [r5, #0]
 8005bf4:	f7fc f8d0 	bl	8001d98 <_sbrk>
 8005bf8:	1c43      	adds	r3, r0, #1
 8005bfa:	d102      	bne.n	8005c02 <_sbrk_r+0x1a>
 8005bfc:	682b      	ldr	r3, [r5, #0]
 8005bfe:	b103      	cbz	r3, 8005c02 <_sbrk_r+0x1a>
 8005c00:	6023      	str	r3, [r4, #0]
 8005c02:	bd38      	pop	{r3, r4, r5, pc}
 8005c04:	2000076c 	.word	0x2000076c

08005c08 <memcpy>:
 8005c08:	440a      	add	r2, r1
 8005c0a:	4291      	cmp	r1, r2
 8005c0c:	f100 33ff 	add.w	r3, r0, #4294967295
 8005c10:	d100      	bne.n	8005c14 <memcpy+0xc>
 8005c12:	4770      	bx	lr
 8005c14:	b510      	push	{r4, lr}
 8005c16:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005c1a:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005c1e:	4291      	cmp	r1, r2
 8005c20:	d1f9      	bne.n	8005c16 <memcpy+0xe>
 8005c22:	bd10      	pop	{r4, pc}
 8005c24:	0000      	movs	r0, r0
	...

08005c28 <nan>:
 8005c28:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 8005c30 <nan+0x8>
 8005c2c:	4770      	bx	lr
 8005c2e:	bf00      	nop
 8005c30:	00000000 	.word	0x00000000
 8005c34:	7ff80000 	.word	0x7ff80000

08005c38 <__assert_func>:
 8005c38:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005c3a:	4614      	mov	r4, r2
 8005c3c:	461a      	mov	r2, r3
 8005c3e:	4b09      	ldr	r3, [pc, #36]	@ (8005c64 <__assert_func+0x2c>)
 8005c40:	681b      	ldr	r3, [r3, #0]
 8005c42:	4605      	mov	r5, r0
 8005c44:	68d8      	ldr	r0, [r3, #12]
 8005c46:	b954      	cbnz	r4, 8005c5e <__assert_func+0x26>
 8005c48:	4b07      	ldr	r3, [pc, #28]	@ (8005c68 <__assert_func+0x30>)
 8005c4a:	461c      	mov	r4, r3
 8005c4c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005c50:	9100      	str	r1, [sp, #0]
 8005c52:	462b      	mov	r3, r5
 8005c54:	4905      	ldr	r1, [pc, #20]	@ (8005c6c <__assert_func+0x34>)
 8005c56:	f000 fba7 	bl	80063a8 <fiprintf>
 8005c5a:	f000 fc3b 	bl	80064d4 <abort>
 8005c5e:	4b04      	ldr	r3, [pc, #16]	@ (8005c70 <__assert_func+0x38>)
 8005c60:	e7f4      	b.n	8005c4c <__assert_func+0x14>
 8005c62:	bf00      	nop
 8005c64:	20000030 	.word	0x20000030
 8005c68:	080069e4 	.word	0x080069e4
 8005c6c:	080069b6 	.word	0x080069b6
 8005c70:	080069a9 	.word	0x080069a9

08005c74 <_calloc_r>:
 8005c74:	b570      	push	{r4, r5, r6, lr}
 8005c76:	fba1 5402 	umull	r5, r4, r1, r2
 8005c7a:	b93c      	cbnz	r4, 8005c8c <_calloc_r+0x18>
 8005c7c:	4629      	mov	r1, r5
 8005c7e:	f7fd ffeb 	bl	8003c58 <_malloc_r>
 8005c82:	4606      	mov	r6, r0
 8005c84:	b928      	cbnz	r0, 8005c92 <_calloc_r+0x1e>
 8005c86:	2600      	movs	r6, #0
 8005c88:	4630      	mov	r0, r6
 8005c8a:	bd70      	pop	{r4, r5, r6, pc}
 8005c8c:	220c      	movs	r2, #12
 8005c8e:	6002      	str	r2, [r0, #0]
 8005c90:	e7f9      	b.n	8005c86 <_calloc_r+0x12>
 8005c92:	462a      	mov	r2, r5
 8005c94:	4621      	mov	r1, r4
 8005c96:	f7fd f880 	bl	8002d9a <memset>
 8005c9a:	e7f5      	b.n	8005c88 <_calloc_r+0x14>

08005c9c <rshift>:
 8005c9c:	6903      	ldr	r3, [r0, #16]
 8005c9e:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8005ca2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005ca6:	ea4f 1261 	mov.w	r2, r1, asr #5
 8005caa:	f100 0414 	add.w	r4, r0, #20
 8005cae:	dd45      	ble.n	8005d3c <rshift+0xa0>
 8005cb0:	f011 011f 	ands.w	r1, r1, #31
 8005cb4:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8005cb8:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8005cbc:	d10c      	bne.n	8005cd8 <rshift+0x3c>
 8005cbe:	f100 0710 	add.w	r7, r0, #16
 8005cc2:	4629      	mov	r1, r5
 8005cc4:	42b1      	cmp	r1, r6
 8005cc6:	d334      	bcc.n	8005d32 <rshift+0x96>
 8005cc8:	1a9b      	subs	r3, r3, r2
 8005cca:	009b      	lsls	r3, r3, #2
 8005ccc:	1eea      	subs	r2, r5, #3
 8005cce:	4296      	cmp	r6, r2
 8005cd0:	bf38      	it	cc
 8005cd2:	2300      	movcc	r3, #0
 8005cd4:	4423      	add	r3, r4
 8005cd6:	e015      	b.n	8005d04 <rshift+0x68>
 8005cd8:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8005cdc:	f1c1 0820 	rsb	r8, r1, #32
 8005ce0:	40cf      	lsrs	r7, r1
 8005ce2:	f105 0e04 	add.w	lr, r5, #4
 8005ce6:	46a1      	mov	r9, r4
 8005ce8:	4576      	cmp	r6, lr
 8005cea:	46f4      	mov	ip, lr
 8005cec:	d815      	bhi.n	8005d1a <rshift+0x7e>
 8005cee:	1a9a      	subs	r2, r3, r2
 8005cf0:	0092      	lsls	r2, r2, #2
 8005cf2:	3a04      	subs	r2, #4
 8005cf4:	3501      	adds	r5, #1
 8005cf6:	42ae      	cmp	r6, r5
 8005cf8:	bf38      	it	cc
 8005cfa:	2200      	movcc	r2, #0
 8005cfc:	18a3      	adds	r3, r4, r2
 8005cfe:	50a7      	str	r7, [r4, r2]
 8005d00:	b107      	cbz	r7, 8005d04 <rshift+0x68>
 8005d02:	3304      	adds	r3, #4
 8005d04:	1b1a      	subs	r2, r3, r4
 8005d06:	42a3      	cmp	r3, r4
 8005d08:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8005d0c:	bf08      	it	eq
 8005d0e:	2300      	moveq	r3, #0
 8005d10:	6102      	str	r2, [r0, #16]
 8005d12:	bf08      	it	eq
 8005d14:	6143      	streq	r3, [r0, #20]
 8005d16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005d1a:	f8dc c000 	ldr.w	ip, [ip]
 8005d1e:	fa0c fc08 	lsl.w	ip, ip, r8
 8005d22:	ea4c 0707 	orr.w	r7, ip, r7
 8005d26:	f849 7b04 	str.w	r7, [r9], #4
 8005d2a:	f85e 7b04 	ldr.w	r7, [lr], #4
 8005d2e:	40cf      	lsrs	r7, r1
 8005d30:	e7da      	b.n	8005ce8 <rshift+0x4c>
 8005d32:	f851 cb04 	ldr.w	ip, [r1], #4
 8005d36:	f847 cf04 	str.w	ip, [r7, #4]!
 8005d3a:	e7c3      	b.n	8005cc4 <rshift+0x28>
 8005d3c:	4623      	mov	r3, r4
 8005d3e:	e7e1      	b.n	8005d04 <rshift+0x68>

08005d40 <__hexdig_fun>:
 8005d40:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 8005d44:	2b09      	cmp	r3, #9
 8005d46:	d802      	bhi.n	8005d4e <__hexdig_fun+0xe>
 8005d48:	3820      	subs	r0, #32
 8005d4a:	b2c0      	uxtb	r0, r0
 8005d4c:	4770      	bx	lr
 8005d4e:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 8005d52:	2b05      	cmp	r3, #5
 8005d54:	d801      	bhi.n	8005d5a <__hexdig_fun+0x1a>
 8005d56:	3847      	subs	r0, #71	@ 0x47
 8005d58:	e7f7      	b.n	8005d4a <__hexdig_fun+0xa>
 8005d5a:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8005d5e:	2b05      	cmp	r3, #5
 8005d60:	d801      	bhi.n	8005d66 <__hexdig_fun+0x26>
 8005d62:	3827      	subs	r0, #39	@ 0x27
 8005d64:	e7f1      	b.n	8005d4a <__hexdig_fun+0xa>
 8005d66:	2000      	movs	r0, #0
 8005d68:	4770      	bx	lr
	...

08005d6c <__gethex>:
 8005d6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d70:	b085      	sub	sp, #20
 8005d72:	468a      	mov	sl, r1
 8005d74:	9302      	str	r3, [sp, #8]
 8005d76:	680b      	ldr	r3, [r1, #0]
 8005d78:	9001      	str	r0, [sp, #4]
 8005d7a:	4690      	mov	r8, r2
 8005d7c:	1c9c      	adds	r4, r3, #2
 8005d7e:	46a1      	mov	r9, r4
 8005d80:	f814 0b01 	ldrb.w	r0, [r4], #1
 8005d84:	2830      	cmp	r0, #48	@ 0x30
 8005d86:	d0fa      	beq.n	8005d7e <__gethex+0x12>
 8005d88:	eba9 0303 	sub.w	r3, r9, r3
 8005d8c:	f1a3 0b02 	sub.w	fp, r3, #2
 8005d90:	f7ff ffd6 	bl	8005d40 <__hexdig_fun>
 8005d94:	4605      	mov	r5, r0
 8005d96:	2800      	cmp	r0, #0
 8005d98:	d168      	bne.n	8005e6c <__gethex+0x100>
 8005d9a:	49a0      	ldr	r1, [pc, #640]	@ (800601c <__gethex+0x2b0>)
 8005d9c:	2201      	movs	r2, #1
 8005d9e:	4648      	mov	r0, r9
 8005da0:	f7ff ff10 	bl	8005bc4 <strncmp>
 8005da4:	4607      	mov	r7, r0
 8005da6:	2800      	cmp	r0, #0
 8005da8:	d167      	bne.n	8005e7a <__gethex+0x10e>
 8005daa:	f899 0001 	ldrb.w	r0, [r9, #1]
 8005dae:	4626      	mov	r6, r4
 8005db0:	f7ff ffc6 	bl	8005d40 <__hexdig_fun>
 8005db4:	2800      	cmp	r0, #0
 8005db6:	d062      	beq.n	8005e7e <__gethex+0x112>
 8005db8:	4623      	mov	r3, r4
 8005dba:	7818      	ldrb	r0, [r3, #0]
 8005dbc:	2830      	cmp	r0, #48	@ 0x30
 8005dbe:	4699      	mov	r9, r3
 8005dc0:	f103 0301 	add.w	r3, r3, #1
 8005dc4:	d0f9      	beq.n	8005dba <__gethex+0x4e>
 8005dc6:	f7ff ffbb 	bl	8005d40 <__hexdig_fun>
 8005dca:	fab0 f580 	clz	r5, r0
 8005dce:	096d      	lsrs	r5, r5, #5
 8005dd0:	f04f 0b01 	mov.w	fp, #1
 8005dd4:	464a      	mov	r2, r9
 8005dd6:	4616      	mov	r6, r2
 8005dd8:	3201      	adds	r2, #1
 8005dda:	7830      	ldrb	r0, [r6, #0]
 8005ddc:	f7ff ffb0 	bl	8005d40 <__hexdig_fun>
 8005de0:	2800      	cmp	r0, #0
 8005de2:	d1f8      	bne.n	8005dd6 <__gethex+0x6a>
 8005de4:	498d      	ldr	r1, [pc, #564]	@ (800601c <__gethex+0x2b0>)
 8005de6:	2201      	movs	r2, #1
 8005de8:	4630      	mov	r0, r6
 8005dea:	f7ff feeb 	bl	8005bc4 <strncmp>
 8005dee:	2800      	cmp	r0, #0
 8005df0:	d13f      	bne.n	8005e72 <__gethex+0x106>
 8005df2:	b944      	cbnz	r4, 8005e06 <__gethex+0x9a>
 8005df4:	1c74      	adds	r4, r6, #1
 8005df6:	4622      	mov	r2, r4
 8005df8:	4616      	mov	r6, r2
 8005dfa:	3201      	adds	r2, #1
 8005dfc:	7830      	ldrb	r0, [r6, #0]
 8005dfe:	f7ff ff9f 	bl	8005d40 <__hexdig_fun>
 8005e02:	2800      	cmp	r0, #0
 8005e04:	d1f8      	bne.n	8005df8 <__gethex+0x8c>
 8005e06:	1ba4      	subs	r4, r4, r6
 8005e08:	00a7      	lsls	r7, r4, #2
 8005e0a:	7833      	ldrb	r3, [r6, #0]
 8005e0c:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 8005e10:	2b50      	cmp	r3, #80	@ 0x50
 8005e12:	d13e      	bne.n	8005e92 <__gethex+0x126>
 8005e14:	7873      	ldrb	r3, [r6, #1]
 8005e16:	2b2b      	cmp	r3, #43	@ 0x2b
 8005e18:	d033      	beq.n	8005e82 <__gethex+0x116>
 8005e1a:	2b2d      	cmp	r3, #45	@ 0x2d
 8005e1c:	d034      	beq.n	8005e88 <__gethex+0x11c>
 8005e1e:	1c71      	adds	r1, r6, #1
 8005e20:	2400      	movs	r4, #0
 8005e22:	7808      	ldrb	r0, [r1, #0]
 8005e24:	f7ff ff8c 	bl	8005d40 <__hexdig_fun>
 8005e28:	1e43      	subs	r3, r0, #1
 8005e2a:	b2db      	uxtb	r3, r3
 8005e2c:	2b18      	cmp	r3, #24
 8005e2e:	d830      	bhi.n	8005e92 <__gethex+0x126>
 8005e30:	f1a0 0210 	sub.w	r2, r0, #16
 8005e34:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005e38:	f7ff ff82 	bl	8005d40 <__hexdig_fun>
 8005e3c:	f100 3cff 	add.w	ip, r0, #4294967295
 8005e40:	fa5f fc8c 	uxtb.w	ip, ip
 8005e44:	f1bc 0f18 	cmp.w	ip, #24
 8005e48:	f04f 030a 	mov.w	r3, #10
 8005e4c:	d91e      	bls.n	8005e8c <__gethex+0x120>
 8005e4e:	b104      	cbz	r4, 8005e52 <__gethex+0xe6>
 8005e50:	4252      	negs	r2, r2
 8005e52:	4417      	add	r7, r2
 8005e54:	f8ca 1000 	str.w	r1, [sl]
 8005e58:	b1ed      	cbz	r5, 8005e96 <__gethex+0x12a>
 8005e5a:	f1bb 0f00 	cmp.w	fp, #0
 8005e5e:	bf0c      	ite	eq
 8005e60:	2506      	moveq	r5, #6
 8005e62:	2500      	movne	r5, #0
 8005e64:	4628      	mov	r0, r5
 8005e66:	b005      	add	sp, #20
 8005e68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005e6c:	2500      	movs	r5, #0
 8005e6e:	462c      	mov	r4, r5
 8005e70:	e7b0      	b.n	8005dd4 <__gethex+0x68>
 8005e72:	2c00      	cmp	r4, #0
 8005e74:	d1c7      	bne.n	8005e06 <__gethex+0x9a>
 8005e76:	4627      	mov	r7, r4
 8005e78:	e7c7      	b.n	8005e0a <__gethex+0x9e>
 8005e7a:	464e      	mov	r6, r9
 8005e7c:	462f      	mov	r7, r5
 8005e7e:	2501      	movs	r5, #1
 8005e80:	e7c3      	b.n	8005e0a <__gethex+0x9e>
 8005e82:	2400      	movs	r4, #0
 8005e84:	1cb1      	adds	r1, r6, #2
 8005e86:	e7cc      	b.n	8005e22 <__gethex+0xb6>
 8005e88:	2401      	movs	r4, #1
 8005e8a:	e7fb      	b.n	8005e84 <__gethex+0x118>
 8005e8c:	fb03 0002 	mla	r0, r3, r2, r0
 8005e90:	e7ce      	b.n	8005e30 <__gethex+0xc4>
 8005e92:	4631      	mov	r1, r6
 8005e94:	e7de      	b.n	8005e54 <__gethex+0xe8>
 8005e96:	eba6 0309 	sub.w	r3, r6, r9
 8005e9a:	3b01      	subs	r3, #1
 8005e9c:	4629      	mov	r1, r5
 8005e9e:	2b07      	cmp	r3, #7
 8005ea0:	dc0a      	bgt.n	8005eb8 <__gethex+0x14c>
 8005ea2:	9801      	ldr	r0, [sp, #4]
 8005ea4:	f7fd ff64 	bl	8003d70 <_Balloc>
 8005ea8:	4604      	mov	r4, r0
 8005eaa:	b940      	cbnz	r0, 8005ebe <__gethex+0x152>
 8005eac:	4b5c      	ldr	r3, [pc, #368]	@ (8006020 <__gethex+0x2b4>)
 8005eae:	4602      	mov	r2, r0
 8005eb0:	21e4      	movs	r1, #228	@ 0xe4
 8005eb2:	485c      	ldr	r0, [pc, #368]	@ (8006024 <__gethex+0x2b8>)
 8005eb4:	f7ff fec0 	bl	8005c38 <__assert_func>
 8005eb8:	3101      	adds	r1, #1
 8005eba:	105b      	asrs	r3, r3, #1
 8005ebc:	e7ef      	b.n	8005e9e <__gethex+0x132>
 8005ebe:	f100 0a14 	add.w	sl, r0, #20
 8005ec2:	2300      	movs	r3, #0
 8005ec4:	4655      	mov	r5, sl
 8005ec6:	469b      	mov	fp, r3
 8005ec8:	45b1      	cmp	r9, r6
 8005eca:	d337      	bcc.n	8005f3c <__gethex+0x1d0>
 8005ecc:	f845 bb04 	str.w	fp, [r5], #4
 8005ed0:	eba5 050a 	sub.w	r5, r5, sl
 8005ed4:	10ad      	asrs	r5, r5, #2
 8005ed6:	6125      	str	r5, [r4, #16]
 8005ed8:	4658      	mov	r0, fp
 8005eda:	f7fe f83b 	bl	8003f54 <__hi0bits>
 8005ede:	016d      	lsls	r5, r5, #5
 8005ee0:	f8d8 6000 	ldr.w	r6, [r8]
 8005ee4:	1a2d      	subs	r5, r5, r0
 8005ee6:	42b5      	cmp	r5, r6
 8005ee8:	dd54      	ble.n	8005f94 <__gethex+0x228>
 8005eea:	1bad      	subs	r5, r5, r6
 8005eec:	4629      	mov	r1, r5
 8005eee:	4620      	mov	r0, r4
 8005ef0:	f7fe fbcf 	bl	8004692 <__any_on>
 8005ef4:	4681      	mov	r9, r0
 8005ef6:	b178      	cbz	r0, 8005f18 <__gethex+0x1ac>
 8005ef8:	1e6b      	subs	r3, r5, #1
 8005efa:	1159      	asrs	r1, r3, #5
 8005efc:	f003 021f 	and.w	r2, r3, #31
 8005f00:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8005f04:	f04f 0901 	mov.w	r9, #1
 8005f08:	fa09 f202 	lsl.w	r2, r9, r2
 8005f0c:	420a      	tst	r2, r1
 8005f0e:	d003      	beq.n	8005f18 <__gethex+0x1ac>
 8005f10:	454b      	cmp	r3, r9
 8005f12:	dc36      	bgt.n	8005f82 <__gethex+0x216>
 8005f14:	f04f 0902 	mov.w	r9, #2
 8005f18:	4629      	mov	r1, r5
 8005f1a:	4620      	mov	r0, r4
 8005f1c:	f7ff febe 	bl	8005c9c <rshift>
 8005f20:	442f      	add	r7, r5
 8005f22:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005f26:	42bb      	cmp	r3, r7
 8005f28:	da42      	bge.n	8005fb0 <__gethex+0x244>
 8005f2a:	9801      	ldr	r0, [sp, #4]
 8005f2c:	4621      	mov	r1, r4
 8005f2e:	f7fd ff5f 	bl	8003df0 <_Bfree>
 8005f32:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005f34:	2300      	movs	r3, #0
 8005f36:	6013      	str	r3, [r2, #0]
 8005f38:	25a3      	movs	r5, #163	@ 0xa3
 8005f3a:	e793      	b.n	8005e64 <__gethex+0xf8>
 8005f3c:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8005f40:	2a2e      	cmp	r2, #46	@ 0x2e
 8005f42:	d012      	beq.n	8005f6a <__gethex+0x1fe>
 8005f44:	2b20      	cmp	r3, #32
 8005f46:	d104      	bne.n	8005f52 <__gethex+0x1e6>
 8005f48:	f845 bb04 	str.w	fp, [r5], #4
 8005f4c:	f04f 0b00 	mov.w	fp, #0
 8005f50:	465b      	mov	r3, fp
 8005f52:	7830      	ldrb	r0, [r6, #0]
 8005f54:	9303      	str	r3, [sp, #12]
 8005f56:	f7ff fef3 	bl	8005d40 <__hexdig_fun>
 8005f5a:	9b03      	ldr	r3, [sp, #12]
 8005f5c:	f000 000f 	and.w	r0, r0, #15
 8005f60:	4098      	lsls	r0, r3
 8005f62:	ea4b 0b00 	orr.w	fp, fp, r0
 8005f66:	3304      	adds	r3, #4
 8005f68:	e7ae      	b.n	8005ec8 <__gethex+0x15c>
 8005f6a:	45b1      	cmp	r9, r6
 8005f6c:	d8ea      	bhi.n	8005f44 <__gethex+0x1d8>
 8005f6e:	492b      	ldr	r1, [pc, #172]	@ (800601c <__gethex+0x2b0>)
 8005f70:	9303      	str	r3, [sp, #12]
 8005f72:	2201      	movs	r2, #1
 8005f74:	4630      	mov	r0, r6
 8005f76:	f7ff fe25 	bl	8005bc4 <strncmp>
 8005f7a:	9b03      	ldr	r3, [sp, #12]
 8005f7c:	2800      	cmp	r0, #0
 8005f7e:	d1e1      	bne.n	8005f44 <__gethex+0x1d8>
 8005f80:	e7a2      	b.n	8005ec8 <__gethex+0x15c>
 8005f82:	1ea9      	subs	r1, r5, #2
 8005f84:	4620      	mov	r0, r4
 8005f86:	f7fe fb84 	bl	8004692 <__any_on>
 8005f8a:	2800      	cmp	r0, #0
 8005f8c:	d0c2      	beq.n	8005f14 <__gethex+0x1a8>
 8005f8e:	f04f 0903 	mov.w	r9, #3
 8005f92:	e7c1      	b.n	8005f18 <__gethex+0x1ac>
 8005f94:	da09      	bge.n	8005faa <__gethex+0x23e>
 8005f96:	1b75      	subs	r5, r6, r5
 8005f98:	4621      	mov	r1, r4
 8005f9a:	9801      	ldr	r0, [sp, #4]
 8005f9c:	462a      	mov	r2, r5
 8005f9e:	f7fe f93f 	bl	8004220 <__lshift>
 8005fa2:	1b7f      	subs	r7, r7, r5
 8005fa4:	4604      	mov	r4, r0
 8005fa6:	f100 0a14 	add.w	sl, r0, #20
 8005faa:	f04f 0900 	mov.w	r9, #0
 8005fae:	e7b8      	b.n	8005f22 <__gethex+0x1b6>
 8005fb0:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8005fb4:	42bd      	cmp	r5, r7
 8005fb6:	dd6f      	ble.n	8006098 <__gethex+0x32c>
 8005fb8:	1bed      	subs	r5, r5, r7
 8005fba:	42ae      	cmp	r6, r5
 8005fbc:	dc34      	bgt.n	8006028 <__gethex+0x2bc>
 8005fbe:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005fc2:	2b02      	cmp	r3, #2
 8005fc4:	d022      	beq.n	800600c <__gethex+0x2a0>
 8005fc6:	2b03      	cmp	r3, #3
 8005fc8:	d024      	beq.n	8006014 <__gethex+0x2a8>
 8005fca:	2b01      	cmp	r3, #1
 8005fcc:	d115      	bne.n	8005ffa <__gethex+0x28e>
 8005fce:	42ae      	cmp	r6, r5
 8005fd0:	d113      	bne.n	8005ffa <__gethex+0x28e>
 8005fd2:	2e01      	cmp	r6, #1
 8005fd4:	d10b      	bne.n	8005fee <__gethex+0x282>
 8005fd6:	9a02      	ldr	r2, [sp, #8]
 8005fd8:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8005fdc:	6013      	str	r3, [r2, #0]
 8005fde:	2301      	movs	r3, #1
 8005fe0:	6123      	str	r3, [r4, #16]
 8005fe2:	f8ca 3000 	str.w	r3, [sl]
 8005fe6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005fe8:	2562      	movs	r5, #98	@ 0x62
 8005fea:	601c      	str	r4, [r3, #0]
 8005fec:	e73a      	b.n	8005e64 <__gethex+0xf8>
 8005fee:	1e71      	subs	r1, r6, #1
 8005ff0:	4620      	mov	r0, r4
 8005ff2:	f7fe fb4e 	bl	8004692 <__any_on>
 8005ff6:	2800      	cmp	r0, #0
 8005ff8:	d1ed      	bne.n	8005fd6 <__gethex+0x26a>
 8005ffa:	9801      	ldr	r0, [sp, #4]
 8005ffc:	4621      	mov	r1, r4
 8005ffe:	f7fd fef7 	bl	8003df0 <_Bfree>
 8006002:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8006004:	2300      	movs	r3, #0
 8006006:	6013      	str	r3, [r2, #0]
 8006008:	2550      	movs	r5, #80	@ 0x50
 800600a:	e72b      	b.n	8005e64 <__gethex+0xf8>
 800600c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800600e:	2b00      	cmp	r3, #0
 8006010:	d1f3      	bne.n	8005ffa <__gethex+0x28e>
 8006012:	e7e0      	b.n	8005fd6 <__gethex+0x26a>
 8006014:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006016:	2b00      	cmp	r3, #0
 8006018:	d1dd      	bne.n	8005fd6 <__gethex+0x26a>
 800601a:	e7ee      	b.n	8005ffa <__gethex+0x28e>
 800601c:	08006938 	.word	0x08006938
 8006020:	080067d0 	.word	0x080067d0
 8006024:	080069e5 	.word	0x080069e5
 8006028:	1e6f      	subs	r7, r5, #1
 800602a:	f1b9 0f00 	cmp.w	r9, #0
 800602e:	d130      	bne.n	8006092 <__gethex+0x326>
 8006030:	b127      	cbz	r7, 800603c <__gethex+0x2d0>
 8006032:	4639      	mov	r1, r7
 8006034:	4620      	mov	r0, r4
 8006036:	f7fe fb2c 	bl	8004692 <__any_on>
 800603a:	4681      	mov	r9, r0
 800603c:	117a      	asrs	r2, r7, #5
 800603e:	2301      	movs	r3, #1
 8006040:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8006044:	f007 071f 	and.w	r7, r7, #31
 8006048:	40bb      	lsls	r3, r7
 800604a:	4213      	tst	r3, r2
 800604c:	4629      	mov	r1, r5
 800604e:	4620      	mov	r0, r4
 8006050:	bf18      	it	ne
 8006052:	f049 0902 	orrne.w	r9, r9, #2
 8006056:	f7ff fe21 	bl	8005c9c <rshift>
 800605a:	f8d8 7004 	ldr.w	r7, [r8, #4]
 800605e:	1b76      	subs	r6, r6, r5
 8006060:	2502      	movs	r5, #2
 8006062:	f1b9 0f00 	cmp.w	r9, #0
 8006066:	d047      	beq.n	80060f8 <__gethex+0x38c>
 8006068:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800606c:	2b02      	cmp	r3, #2
 800606e:	d015      	beq.n	800609c <__gethex+0x330>
 8006070:	2b03      	cmp	r3, #3
 8006072:	d017      	beq.n	80060a4 <__gethex+0x338>
 8006074:	2b01      	cmp	r3, #1
 8006076:	d109      	bne.n	800608c <__gethex+0x320>
 8006078:	f019 0f02 	tst.w	r9, #2
 800607c:	d006      	beq.n	800608c <__gethex+0x320>
 800607e:	f8da 3000 	ldr.w	r3, [sl]
 8006082:	ea49 0903 	orr.w	r9, r9, r3
 8006086:	f019 0f01 	tst.w	r9, #1
 800608a:	d10e      	bne.n	80060aa <__gethex+0x33e>
 800608c:	f045 0510 	orr.w	r5, r5, #16
 8006090:	e032      	b.n	80060f8 <__gethex+0x38c>
 8006092:	f04f 0901 	mov.w	r9, #1
 8006096:	e7d1      	b.n	800603c <__gethex+0x2d0>
 8006098:	2501      	movs	r5, #1
 800609a:	e7e2      	b.n	8006062 <__gethex+0x2f6>
 800609c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800609e:	f1c3 0301 	rsb	r3, r3, #1
 80060a2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80060a4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80060a6:	2b00      	cmp	r3, #0
 80060a8:	d0f0      	beq.n	800608c <__gethex+0x320>
 80060aa:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80060ae:	f104 0314 	add.w	r3, r4, #20
 80060b2:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 80060b6:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 80060ba:	f04f 0c00 	mov.w	ip, #0
 80060be:	4618      	mov	r0, r3
 80060c0:	f853 2b04 	ldr.w	r2, [r3], #4
 80060c4:	f1b2 3fff 	cmp.w	r2, #4294967295
 80060c8:	d01b      	beq.n	8006102 <__gethex+0x396>
 80060ca:	3201      	adds	r2, #1
 80060cc:	6002      	str	r2, [r0, #0]
 80060ce:	2d02      	cmp	r5, #2
 80060d0:	f104 0314 	add.w	r3, r4, #20
 80060d4:	d13c      	bne.n	8006150 <__gethex+0x3e4>
 80060d6:	f8d8 2000 	ldr.w	r2, [r8]
 80060da:	3a01      	subs	r2, #1
 80060dc:	42b2      	cmp	r2, r6
 80060de:	d109      	bne.n	80060f4 <__gethex+0x388>
 80060e0:	1171      	asrs	r1, r6, #5
 80060e2:	2201      	movs	r2, #1
 80060e4:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80060e8:	f006 061f 	and.w	r6, r6, #31
 80060ec:	fa02 f606 	lsl.w	r6, r2, r6
 80060f0:	421e      	tst	r6, r3
 80060f2:	d13a      	bne.n	800616a <__gethex+0x3fe>
 80060f4:	f045 0520 	orr.w	r5, r5, #32
 80060f8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80060fa:	601c      	str	r4, [r3, #0]
 80060fc:	9b02      	ldr	r3, [sp, #8]
 80060fe:	601f      	str	r7, [r3, #0]
 8006100:	e6b0      	b.n	8005e64 <__gethex+0xf8>
 8006102:	4299      	cmp	r1, r3
 8006104:	f843 cc04 	str.w	ip, [r3, #-4]
 8006108:	d8d9      	bhi.n	80060be <__gethex+0x352>
 800610a:	68a3      	ldr	r3, [r4, #8]
 800610c:	459b      	cmp	fp, r3
 800610e:	db17      	blt.n	8006140 <__gethex+0x3d4>
 8006110:	6861      	ldr	r1, [r4, #4]
 8006112:	9801      	ldr	r0, [sp, #4]
 8006114:	3101      	adds	r1, #1
 8006116:	f7fd fe2b 	bl	8003d70 <_Balloc>
 800611a:	4681      	mov	r9, r0
 800611c:	b918      	cbnz	r0, 8006126 <__gethex+0x3ba>
 800611e:	4b1a      	ldr	r3, [pc, #104]	@ (8006188 <__gethex+0x41c>)
 8006120:	4602      	mov	r2, r0
 8006122:	2184      	movs	r1, #132	@ 0x84
 8006124:	e6c5      	b.n	8005eb2 <__gethex+0x146>
 8006126:	6922      	ldr	r2, [r4, #16]
 8006128:	3202      	adds	r2, #2
 800612a:	f104 010c 	add.w	r1, r4, #12
 800612e:	0092      	lsls	r2, r2, #2
 8006130:	300c      	adds	r0, #12
 8006132:	f7ff fd69 	bl	8005c08 <memcpy>
 8006136:	4621      	mov	r1, r4
 8006138:	9801      	ldr	r0, [sp, #4]
 800613a:	f7fd fe59 	bl	8003df0 <_Bfree>
 800613e:	464c      	mov	r4, r9
 8006140:	6923      	ldr	r3, [r4, #16]
 8006142:	1c5a      	adds	r2, r3, #1
 8006144:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006148:	6122      	str	r2, [r4, #16]
 800614a:	2201      	movs	r2, #1
 800614c:	615a      	str	r2, [r3, #20]
 800614e:	e7be      	b.n	80060ce <__gethex+0x362>
 8006150:	6922      	ldr	r2, [r4, #16]
 8006152:	455a      	cmp	r2, fp
 8006154:	dd0b      	ble.n	800616e <__gethex+0x402>
 8006156:	2101      	movs	r1, #1
 8006158:	4620      	mov	r0, r4
 800615a:	f7ff fd9f 	bl	8005c9c <rshift>
 800615e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8006162:	3701      	adds	r7, #1
 8006164:	42bb      	cmp	r3, r7
 8006166:	f6ff aee0 	blt.w	8005f2a <__gethex+0x1be>
 800616a:	2501      	movs	r5, #1
 800616c:	e7c2      	b.n	80060f4 <__gethex+0x388>
 800616e:	f016 061f 	ands.w	r6, r6, #31
 8006172:	d0fa      	beq.n	800616a <__gethex+0x3fe>
 8006174:	4453      	add	r3, sl
 8006176:	f1c6 0620 	rsb	r6, r6, #32
 800617a:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800617e:	f7fd fee9 	bl	8003f54 <__hi0bits>
 8006182:	42b0      	cmp	r0, r6
 8006184:	dbe7      	blt.n	8006156 <__gethex+0x3ea>
 8006186:	e7f0      	b.n	800616a <__gethex+0x3fe>
 8006188:	080067d0 	.word	0x080067d0

0800618c <L_shift>:
 800618c:	f1c2 0208 	rsb	r2, r2, #8
 8006190:	0092      	lsls	r2, r2, #2
 8006192:	b570      	push	{r4, r5, r6, lr}
 8006194:	f1c2 0620 	rsb	r6, r2, #32
 8006198:	6843      	ldr	r3, [r0, #4]
 800619a:	6804      	ldr	r4, [r0, #0]
 800619c:	fa03 f506 	lsl.w	r5, r3, r6
 80061a0:	432c      	orrs	r4, r5
 80061a2:	40d3      	lsrs	r3, r2
 80061a4:	6004      	str	r4, [r0, #0]
 80061a6:	f840 3f04 	str.w	r3, [r0, #4]!
 80061aa:	4288      	cmp	r0, r1
 80061ac:	d3f4      	bcc.n	8006198 <L_shift+0xc>
 80061ae:	bd70      	pop	{r4, r5, r6, pc}

080061b0 <__match>:
 80061b0:	b530      	push	{r4, r5, lr}
 80061b2:	6803      	ldr	r3, [r0, #0]
 80061b4:	3301      	adds	r3, #1
 80061b6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80061ba:	b914      	cbnz	r4, 80061c2 <__match+0x12>
 80061bc:	6003      	str	r3, [r0, #0]
 80061be:	2001      	movs	r0, #1
 80061c0:	bd30      	pop	{r4, r5, pc}
 80061c2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80061c6:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 80061ca:	2d19      	cmp	r5, #25
 80061cc:	bf98      	it	ls
 80061ce:	3220      	addls	r2, #32
 80061d0:	42a2      	cmp	r2, r4
 80061d2:	d0f0      	beq.n	80061b6 <__match+0x6>
 80061d4:	2000      	movs	r0, #0
 80061d6:	e7f3      	b.n	80061c0 <__match+0x10>

080061d8 <__hexnan>:
 80061d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80061dc:	680b      	ldr	r3, [r1, #0]
 80061de:	6801      	ldr	r1, [r0, #0]
 80061e0:	115e      	asrs	r6, r3, #5
 80061e2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80061e6:	f013 031f 	ands.w	r3, r3, #31
 80061ea:	b087      	sub	sp, #28
 80061ec:	bf18      	it	ne
 80061ee:	3604      	addne	r6, #4
 80061f0:	2500      	movs	r5, #0
 80061f2:	1f37      	subs	r7, r6, #4
 80061f4:	4682      	mov	sl, r0
 80061f6:	4690      	mov	r8, r2
 80061f8:	9301      	str	r3, [sp, #4]
 80061fa:	f846 5c04 	str.w	r5, [r6, #-4]
 80061fe:	46b9      	mov	r9, r7
 8006200:	463c      	mov	r4, r7
 8006202:	9502      	str	r5, [sp, #8]
 8006204:	46ab      	mov	fp, r5
 8006206:	784a      	ldrb	r2, [r1, #1]
 8006208:	1c4b      	adds	r3, r1, #1
 800620a:	9303      	str	r3, [sp, #12]
 800620c:	b342      	cbz	r2, 8006260 <__hexnan+0x88>
 800620e:	4610      	mov	r0, r2
 8006210:	9105      	str	r1, [sp, #20]
 8006212:	9204      	str	r2, [sp, #16]
 8006214:	f7ff fd94 	bl	8005d40 <__hexdig_fun>
 8006218:	2800      	cmp	r0, #0
 800621a:	d151      	bne.n	80062c0 <__hexnan+0xe8>
 800621c:	9a04      	ldr	r2, [sp, #16]
 800621e:	9905      	ldr	r1, [sp, #20]
 8006220:	2a20      	cmp	r2, #32
 8006222:	d818      	bhi.n	8006256 <__hexnan+0x7e>
 8006224:	9b02      	ldr	r3, [sp, #8]
 8006226:	459b      	cmp	fp, r3
 8006228:	dd13      	ble.n	8006252 <__hexnan+0x7a>
 800622a:	454c      	cmp	r4, r9
 800622c:	d206      	bcs.n	800623c <__hexnan+0x64>
 800622e:	2d07      	cmp	r5, #7
 8006230:	dc04      	bgt.n	800623c <__hexnan+0x64>
 8006232:	462a      	mov	r2, r5
 8006234:	4649      	mov	r1, r9
 8006236:	4620      	mov	r0, r4
 8006238:	f7ff ffa8 	bl	800618c <L_shift>
 800623c:	4544      	cmp	r4, r8
 800623e:	d952      	bls.n	80062e6 <__hexnan+0x10e>
 8006240:	2300      	movs	r3, #0
 8006242:	f1a4 0904 	sub.w	r9, r4, #4
 8006246:	f844 3c04 	str.w	r3, [r4, #-4]
 800624a:	f8cd b008 	str.w	fp, [sp, #8]
 800624e:	464c      	mov	r4, r9
 8006250:	461d      	mov	r5, r3
 8006252:	9903      	ldr	r1, [sp, #12]
 8006254:	e7d7      	b.n	8006206 <__hexnan+0x2e>
 8006256:	2a29      	cmp	r2, #41	@ 0x29
 8006258:	d157      	bne.n	800630a <__hexnan+0x132>
 800625a:	3102      	adds	r1, #2
 800625c:	f8ca 1000 	str.w	r1, [sl]
 8006260:	f1bb 0f00 	cmp.w	fp, #0
 8006264:	d051      	beq.n	800630a <__hexnan+0x132>
 8006266:	454c      	cmp	r4, r9
 8006268:	d206      	bcs.n	8006278 <__hexnan+0xa0>
 800626a:	2d07      	cmp	r5, #7
 800626c:	dc04      	bgt.n	8006278 <__hexnan+0xa0>
 800626e:	462a      	mov	r2, r5
 8006270:	4649      	mov	r1, r9
 8006272:	4620      	mov	r0, r4
 8006274:	f7ff ff8a 	bl	800618c <L_shift>
 8006278:	4544      	cmp	r4, r8
 800627a:	d936      	bls.n	80062ea <__hexnan+0x112>
 800627c:	f1a8 0204 	sub.w	r2, r8, #4
 8006280:	4623      	mov	r3, r4
 8006282:	f853 1b04 	ldr.w	r1, [r3], #4
 8006286:	f842 1f04 	str.w	r1, [r2, #4]!
 800628a:	429f      	cmp	r7, r3
 800628c:	d2f9      	bcs.n	8006282 <__hexnan+0xaa>
 800628e:	1b3b      	subs	r3, r7, r4
 8006290:	f023 0303 	bic.w	r3, r3, #3
 8006294:	3304      	adds	r3, #4
 8006296:	3401      	adds	r4, #1
 8006298:	3e03      	subs	r6, #3
 800629a:	42b4      	cmp	r4, r6
 800629c:	bf88      	it	hi
 800629e:	2304      	movhi	r3, #4
 80062a0:	4443      	add	r3, r8
 80062a2:	2200      	movs	r2, #0
 80062a4:	f843 2b04 	str.w	r2, [r3], #4
 80062a8:	429f      	cmp	r7, r3
 80062aa:	d2fb      	bcs.n	80062a4 <__hexnan+0xcc>
 80062ac:	683b      	ldr	r3, [r7, #0]
 80062ae:	b91b      	cbnz	r3, 80062b8 <__hexnan+0xe0>
 80062b0:	4547      	cmp	r7, r8
 80062b2:	d128      	bne.n	8006306 <__hexnan+0x12e>
 80062b4:	2301      	movs	r3, #1
 80062b6:	603b      	str	r3, [r7, #0]
 80062b8:	2005      	movs	r0, #5
 80062ba:	b007      	add	sp, #28
 80062bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80062c0:	3501      	adds	r5, #1
 80062c2:	2d08      	cmp	r5, #8
 80062c4:	f10b 0b01 	add.w	fp, fp, #1
 80062c8:	dd06      	ble.n	80062d8 <__hexnan+0x100>
 80062ca:	4544      	cmp	r4, r8
 80062cc:	d9c1      	bls.n	8006252 <__hexnan+0x7a>
 80062ce:	2300      	movs	r3, #0
 80062d0:	f844 3c04 	str.w	r3, [r4, #-4]
 80062d4:	2501      	movs	r5, #1
 80062d6:	3c04      	subs	r4, #4
 80062d8:	6822      	ldr	r2, [r4, #0]
 80062da:	f000 000f 	and.w	r0, r0, #15
 80062de:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 80062e2:	6020      	str	r0, [r4, #0]
 80062e4:	e7b5      	b.n	8006252 <__hexnan+0x7a>
 80062e6:	2508      	movs	r5, #8
 80062e8:	e7b3      	b.n	8006252 <__hexnan+0x7a>
 80062ea:	9b01      	ldr	r3, [sp, #4]
 80062ec:	2b00      	cmp	r3, #0
 80062ee:	d0dd      	beq.n	80062ac <__hexnan+0xd4>
 80062f0:	f1c3 0320 	rsb	r3, r3, #32
 80062f4:	f04f 32ff 	mov.w	r2, #4294967295
 80062f8:	40da      	lsrs	r2, r3
 80062fa:	f856 3c04 	ldr.w	r3, [r6, #-4]
 80062fe:	4013      	ands	r3, r2
 8006300:	f846 3c04 	str.w	r3, [r6, #-4]
 8006304:	e7d2      	b.n	80062ac <__hexnan+0xd4>
 8006306:	3f04      	subs	r7, #4
 8006308:	e7d0      	b.n	80062ac <__hexnan+0xd4>
 800630a:	2004      	movs	r0, #4
 800630c:	e7d5      	b.n	80062ba <__hexnan+0xe2>

0800630e <__ascii_mbtowc>:
 800630e:	b082      	sub	sp, #8
 8006310:	b901      	cbnz	r1, 8006314 <__ascii_mbtowc+0x6>
 8006312:	a901      	add	r1, sp, #4
 8006314:	b142      	cbz	r2, 8006328 <__ascii_mbtowc+0x1a>
 8006316:	b14b      	cbz	r3, 800632c <__ascii_mbtowc+0x1e>
 8006318:	7813      	ldrb	r3, [r2, #0]
 800631a:	600b      	str	r3, [r1, #0]
 800631c:	7812      	ldrb	r2, [r2, #0]
 800631e:	1e10      	subs	r0, r2, #0
 8006320:	bf18      	it	ne
 8006322:	2001      	movne	r0, #1
 8006324:	b002      	add	sp, #8
 8006326:	4770      	bx	lr
 8006328:	4610      	mov	r0, r2
 800632a:	e7fb      	b.n	8006324 <__ascii_mbtowc+0x16>
 800632c:	f06f 0001 	mvn.w	r0, #1
 8006330:	e7f8      	b.n	8006324 <__ascii_mbtowc+0x16>

08006332 <_realloc_r>:
 8006332:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006336:	4680      	mov	r8, r0
 8006338:	4615      	mov	r5, r2
 800633a:	460c      	mov	r4, r1
 800633c:	b921      	cbnz	r1, 8006348 <_realloc_r+0x16>
 800633e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006342:	4611      	mov	r1, r2
 8006344:	f7fd bc88 	b.w	8003c58 <_malloc_r>
 8006348:	b92a      	cbnz	r2, 8006356 <_realloc_r+0x24>
 800634a:	f7fd fc11 	bl	8003b70 <_free_r>
 800634e:	2400      	movs	r4, #0
 8006350:	4620      	mov	r0, r4
 8006352:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006356:	f000 f8c4 	bl	80064e2 <_malloc_usable_size_r>
 800635a:	4285      	cmp	r5, r0
 800635c:	4606      	mov	r6, r0
 800635e:	d802      	bhi.n	8006366 <_realloc_r+0x34>
 8006360:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8006364:	d8f4      	bhi.n	8006350 <_realloc_r+0x1e>
 8006366:	4629      	mov	r1, r5
 8006368:	4640      	mov	r0, r8
 800636a:	f7fd fc75 	bl	8003c58 <_malloc_r>
 800636e:	4607      	mov	r7, r0
 8006370:	2800      	cmp	r0, #0
 8006372:	d0ec      	beq.n	800634e <_realloc_r+0x1c>
 8006374:	42b5      	cmp	r5, r6
 8006376:	462a      	mov	r2, r5
 8006378:	4621      	mov	r1, r4
 800637a:	bf28      	it	cs
 800637c:	4632      	movcs	r2, r6
 800637e:	f7ff fc43 	bl	8005c08 <memcpy>
 8006382:	4621      	mov	r1, r4
 8006384:	4640      	mov	r0, r8
 8006386:	f7fd fbf3 	bl	8003b70 <_free_r>
 800638a:	463c      	mov	r4, r7
 800638c:	e7e0      	b.n	8006350 <_realloc_r+0x1e>

0800638e <__ascii_wctomb>:
 800638e:	4603      	mov	r3, r0
 8006390:	4608      	mov	r0, r1
 8006392:	b141      	cbz	r1, 80063a6 <__ascii_wctomb+0x18>
 8006394:	2aff      	cmp	r2, #255	@ 0xff
 8006396:	d904      	bls.n	80063a2 <__ascii_wctomb+0x14>
 8006398:	228a      	movs	r2, #138	@ 0x8a
 800639a:	601a      	str	r2, [r3, #0]
 800639c:	f04f 30ff 	mov.w	r0, #4294967295
 80063a0:	4770      	bx	lr
 80063a2:	700a      	strb	r2, [r1, #0]
 80063a4:	2001      	movs	r0, #1
 80063a6:	4770      	bx	lr

080063a8 <fiprintf>:
 80063a8:	b40e      	push	{r1, r2, r3}
 80063aa:	b503      	push	{r0, r1, lr}
 80063ac:	4601      	mov	r1, r0
 80063ae:	ab03      	add	r3, sp, #12
 80063b0:	4805      	ldr	r0, [pc, #20]	@ (80063c8 <fiprintf+0x20>)
 80063b2:	f853 2b04 	ldr.w	r2, [r3], #4
 80063b6:	6800      	ldr	r0, [r0, #0]
 80063b8:	9301      	str	r3, [sp, #4]
 80063ba:	f7ff f991 	bl	80056e0 <_vfiprintf_r>
 80063be:	b002      	add	sp, #8
 80063c0:	f85d eb04 	ldr.w	lr, [sp], #4
 80063c4:	b003      	add	sp, #12
 80063c6:	4770      	bx	lr
 80063c8:	20000030 	.word	0x20000030

080063cc <__swhatbuf_r>:
 80063cc:	b570      	push	{r4, r5, r6, lr}
 80063ce:	460c      	mov	r4, r1
 80063d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80063d4:	2900      	cmp	r1, #0
 80063d6:	b096      	sub	sp, #88	@ 0x58
 80063d8:	4615      	mov	r5, r2
 80063da:	461e      	mov	r6, r3
 80063dc:	da0d      	bge.n	80063fa <__swhatbuf_r+0x2e>
 80063de:	89a3      	ldrh	r3, [r4, #12]
 80063e0:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80063e4:	f04f 0100 	mov.w	r1, #0
 80063e8:	bf14      	ite	ne
 80063ea:	2340      	movne	r3, #64	@ 0x40
 80063ec:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80063f0:	2000      	movs	r0, #0
 80063f2:	6031      	str	r1, [r6, #0]
 80063f4:	602b      	str	r3, [r5, #0]
 80063f6:	b016      	add	sp, #88	@ 0x58
 80063f8:	bd70      	pop	{r4, r5, r6, pc}
 80063fa:	466a      	mov	r2, sp
 80063fc:	f000 f848 	bl	8006490 <_fstat_r>
 8006400:	2800      	cmp	r0, #0
 8006402:	dbec      	blt.n	80063de <__swhatbuf_r+0x12>
 8006404:	9901      	ldr	r1, [sp, #4]
 8006406:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800640a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800640e:	4259      	negs	r1, r3
 8006410:	4159      	adcs	r1, r3
 8006412:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8006416:	e7eb      	b.n	80063f0 <__swhatbuf_r+0x24>

08006418 <__smakebuf_r>:
 8006418:	898b      	ldrh	r3, [r1, #12]
 800641a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800641c:	079d      	lsls	r5, r3, #30
 800641e:	4606      	mov	r6, r0
 8006420:	460c      	mov	r4, r1
 8006422:	d507      	bpl.n	8006434 <__smakebuf_r+0x1c>
 8006424:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8006428:	6023      	str	r3, [r4, #0]
 800642a:	6123      	str	r3, [r4, #16]
 800642c:	2301      	movs	r3, #1
 800642e:	6163      	str	r3, [r4, #20]
 8006430:	b003      	add	sp, #12
 8006432:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006434:	ab01      	add	r3, sp, #4
 8006436:	466a      	mov	r2, sp
 8006438:	f7ff ffc8 	bl	80063cc <__swhatbuf_r>
 800643c:	9f00      	ldr	r7, [sp, #0]
 800643e:	4605      	mov	r5, r0
 8006440:	4639      	mov	r1, r7
 8006442:	4630      	mov	r0, r6
 8006444:	f7fd fc08 	bl	8003c58 <_malloc_r>
 8006448:	b948      	cbnz	r0, 800645e <__smakebuf_r+0x46>
 800644a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800644e:	059a      	lsls	r2, r3, #22
 8006450:	d4ee      	bmi.n	8006430 <__smakebuf_r+0x18>
 8006452:	f023 0303 	bic.w	r3, r3, #3
 8006456:	f043 0302 	orr.w	r3, r3, #2
 800645a:	81a3      	strh	r3, [r4, #12]
 800645c:	e7e2      	b.n	8006424 <__smakebuf_r+0xc>
 800645e:	89a3      	ldrh	r3, [r4, #12]
 8006460:	6020      	str	r0, [r4, #0]
 8006462:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006466:	81a3      	strh	r3, [r4, #12]
 8006468:	9b01      	ldr	r3, [sp, #4]
 800646a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800646e:	b15b      	cbz	r3, 8006488 <__smakebuf_r+0x70>
 8006470:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006474:	4630      	mov	r0, r6
 8006476:	f000 f81d 	bl	80064b4 <_isatty_r>
 800647a:	b128      	cbz	r0, 8006488 <__smakebuf_r+0x70>
 800647c:	89a3      	ldrh	r3, [r4, #12]
 800647e:	f023 0303 	bic.w	r3, r3, #3
 8006482:	f043 0301 	orr.w	r3, r3, #1
 8006486:	81a3      	strh	r3, [r4, #12]
 8006488:	89a3      	ldrh	r3, [r4, #12]
 800648a:	431d      	orrs	r5, r3
 800648c:	81a5      	strh	r5, [r4, #12]
 800648e:	e7cf      	b.n	8006430 <__smakebuf_r+0x18>

08006490 <_fstat_r>:
 8006490:	b538      	push	{r3, r4, r5, lr}
 8006492:	4d07      	ldr	r5, [pc, #28]	@ (80064b0 <_fstat_r+0x20>)
 8006494:	2300      	movs	r3, #0
 8006496:	4604      	mov	r4, r0
 8006498:	4608      	mov	r0, r1
 800649a:	4611      	mov	r1, r2
 800649c:	602b      	str	r3, [r5, #0]
 800649e:	f7fb fc53 	bl	8001d48 <_fstat>
 80064a2:	1c43      	adds	r3, r0, #1
 80064a4:	d102      	bne.n	80064ac <_fstat_r+0x1c>
 80064a6:	682b      	ldr	r3, [r5, #0]
 80064a8:	b103      	cbz	r3, 80064ac <_fstat_r+0x1c>
 80064aa:	6023      	str	r3, [r4, #0]
 80064ac:	bd38      	pop	{r3, r4, r5, pc}
 80064ae:	bf00      	nop
 80064b0:	2000076c 	.word	0x2000076c

080064b4 <_isatty_r>:
 80064b4:	b538      	push	{r3, r4, r5, lr}
 80064b6:	4d06      	ldr	r5, [pc, #24]	@ (80064d0 <_isatty_r+0x1c>)
 80064b8:	2300      	movs	r3, #0
 80064ba:	4604      	mov	r4, r0
 80064bc:	4608      	mov	r0, r1
 80064be:	602b      	str	r3, [r5, #0]
 80064c0:	f7fb fc52 	bl	8001d68 <_isatty>
 80064c4:	1c43      	adds	r3, r0, #1
 80064c6:	d102      	bne.n	80064ce <_isatty_r+0x1a>
 80064c8:	682b      	ldr	r3, [r5, #0]
 80064ca:	b103      	cbz	r3, 80064ce <_isatty_r+0x1a>
 80064cc:	6023      	str	r3, [r4, #0]
 80064ce:	bd38      	pop	{r3, r4, r5, pc}
 80064d0:	2000076c 	.word	0x2000076c

080064d4 <abort>:
 80064d4:	b508      	push	{r3, lr}
 80064d6:	2006      	movs	r0, #6
 80064d8:	f000 f834 	bl	8006544 <raise>
 80064dc:	2001      	movs	r0, #1
 80064de:	f7fb fbe3 	bl	8001ca8 <_exit>

080064e2 <_malloc_usable_size_r>:
 80064e2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80064e6:	1f18      	subs	r0, r3, #4
 80064e8:	2b00      	cmp	r3, #0
 80064ea:	bfbc      	itt	lt
 80064ec:	580b      	ldrlt	r3, [r1, r0]
 80064ee:	18c0      	addlt	r0, r0, r3
 80064f0:	4770      	bx	lr

080064f2 <_raise_r>:
 80064f2:	291f      	cmp	r1, #31
 80064f4:	b538      	push	{r3, r4, r5, lr}
 80064f6:	4605      	mov	r5, r0
 80064f8:	460c      	mov	r4, r1
 80064fa:	d904      	bls.n	8006506 <_raise_r+0x14>
 80064fc:	2316      	movs	r3, #22
 80064fe:	6003      	str	r3, [r0, #0]
 8006500:	f04f 30ff 	mov.w	r0, #4294967295
 8006504:	bd38      	pop	{r3, r4, r5, pc}
 8006506:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8006508:	b112      	cbz	r2, 8006510 <_raise_r+0x1e>
 800650a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800650e:	b94b      	cbnz	r3, 8006524 <_raise_r+0x32>
 8006510:	4628      	mov	r0, r5
 8006512:	f000 f831 	bl	8006578 <_getpid_r>
 8006516:	4622      	mov	r2, r4
 8006518:	4601      	mov	r1, r0
 800651a:	4628      	mov	r0, r5
 800651c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006520:	f000 b818 	b.w	8006554 <_kill_r>
 8006524:	2b01      	cmp	r3, #1
 8006526:	d00a      	beq.n	800653e <_raise_r+0x4c>
 8006528:	1c59      	adds	r1, r3, #1
 800652a:	d103      	bne.n	8006534 <_raise_r+0x42>
 800652c:	2316      	movs	r3, #22
 800652e:	6003      	str	r3, [r0, #0]
 8006530:	2001      	movs	r0, #1
 8006532:	e7e7      	b.n	8006504 <_raise_r+0x12>
 8006534:	2100      	movs	r1, #0
 8006536:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800653a:	4620      	mov	r0, r4
 800653c:	4798      	blx	r3
 800653e:	2000      	movs	r0, #0
 8006540:	e7e0      	b.n	8006504 <_raise_r+0x12>
	...

08006544 <raise>:
 8006544:	4b02      	ldr	r3, [pc, #8]	@ (8006550 <raise+0xc>)
 8006546:	4601      	mov	r1, r0
 8006548:	6818      	ldr	r0, [r3, #0]
 800654a:	f7ff bfd2 	b.w	80064f2 <_raise_r>
 800654e:	bf00      	nop
 8006550:	20000030 	.word	0x20000030

08006554 <_kill_r>:
 8006554:	b538      	push	{r3, r4, r5, lr}
 8006556:	4d07      	ldr	r5, [pc, #28]	@ (8006574 <_kill_r+0x20>)
 8006558:	2300      	movs	r3, #0
 800655a:	4604      	mov	r4, r0
 800655c:	4608      	mov	r0, r1
 800655e:	4611      	mov	r1, r2
 8006560:	602b      	str	r3, [r5, #0]
 8006562:	f7fb fb91 	bl	8001c88 <_kill>
 8006566:	1c43      	adds	r3, r0, #1
 8006568:	d102      	bne.n	8006570 <_kill_r+0x1c>
 800656a:	682b      	ldr	r3, [r5, #0]
 800656c:	b103      	cbz	r3, 8006570 <_kill_r+0x1c>
 800656e:	6023      	str	r3, [r4, #0]
 8006570:	bd38      	pop	{r3, r4, r5, pc}
 8006572:	bf00      	nop
 8006574:	2000076c 	.word	0x2000076c

08006578 <_getpid_r>:
 8006578:	f7fb bb7e 	b.w	8001c78 <_getpid>

0800657c <_init>:
 800657c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800657e:	bf00      	nop
 8006580:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006582:	bc08      	pop	{r3}
 8006584:	469e      	mov	lr, r3
 8006586:	4770      	bx	lr

08006588 <_fini>:
 8006588:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800658a:	bf00      	nop
 800658c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800658e:	bc08      	pop	{r3}
 8006590:	469e      	mov	lr, r3
 8006592:	4770      	bx	lr
